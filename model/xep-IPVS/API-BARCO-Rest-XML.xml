<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" 
    "C:/docbook/docbook-xml-4.5/docbookx.dtd" [
  <!ENTITY SessionObjectXML SYSTEM "Session.xml">
  <!ENTITY SessionObjectXSD SYSTEM "Session.xsd">
]>
<?xml-stylesheet type='text/xsl' 
    href='http://docbook.sourceforge.net/release/xsl/current/html/docbook.xsl' xmlns:fo='http://www.w3.org/1999/XSL/Format' ?>
<book status="final">
	<bookinfo>
		<title>REST XML API</title>
		<revhistory>
		<revision>
				<revnumber>1.1</revnumber>
				<date>25 Sep 2014</date>
				<revremark>Updated 4.1 to 4.2 summary</revremark>
        </revision>
		<revision>
				<revnumber>1.0</revnumber>
				<date>2 Jun 2014</date>
				<revremark>Updated the status and document version</revremark>
			</revision>
		<revision>
				<revnumber>0.1.8</revnumber>
				<date>23 May 2014</date>
				<revremark>Updated Note for Headers in Notification Channel, Note about URLs when destination info is missing. Special Characters in APIs</revremark>
			</revision>
			<revision>
				<revnumber>0.1.7</revnumber>
				<date>1 May 2014</date>
				<revremark>Added whereDownloadState to filter the cached files in the system </revremark>
			</revision>
			<revision>
				<revnumber>0.1.6</revnumber>
				<date>23 Apr 2014</date>
				<revremark>Removed streamingURL from file/port responses </revremark>
			</revision>
			<revision>
				<revnumber>0.1.5</revnumber>
				<date>15 Apr 2014</date>
				<revremark>Added TrimFile API </revremark>
			</revision>
			<revision>
				<revnumber>0.1.4</revnumber>
				<date>7 Apr 2014</date>
				<revremark>Updated Port, File, Bookmark and record API </revremark>
			</revision>
		<revision>
				<revnumber>0.1.3</revnumber>
				<date>24 Mar 2014</date>
				<revremark>Updated ServiceLogin API description and REST API Tutorial using BarcoRESTdiagnostics tool </revremark>
		</revision>
		<revision>
				<revnumber>0.1.2</revnumber>
				<date>21 Feb 2014</date>
				<revremark>Updated GetFile and GetPort responses with streamingURL for
						BASICURL and EXTENDEDURL formats </revremark>
			</revision>
			<revision>
				<revnumber>0.1.1</revnumber>
				<date>18 Sep 2013</date>
				<revremark>Appendix for REST API tutorial added, updated some examples</revremark>
			</revision>
			<revision>
				<revnumber>0.1.0</revnumber>
				<date>19 Jun 2013</date>
				<revremark>First Version of REST API</revremark>
			</revision>
		</revhistory>
	</bookinfo>
	<glossary>
		<glossentry>
	      <glossterm>REST Message</glossterm>
	      <glossdef>
	        <para>
	        	The REST message module uses HTTP Headers and functions to retrieve, create, update, or delete data 
	        	on a web services server based on REST architecture
	        </para>
	      </glossdef>
	    </glossentry>
	</glossary>
	<preface>
		<title>Introduction</title>
		<section>
    		<title>Version</title>
    		<para>
   		 	<simplelist>
    			<member>Document Version = 1.0</member>
        		<member>Service Version = 2.32.3</member>
        		<member>Software Version = 4.2.x</member>
    		</simplelist>    
    		</para>
   		</section>
		<para>
			This document contains the description of the REST XML RPC calls
		</para>
		<para>Headers Example</para>
		<table border="1">
		<title>Sample Request Headers for every API call</title>
  			<tr>
				<td>Authorization</td>
    			<td>Basic c3JjcmVsYXkxQHNyY3BjMTpzcmNyZWxheTE=</td>
			</tr>
			<tr>
				<td>Accept Header(No spaces or newlines)</td>
    			<td>application/vnd.barco.nimbus.Device+xml</td>
			</tr>
			<tr>
				<td>Content-Type</td>
				<td>application/xml</td>
			</tr>
			<tr>
				<td>Resource Header</td>
    			<td>X-Barco-resource web-client_barco</td>
			</tr>
		</table>
		<para>
		 <itemizedlist>
	 	<listitem>
			<para> Every REST API call in the document uses this as the Base URL : http://{sc_ip_addr}/controller/{ResoucePath}?{QueryParameters}</para>
		</listitem>
		<listitem>
			<para> Authorization is basic http authorization using base64 encoded username:password</para>
		</listitem>
		<listitem>
			<para> X-Barco-resource is a custom header which accepts the resource name in the system. The resource name is of the format: 'resource_username' as shown in sample above.</para>
		</listitem>
		<listitem>
			<para> Accept Header specifies the format in which you expect a response. Some calls in the document use
custom Accept Headers as shown in sample above</para>
		</listitem>
		<listitem>
			<para> Content-Type Header specifies the format in which you POST content to the system as shown in sample above</para>
		</listitem>
		<listitem>
			<para> Each call in the document specifies the ResourcePath and QueryParameters corresponding to that call.</para>
		</listitem>
		
	 </itemizedlist>
	</para>
		
	</preface>
	
	<chapter>				
		<title>Service API</title>
		<para> 
			API Calls used in Service			
		</para>	
		 <section>
        <title>ServiceLogin</title>
        <para>
         
          <itemizedlist>
					<listitem>
						<para>  During this process the client's contact Info and state are	updated in the Server DB</para>
					</listitem>
					<listitem>
						<para>  The client version number can be obtained from the Version section of the API document corresponding to the client implementation</para>
					</listitem>
					<listitem>
						<para>  ClientTemplateTitle is required to be specified. The server will create a client using the data available for the clientTemplate. 
						Same resource should be used for the custom header X-Barco-resource</para>
					</listitem>
					<listitem>
						<para>  Login API only supports a web client resource added in the system to used for clientTemplateTitle. e.g. web-client</para>
					</listitem>
					<listitem>
						<para> clientPrivateKey is an optional value in case the resource in the system has a password</para>
					</listitem>
		
				</itemizedlist>
        </para>
        
        <example>
          <title>Service Login Request</title>
          <table border="1">
          <title>Service Login Request</title>
          		<tr>
					<td>Request</td>
    				<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Service/Login</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		  </table>
          <programlisting>
            <![CDATA[
  <ServiceLogin clientVersion="">
    <clientPrivateKey/>
    <clientTemplateTitle/>
  </ServiceLogin>
  
  For E.g.

  <ServiceLogin clientVersion="2.31.6">
    <clientTemplateTitle>webclient</clientTemplateTitle>
  </ServiceLogin>
]]>
          </programlisting>
        </example>
        <para>
				NOTE: If all is well, the response will contain a Long Polling URL in the response headers.
				Client is required to keep polling the server with an HTTP GET on this URL 'X-Barco-notification-channel'. 
				This request requires the same set of headers as any other request. Please refer to the Introduction section above for set of required Headers for every request.
				The server can send asynchronous notifications to the client as response to this request.
				Every response comes back with a new URL in 'X-Barco-notification-channel' response header.
				There may or may not be notifications in the notificationlist returned in response for the long polling URL. 
			</para>
			<para>
          <example>
            <title>Service Login Response</title>
            <programlisting>
              <![CDATA[
  <ServiceLogin>
    <serverDate/>
    <clientPrivateData/>
  </ServiceLogin>
]]>
            </programlisting>
          </example>
        </para>
      </section> 
      <section>
        <title>ServiceLogout</title>
       
        
        <para> This will make the user presence off-line and remove the user from the system's local cache. This will cause the Long-Polling channel associated with the user to be terminated.
				Clients that are long-polling using the URL in X-Barco-notification-channel, will see the poll requests failing and should handle them appropriately. 
			</para>
        <example>
          <title>Service Logout Request</title>
          <table border="1">
          <title>Service Logout Request</title>
          		<tr>
					<td>Request</td>
    				<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Service/Logout</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		  </table>
        </example>
        <example>
					<title>Service Logout Response</title>
					<programlisting>
              <![CDATA[
  				username: User removed successfully!
			]]>
            </programlisting>
				</example>
      </section>    					   					
		<section>
			<title>Audit Event</title>
			<para> It is an event to log user actions. Each event is saved as a single line (newline characters are not supported in the request) in a file on the management server. This request is an input to audit report.</para>
			<para> This is a list of parameters for an audit event request. </para>
			<itemizedlist>
         	<listitem>
				<para>
					<parameter>type</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			 <listitem>
				<para>
					<parameter>name</parameter>
					<optional>Required</optional>
				</para>				
			</listitem>		  	
			<listitem>
				<para>
					<parameter>level="error/warning/info/debug/trace"</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
		    <listitem>
				<para>
					<parameter>target</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>status</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>text</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
		</itemizedlist>
			<example>
				<title>Audit Event Request</title>
				<table border="1">
				<title>Audit Event Request</title>
  				<tr>
					<td>Request</td>
    				<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Service/AuditEvent</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		 	 </table>
				<programlisting>
	            <![CDATA[
		     <AuditEvent type='' level='' name='' target='' status=''> 
				<Description text=''/>
			 </AuditEvent>	    
	       ]]>
		    </programlisting>			
			</example>
			<example>
				<title>Audit Event Response</title>
				<programlisting>
	            <![CDATA[
		    <AuditEvent/>			
	         ]]>
	          </programlisting>
			</example>
		</section>
		
		<section>
        <title>Get Service Client</title>
        <para>
          This will return the logged in client information         
        </para>
        <example>
          <title>Get Service Client Request</title>
          	<table border="1">
          	<title>Get Service Client Request</title>
          		<tr>
					<td>Request</td>
    				<td>HTTP GET</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>whereContactJID, selectFormat</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Service/ServiceClient</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		  </table>
          <itemizedlist>
		  	<listitem>
				<para>
					<parameter>whereContactJID=""</parameter>
					<optional>Optional</optional>									
				</para>
			</listitem>
		 </itemizedlist>
        </example>
        <example>
          <title>Get Service Client  Response - BASIC Format</title>
          <programlisting>
            <![CDATA[
	   <GetServiceClient>
			<User NID='' userName='' externalAuthentication=''>
				<UserPrivateData />
				<Groups />
			</User>
			<Asset NID='' title='' state='' presence='' type=''>
				<AssetPrivateKey>
					<KeySchema />
					<KeyData />
				</AssetPrivateKey>
				<AssetPrivateData />
				<Groups />
				<FeatureList>
					<Feature Name=""></Feature>
				</FeatureList>
			</Asset>
			<PortList>
				<Port NID='' title='' streamType='' presence='' state=''
					portType='' >
					<Groups/>
					<FeatureList>
					  <Feature name=''/>
					</FeatureList>					
				</Port>
			</PortList>
			<Device NID=''/>
			<Permissions>
				<User add='' modify='' delete='' read='' />
				<Device add='' modify='' delete='' read='' />
				<Profile add='' modify='' delete='' read='' />
				<Port add=''  modify='' delete='' read='' viewfrom='' streamto=''/>
				<File modify='' delete='' read='' export='' playback='' />
				<Dir update='' delete='' read='' import='' playback='' record=''/>
				<SessionConfig add='' modify='' delete='' read='' />
				<Policy add='' modify='' delete='' read=''/>
				<System upgrade='' restore='' backup='' report='' sessionmanagement='' />
			</Permissions>
		</GetServiceClient>]]>
          </programlisting>
        </example>
        <example>
          <title>Get Service Client  Response - EXTENDED Format</title>
          <programlisting>
            <![CDATA[
	    <GetServiceClient>
			<User NID='' userName=''>
				<UserPrivateData />
				<Groups />
			</User>
			<Asset NID='' title='' state='' presence='' type=''>
				<AssetPrivateKey>
					<KeySchema />
					<KeyData />
				</AssetPrivateKey>
				<AssetPrivateData/>
				<Groups />
				<FeatureList>
					<Feature Name=""></Feature>
				</FeatureList>
			</Asset>
			<PortList>
				<Port NID='' title='' streamType='' presence='' state=''
					portType='' >
					<Groups/>
					<FeatureList>
					  <Feature name=''/>
					</FeatureList>
					<ObserverInfoList>
				      <Observer xAuth='' monitor=''>
				         <UserNID></UserNID>
				         <ResourceNID></ResourceNID>
				      </Observer>
   					</ObserverInfoList>
   					<StreamURL></StreamURL>
				</Port>
			</PortList>
			<Device NID=''>
			  <System>
					<NTPClient enabled='true/false' serverIP='' />
			  </System>
			]]>
			</programlisting>
			</example>
			<example>
          <title>Get Service Client  Response - EXTENDED Format  <optional>Continue</optional> </title>
          <programlisting>			<![CDATA[
			  <Services>
					<HTTPServer enabled='true/false' />
					<SSHServer enabled='true/false' />
					<TelnetServer enabled='true/false' />
					<TFTPServer enabled='true/false' />
					<XMPPServer enabled='true/false' port='' dailyBackup='Yes/No'
						backupTime='' enableExport='' recoveryMode='' />
					<XMPPAgent enabled='true/false' xmppServer='' userName=''
						domain=''>
						<AdminAgent enalbed='true/false' />
						<ConfigAgent enalbed='true/false' />
						<DestinationAgent enalbed='true/false' />
						<SourceAgent enalbed='true/false' />
						<XAuthAgent enalbed='true/false' />
						<PortCtrlAgent enalbed='true/false' />
					</XMPPAgent>
					<StreamingServer enabled='true/false'>
						<TXcntrlPorts from='' to='' />
						<V2DRxPorts from='' to='' />
						<MPEGTSRXPorts from='' to='' />
						<UDPRXPorts from='' to='' />
						<RTPRXPorts from='' to='' />
						<MulticastIP from='' to='' />
					</StreamingServer>
					<DHCPServer enabled='true/false' startIP='' endIP='' publishedDNSServer='' />
					<NTPServer enabled='true/false' serverIP='' />
				</Services>
			  <Network isPrimaryEnabled='' hostName='' DNSServerIP=''
					DNSName=''>
					<EthernetPortList>
						<EthernetPort  listIndex=''  isPrimary='' portID='' enabled='true/false'
							multicast='true/false' ipAddress='' useDHCP='true/false' netmask=''/>
					</EthernetPortList>
					<NATTable>
						<NAT name='' listIndex='' ip='' />
					</NATTable>		
					<RouteTable>
						    <Route listIndex='' destination='' netmask='' gateway=''/>
					</RouteTable>			
				</Network>
				<Storage hardDriveEnabled='' NASEnabled=''>
					<HardDiskList>
						<HardDisk name='' mountPoint='' />
					</HardDiskList>
					<NASList>
						<NAS name='' enabled='' server='' readOnly='true/false' />
					</NASList>
				</Storage>
				]]>
          </programlisting>
        </example>   
        <example>
         <title>Get Service Client  Response - EXTENDED Format<optional>Continue</optional> </title>
          <programlisting>			<![CDATA[
	 		<AVCodec>
			<Port id=''>
				<Displayconfig type='IPVSClientDisplayConfig'>
				  <Display configurable="" hres="AUTO" vres="AUTO">
				      <Panel id="" enable="" content="">
				         <Geometry zIndex="" border="" vpos="0" 
				               hpos="0" vres="100%" hres="100%" 
				               aspect="" transparency="">
				         </Geometry>
				      </Panel>
				  </Display>
				
				  <Canvas id="" hres="1280" vres="1024">
				     <Background enable="" zIndex="" content="">
				        <ImageContent imageURL="" color=""></ImageContent>
				        <SessionContent enableConnPanel="" enableBookmarkPanel="" 
				                        enableCtrlPanel="" enableHeaderPanel=""
				                        enablePlayerPanel="" sessionId="">
				         </SessionContent>
				     </Background>
				
				     <Layout id="LayoutId1" type="" nRow="" nCol="" colWidth="" 
				             rowHeight="" hpad="" vpad="" stripPos="" nStrip="" 
				             border="hide" borderStyle="[8px]" header="hide" 
				             headerStyle="basic" active="true">
				     </Layout>
				     
				     <Window id="Win1" content="">
				        <ConnectionContent MediaStreamIOPortTypeTitle="" 
				                           MediaStreamIOPortElementID="" 
				                           sessionId="" connId="" vres="" 
				                           hres="" srcKbmCtrl="">
				        </ConnectionContent>
				        <ThumbnailContent MediaStreamIOPortTypeTitle="" 
				                          MediaStreamIOPortElementID="" 
				                          imageURL="" refreshInterval="">
				        </ThumbnailContent>
				        <Properties zIndex="100" border="" vpos="0" hpos="0"
				                    vres="100%" hres="100%" aspect="" 
				                    transparency="0" layoutId="LayoutId1" 
				                    layoutPos="" visibility="true" 
				                    maximize="false" fps="15" 
				                    scale="fitWindow" mute="false" 
				                    volume="50%" remoteKbmCtrl="false" 
				                    scrollHPos="0" scrollVPos="0">
				        </Properties>  
				      </Window>
				  </Canvas>
				</Displayconfig>
				]]>
          </programlisting>
        </example>   
        <example>
          <title>Get Service Client  Response - EXTENDED Format<optional>Continue</optional> </title>
          <programlisting>			<![CDATA[
						<Displayconfig type='XP200DisplayConfig'>
							<DisplayType>Remote</DisplayType>
							<OverlayType>Manual</OverlayType>
							<Override>None</Override>
							<KeepAspect>true</KeepAspect>
							<Aspect>Auto</Aspect>
							<HorizontalTransformation>Scale/Source</HorizontalTransformation>
							<HorizontalScale>100</HorizontalScale>
							<HorizontalResolution>0</HorizontalResolution>
							<VerticalTransformation>Scale/Source</VerticalTransformation>
							<VerticalScale>100</VerticalScale>
							<VerticalResolution>0</VerticalResolution>
							<HorizontalPosition>Location</HorizontalPosition>
							<HorizontalLocation>Left</HorizontalLocation>
							<VerticalPosition>Location</VerticalPosition>
							<VerticalLocation>Top</VerticalLocation>
							<HorizontalOffset>0</HorizontalOffset>
							<VerticalOffset>0</VerticalOffset>
							<Transparency>0</Transparency>
						</Displayconfig>
					</Port>
				</AVCodec>	
			</Device>
		</GetServiceClient>	]]>
          </programlisting>
        </example>        
      </section> 
      <section>
			<title>Register User</title>
			<para>Register user in database. Self Registration on the MS should be enabled to use this API. Use the bootstrap wizard available at http://{ms_ip_address} to enable self registration</para>
			<para> This is a list of parameters for RegisterUser request.</para>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>name</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>password</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
			</itemizedlist>
			<example>
				<title>Register User Request</title>
				<table border="1">
				<title>Register User Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 500, 204, 403</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>None</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Service/RegisterUser OR /RegisterUser(deprecated)</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  	</table>
				<programlisting>
					<![CDATA[
			<User name='' password=''>
		    </User>
		       		]]>
				</programlisting>
			</example>
		</section>
     
	</chapter>
	<chapter>
		<title>Resource API</title>
		<para>
			API Calls used in Resource
		</para>
		<section>
        <title>Parameter Listing</title>
        <para>
          This is the list of common parameters in Get Requests
        </para>
        <itemizedlist>
         <listitem>
				<para>
					<parameter>startFrom</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
			 <listitem>
				<para>
					<parameter>countToFetch</parameter>
					<optional>Optional</optional>
				</para>
				<para>
				If the countToFetch is -1 , then it should get entire list of objects .
				</para>
			</listitem>
		  <listitem>
				<para>
					<parameter>sortBy=""</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
			 <listitem>
				<para>
					<parameter>sortOrder="ascending/descending"</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
		    <listitem>
				<para>
					<parameter>selectFormat="BASIC/EXTENDED"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>whereNID='nid1,nid2,nid3'</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>whereTagExpr="Name%3D'Location' and Value%3D'Sunnyvale'"</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
				
			<listitem>
				<para>
					<parameter>whereTextSubStr=""</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>subscriptionScope=ALLNODES</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>subscriptionID</parameter>
					<optional>Optional</optional>
				</para>
			</listitem>
		</itemizedlist>				 
      </section>
		<section>
			<title>Device</title>
			<para>API calls used for Devices</para>
		<section>
	        <title>Get Device </title>        
	        <para>                 
	          Lists the devices present in the database.
	        </para>
			<example>
	          <title>Get Device Request</title>
	          <table border="1">
	          <title>Get Device Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Device+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>sortBy, sortOrder, selectFormat, whereNID, whereTitle, whereType, whereTextSubStr, whereTagExpr</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Device</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
			   <listitem>
					<para>
						<parameter>sortBy="title/type"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>sortOrder="ascending/descending"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereNID</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereTitle</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereType="IPVSClient-Device/Proxy-Device/WebClient-Device/DMS-25-Device/DMS-100-Device/DMS-120-Device/DMS-200-Device/
								   DMS-1000-Device/DMS-1200-Device/DMS-1500-Device/DMS-1600-Device/DMS-1700-Device/
						           MPEGTS-Rx-Device/MPEGTS-Tx-Device/MS-25-Device/MS-Device/RTP-Tx-Device/RTP-Rx-Device/
						           UDP-Tx-Device/UDP-Rx-Device/V2D-Tx-Device/V2D-Rx-Device/V2D-XP100-Device/V2D-XP200-Device/
						           V2D-XP200S-Device/V2D-XP220-Device/V2D-XP220S-Device/V2D-XPi-Device"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereTextSubStr</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereTagExpr="Name%3D'Location' and Value%3D'Sunnyvale'"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>subscriptionID</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
			  </itemizedlist>
			</example>
        	<example>
          		<title>Get Device Response - BASIC Format</title>
          		<programlisting>
            		<![CDATA[
		<Resource from='0' total='0'>
			<Device NID='' title='' type='' description='' presence='' state='' password='' ownerUserJID='' softwareVersion=''
				unManaged='true/false' unManned='true/false' msStatus='Active/Primary/PrimaryStandby/Secondary/SecondaryStandby'>
				<Groups>
					<Tag name='' value='' />
				</Groups>
				<DevicePrivateData />			
				<TemplateNID />			
				<PortList>
					<Port NID='' portType='' deviceElementID='' />					
				</PortList>						
				<Status device='' systemElements='' serviceElements='' hardDisk='' NAS='' networkElements='' />	
				<DeviceList>
					<Device NID='' title='' type='WebClient-Device' description='' presence='' state='' password='' ownerUserJID='' softwareVersion=''
				unManaged='true/false' unManned='true/false' msStatus='Active/Primary/PrimaryStandby/Secondary/SecondaryStandby'>
						<Groups>
							<Tag name='' value='' />
						</Groups>
						<DevicePrivateData />			
						<TemplateNID />			
						<PortList>
							<Port NID='' portType='' deviceElementID='' />					
						</PortList>						
						<Status device='' systemElements='' serviceElements='' hardDisk='' NAS='' networkElements='' />	
					</Device>
				</DeviceList>										
			</Device>
		</Resource>	
				]]>
          		</programlisting>
			</example>
		</section>
		<section>
			<title>AddDevice</title>
			<para>Add device in database</para>
			<para> This is a list of parameters for add device request. </para>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>type</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>title</parameter>
						<optional>Required[Does not allow XML restricted special characters]</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>description</parameter>
						<optional>optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>password</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>unManned</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>unManaged</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>applyTagsToPorts</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>Groups</parameter>
						<optional>optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>DevicePrivateData</parameter>
						<optional>optional</optional>
					</para>
				</listitem>
			</itemizedlist>
			<example>
				<title>Add Device Request</title>
				<table border="1">
				<title>Add Device Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Device+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>201, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>None</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Device</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  	</table>
				<programlisting>
					<![CDATA[
			<Device type='' title='' description='' password='' unManaged='true/false' unManned='true/false' applyTagsToPorts='true/false'>
				<Groups>
					<Tag Name='' Value='' />
				</Groups>
				<DevicePrivateData />			
			</Device>
		       		]]>
				</programlisting>
			</example>
			<example>
				<title>Add Device Response</title>
				<programlisting>
		            <![CDATA[
		        <Resource>
			     	<!-- Check Device Object Response XML-->
			    </Resource>
		         ]]>
				</programlisting>
			</example>
		</section>
		<section>
			<title>DeleteDevice</title>
			<para>Delete device from database</para>
			<example>
				<title>Delete Device Request</title>
				<table border="1">
				<title>Delete Device Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP DELETE</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Device+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID or title</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Device</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  	</table>
			</example>
			<example>
				<title>Delete Device Response</title>
				<programlisting>
				     <![CDATA[
	    	<Resource>
	      		<!-- Check Device Object Response XML-->
	    	</Resource>
					]]>
				</programlisting>
			</example>
		</section>
		<section>
			<title>SetDeviceInfo</title>
			<para>Update device description in database</para>
			<example>
				<title>Set Device Info Request</title>
				<table border="1">
				<title>Set Device Info Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Device-Info+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID or title</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Device</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<programlisting>
					<![CDATA[
					<DeviceInfo description='' password='' applyTagsToPorts='true/false'>
						<Groups>
							<Tag Name='' Value='' />
						</Groups>
						<DevicePrivateData />
					</DeviceInfo>
					       ]]>
				</programlisting>
			</example>
			<example>
				<title>Set Device Info Response</title>
				<programlisting>
					<![CDATA[
					<Resource>
						<DeviceInfo>
							<!-- Check Device Object Response XML-->
						</DeviceInfo>
					</Resource>
					]]>
				</programlisting>
			</example>
		</section>	

		<section>
			<title>Device Object Response XML</title>
			<example>
				<title>Device Object Response XML </title>
				<programlisting>
		            <![CDATA[
		<Device NID='' title='' type='' description='' presence='' state='' softwareVersion='' msStatus='' password='' unManaged='true/false' unManned='true/false'>
			<Groups>
				<Tag name='' value='' />
			</Groups>
			]]>
				</programlisting>
			</example>
			<example>
				<title>Device Object responses XML [Continued]</title>
				<programlisting>
		          <![CDATA[
			<DevicePrivateData />
			<PortList>
				<Port NID='' title='' streamType='' presence='' state='' portType=''>
					<Groups />
					<FeatureList>
						<Feature name='' />
					</FeatureList>
					<ObserverInfoList>
				      <Observer xAuth='' monitor=''>
				         <UserNID></UserNID>
				         <ResourceNID></ResourceNID>
				      </Observer>
  						</ObserverInfoList>
  						<StreamURL></StreamURL>
				</Port>
			</PortList>
			<DeviceConfig NID=''>
				<System>
					<NTPClient enabled='true/false' serverIP='' />
				</System>
				<Services>
					<HTTPServer enabled='true/false' />
					<SSHServer enabled='true/false' />
					<TelnetServer enabled='true/false' />
					<TFTPServer enabled='true/false' />
					<XMPPServer enabled='true/false' port='' dailyBackup='Yes/No' backupTime='' enableExport='' recoveryMode='' />
					<XMPPAgent enabled='true/false' xmppServer='' userName='' domain=''>
						<AdminAgent enabled='true/false' />
						<ConfigAgent enabled='true/false' />
						<DestinationAgent enabled='true/false' />
						<SourceAgent enabled='true/false' />
						<XAuthAgent enabled='true/false' />
						<PortCtrlAgent enabled='true/false' />
					</XMPPAgent>
					<StreamingServer enabled='true/false'>
						<TXcntrlPorts from='' to='' />
						<V2DRxPorts from='' to='' />
						<MPEGTSRXPorts from='' to='' />
						<UDPRXPorts from='' to='' />
						<RTPRXPorts from='' to='' />
						<MulticastIP from='' to='' />
					</StreamingServer>
					<DHCPServer enabled='true/false' startIP='' endIP='' publishedDNSServer='' />
					<NTPServer enabled='true/false' serverIP='' />
				</Services>
				]]>
				</programlisting>
			</example>
			<example>
				<title>Device Object responses XML [Continued]</title>
				<programlisting>
		          <![CDATA[
				<Network isPrimaryEnabled='' hostName='' DNSServerIP='' DNSName=''>
					<EthernetPortList>
						<EthernetPort isPrimary='' portID='' enabled='true/false' multicast='true/false' ipAddress='' useDHCP='true/false' netmask='' />
					</EthernetPortList>
					<NATTable>
						<NAT name='' listIndex='' ip='' />
					</NATTable>
				</Network>
				<Storage hardDriveEnabled='' NASEnabled=''>
					<HardDiskList>
						<HardDisk name='' mountPoint='' />
					</HardDiskList>
					<NASList>
						<NAS name='' enabled='' server='' readOnly='true/false' />
					</NASList>
				</Storage>									
			    <AVCodec>
					<Port id=''>
						<Displayconfig type='IPVSClientDisplayConfig'>
							<Display configurable="" />
							<Canvas>
								<Background enable='true/false' zIndex='0' content='OS/Image/Session'>
									<ImageContent imageURL="" color="" />
									<SessionContent enableConnPanel="" enableBookmarkPanel="" enableCtrlPanel="" enableHeaderPanel="" enablePlayerPanel="" sessionId="" />
								</Background>            
								<Window id='userDefinedStr' enable='true/false' content='MediaThumbnail/MediaStream'>
									<ConnectionContent MediaStreamIOPortTypeTitle="" MediaStreamIOPortElementID="" sessionId="" connId="" />
									<ThumbnailContent MediaStreamIOPortTypeTitle="" MediaStreamIOPortElementID="" imageURL="" refreshInterval="" />
									<Geometry zIndex="" border="NONE/THIN/THICK" vpos='ALIGNTOP/ALIGNMIDDLE/ALIGNBOTTOM/NNNpx' hpos='ALIGNLEFT/ALIGNMIDDLE/ALIGNRIGHT/NNNpx' hres='NNNpx/%' vres='NNNpx/%'
										aspect='SourceWidth/SourceHeight/Auto/None' transparency="NNN%" />
								</Window>
							</Canvas>
						</Displayconfig>
						]]>
				</programlisting>
			</example>
			<example>
				<title>Device Object responses XML [Continued]</title>
				<programlisting>
		          <![CDATA[									
						<Displayconfig type='XP200DisplayConfig'>
							<DisplayType>Remote</DisplayType>
							<OverlayType>Manual</OverlayType>
							<Override>None</Override>
							<KeepAspect>true</KeepAspect>
							<Aspect>Auto</Aspect>
							<HorizontalTransformation>Scale/Source</HorizontalTransformation>
							<HorizontalScale>100</HorizontalScale>
							<HorizontalResolution>0</HorizontalResolution>
							<VerticalTransformation>Scale/Source</VerticalTransformation>
							<VerticalScale>100</VerticalScale>
							<VerticalResolution>0</VerticalResolution>
							<HorizontalPosition>Location</HorizontalPosition>
							<HorizontalLocation>Left</HorizontalLocation>
							<VerticalPosition>Location</VerticalPosition>
							<VerticalLocation>Top</VerticalLocation>
							<HorizontalOffset>0</HorizontalOffset>
							<VerticalOffset>0</VerticalOffset>
							<Transparency>0</Transparency>
						</Displayconfig>
					</Port>
				</AVCodec>
			</DeviceConfig>
		</Device>
						]]>
				</programlisting>
			</example>
		</section>
		</section>
	    <section>
			<title>Port</title>
			<para>
				API calls used for Ports
			</para>
	    <section>
	        <title>Get Port</title>
	        <para>
	          This is the list of Source and Destination Ports that the Client has access to.
	          Refer to the Appendix for the format of the Port object
	        </para>
	        <example>
	          <title>Get Port List Request</title>
	          <table border="1">
	          <title>Get Port List Request</title>
	  			<tr>
					<td>Request</td>
	    			<td>HTTP GET</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/vnd.barco.nimbus.Port+xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>startFrom, countToFetch, sortOrder, sortBy, selectFormat, whereNID,  
			  			whereTextSubStr, whereTagExpr, whereStreamType, wherePermissions, 
			  			subscriptionID, dstPortTitle,whereState,subscriptionScope,expireTime</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Resource/Port</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
			  </table>
	          <itemizedlist>
	          	<listitem>
					<para>
						<parameter>Parameters are optional</parameter>
					</para>
				</listitem>
			  	<listitem>
					<para>
						<parameter>sortBy="title/state"</parameter>								
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>sortBy="NID/portType/presence"</parameter>
						<optional>Not Supported</optional>								
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>selectFormat="BASIC/EXTENDED/EXTENDEDCONNECTIONINFO/BASICCONNECTIONINFO/BASICURL/EXTENDEDURL"</parameter>								
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>type="SrcPort/DstPort"</parameter>
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>whereStreamType="V2D/RTP/MPEGTS/UDP/RTP-RAW/RTP-PCM/RFB"</parameter>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>wherePermissions="ADD,MODIFY,DELETE,VIEWFROM,STREAMTO"</parameter>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>dstPortTitle</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
							<para>
								<parameter>whereState="Ready/Busy/Error/NotReady/Offline"
								</parameter>
								<optional>Optional</optional>
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>expireTime</parameter>
								<optional>Optional. expireTime should be in Seconds format. For permanent URL use INFINITE keyword in expireTime. For perminent URL use INFINITE keyword in expireTime</optional>
							</para>
						</listitem>
				<listitem>
					<para>
						<parameter>whereTagExpr="Name%3D'Location' and Value%3D'Sunnyvale'"</parameter>
						<optional>Check for correct URL encoding when using this</optional>
					</para>
				</listitem>
			</itemizedlist>
			<para>
			 	<programlisting>
            	<![CDATA[
						For e.g. 
						
						To get a list of Source Ports: HTTP GET http:/<msip>/controller/Resource/Port?type=SrcPort
						
						To get a list of Destination Ports: HTTP GET http:/<msip>/controller/Resource/Port?type=DstPort
						
				]]>
				</programlisting>
			</para>
        	</example>
        	<example>
					<title>NOTE about fetching URLs from the System</title>
					<para> 	
					For all URLs that the system returns, if the destination information is not provided or is incorrect, in the 'dstPortTitle' parameter, then the URL will be for primary MS IP address.
					For mediaURL, if destination information is not provided, then logged-in resource will be used as destination. If this logged-in resource happens to be a 'Proxy-Client' the mediaURL may not work.
					For All URL's, if expireTime is not provided system will use logged in user credentials to generate validation signature. Validity of URL is tied to logged in user session. If user logged out URL is no longer valid
					If expireTime is provided system will generate expiry based valudation signature. Validity of URL is tied to expireTime.  After expiry time URL is no longer valid.
					For permanent URL's send INFINITE keyword in expireTime.										
		    	</para>		
				</example>
        	<example>
	          <title>Get Port Response - BASIC Format</title>
	          <programlisting>
	            <![CDATA[
	<Resource type="SrcPort/DstPort" from="0" total="50">
			<Port portType="" NID="" title="" streamType="" presence="" state="" portId="">
				<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
			</Port>
			<Port portType="" NID="" title="" streamType="" presence="" state="" portId="">
				<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
			</Port>
			<Port portType="" NID="" title="" streamType="" presence="" state="" portId="">
				<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
			</Port>
	</Resource>
	
]]>
          	</programlisting>
        	</example>
        	<example>
	          <title>Get Port Response - EXTENDED Format</title>
	          <programlisting>
	            <![CDATA[
	<Resource from="0" total="50">
			<Port NID="" title="" streamType="" presence="" state="" portType="" portId="">
				<description />
				<Groups>
					<Tag name="" value="" />
				</Groups>
				<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
				<Asset NID='' title='' deviceType='' contactJID=''/>
				<MaxInstanceCount/>
			<InstanceList>
            <Instance streamURL="" sessionId="" mode="Dynamic">
                <ProfileXML>  		
			   </ProfileXML>
            </Instance>
          </InstanceList>
			<FeatureList>
                    <Feature name=""/>
             </FeatureList>
		<ObserverInfo>
            <Observer xAuth="" monitor="" userNID="" resourceNID=""/>
        </ObserverInfo>
			
		</Port>
	</Resource>
]]>
	          </programlisting>
	        </example>
	        <example>
          		<title>Get Port Response - BASICCONNECTIONINFO Format</title>
          		<programlisting>
            		<![CDATA[
	<Resource type="SrcPort/DstPort/RelayPort/StorePort" from="0"
		total="0">
		<Port NID='' title='' streamType='' presence='' state='' portType='' portId=''thumbnailURL='' mediaURL='' hls=''>
			<Asset NID='' title='' deviceType='' contactJID='' />			
			<PVRInfo enable='' trimLength='' mediaStreamFileResourceNID='' mediaStreamDirResourceNID='' sessionId='' />
			<Description />
			<Groups>
				<Tag Name='' Value='' />
			</Groups>
			<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
			<MaxInstanceCount/>
			<FeatureList>
                <Feature name=""/>
            </FeatureList>
            ]]>
	          </programlisting>
	        </example>
	        <example>
          		<title>Get Port Response - BASICCONNECTIONINFO Format [Continued]</title>
          		<programlisting>
            		<![CDATA[
            <ObserverInfo>
				<Observer xAuth='' monitor='' userNID='' resourceNID='' />				
			</ObserverInfo>   
			<ConnectionStatus>
				<PortSessionInfo id='' name=''>
					<PortConnectionInfo id='' name='' state=''  type='VIEW/PLAYBACK/RECORD/PVR' 
					 srcNID='' srcTitle='' dstNID='' dstTitle='' errorCode='' errorData='' windowId='' canvasId='' thumbnailURL=''/>
				</PortSessionInfo>
			</ConnectionStatus>		
			<InstanceList>
				<Instance streamURL='' />						
			</InstanceList>           	
		</Port>
	</Resource>
]]>
          		</programlisting>
        	</example>
        
	        <example>
	          <title>Get Port Response - EXTENDEDCONNECTIONINFO Format</title>
	          <programlisting>
	            <![CDATA[
	<Resource type="SrcPort/DstPort/RelayPort/StorePort" from="0"
		total="0">
		<Port NID='' title='' streamType='' presence='' state='' portType='' portId='' thumbnailURL='' mediaURL='' hls=''>
			<Asset NID='' title='' deviceType='' contactJID='' />			
			<PVRInfo enable='' trimLength='' mediaStreamFileResourceNID='' mediaStreamDirResourceNID='' sessionId='' />
			<Description />
			<Groups>
				<Tag Name='' Value='' />
			</Groups>
			<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
			<MaxInstanceCount/>
			<FeatureList>
                <Feature name=""/>
            </FeatureList>
            <ObserverInfo>
				<Observer xAuth='' monitor='' userNID='' resourceNID='' />				
			</ObserverInfo>   
			<ConnectionStatus>
				<PortSessionInfo id='' name=''>
					<PortConnectionInfo id='' name='' state=''  type='VIEW/PLAYBACK/RECORD/PVR' 
						 srcNID='' srcTitle='' dstNID='' dstTitle='' errorCode='' errorData='' windowId='' canvasId=''
					   	 srcUserJID='' srcUserName='' destUserJID='' destUserName='' thumbnailURL="">
					 ]]>
	          </programlisting>
	        </example>
	        <example>
          		<title>Get Port Response - EXTENDEDCONNECTIONINFO Format [Continued]</title>
          		<programlisting>
            		<![CDATA[
					 	<Profile id='' profileName='' profileNID='' allowKMSwitch='' remoteKM='' avOption='' 
			    			maxBandwidth='' lowCompression='' highCompression='' burstRatio=''
							burstDuration='' unicast='' multicast='' />
					</PortConnectionInfo>
				</PortSessionInfo>
			</ConnectionStatus>		
			<InstanceList>
				<Instance streamURL='' />						
			</InstanceList>           	
		</Port>
	</Resource>
]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Port Response - BASICURL Format</title>
	          <programlisting>
	            <![CDATA[
	<Resource type="SrcPort/DstPort" from="0" total="50">
			<Port portType="" NID="" title="" streamType="" presence="" state="" portId="" mediaURL="" thumbnailURL="">
				<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
			</Port>
	</Resource>
	
]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Port Response - EXTENDEDURL Format</title>
	          <programlisting>
	            <![CDATA[
	<Resource type="SrcPort/DstPort" from="0" total="50">
			<Port portType="" NID="" title="" streamType="" presence="" state="" portId="" mediaURL="" thumbnailURL="">
				<description />
				<Groups>
					<Tag name="" value="" />
				</Groups>
				<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
				<Asset NID='' title='' deviceType='' contactJID=''/>
				<MaxInstanceCount/>
				<FeatureList>
                    <Feature name=""/>
                </FeatureList>
			</Port>
	</Resource>
     ]]>
	          </programlisting>
			</example>
	      </section>
		<section>
        <title>Get Port Display Configuration Request</title>
        <para>
          Gets the display configuration for given port.          
        </para>
        <example>
          <title>Get Port Display Configuration Request</title>
          <table border="1">
					 <title>GetPortDisplayConfig Request</title>
						<tr>
							<td>Request</td>
							<td>HTTP GET</td>
						</tr>
						<tr>
							<td>Accept(No spaces or newlines)</td>
							<td>"application/vnd.barco.nimbus.Port-DisplayConfig+xml"</td>
						</tr>
						<tr>
							<td>Status</td>
							<td>200, 401, 500</td>
						</tr>
						<tr>
							<td>Query Parameters</td>
							<td>whereNID, whereTextSubStr, subscriptionID</td>
						</tr>
						<tr>
							<td>Resource Path</td>
							<td>/Resource/Port</td>
						</tr>
						<tr>
							<td>Authorization</td>
							<td>Basic (Required)</td>
						</tr>
					</table>
        </example>
        <example>
          <title>Get Port Display Configuration Response</title>
          <programlisting>
            <![CDATA[
		  <Resource>
		    <PortDisplayConfig NID="" title="">		      
		       <!--Check the appendix A for device specific config-->		       
            </PortDisplayConfig>
          </Resource>
	    ]]>
          </programlisting>
        </example>
      </section>
        <section>
        <title>Get Port Display Status Request</title>
        <para>
          Gets the display status for given port.          
        </para>
        <example>
          <title>Get Port Display Status Request</title>
                 <table border="1">
    <title>GetPortDisplayStatus Request</title>
	<tr>
		<td>Request</td>
		<td>HTTP GET</td>
	</tr>
	<tr>
		<td>Accept(No spaces or newlines)</td>
		<td>"application/vnd.barco.nimbus.Port-DisplayStatus+xml"</td>
	</tr>
	<tr>
		<td>Status</td>
		<td>200, 401, 500</td>
	</tr>
	<tr>
		<td>Query Parameters</td>
		<td>whereNID, whereTextSubStr, subscriptionID</td>
	</tr>
	<tr>
		<td>Resource Path</td>
		<td>/Resource/Port</td>
	</tr>
	<tr>
		<td>Authorization</td>
		<td>Basic (Required)</td>
	</tr>
</table>
        </example>
        <example>
          <title>Get Port Display Status Response</title>
          <programlisting>
            <![CDATA[
		<Resource>
			<PortDisplayStatus NID='' title='' >	
			 <!--Check the appendix A for device specific status-->		 
			</PortDisplayStatus>
		</Resource>
	    ]]>
          </programlisting>
        </example>
      </section>      
		<section>
	        <title>Get Port Tags</title>
	        <para>
	          This is the list of Tags that the Client has access to.         
	        </para>
	        <example>
	          <title>Get Port Tags Request</title>
	          <table border="1">
	          <title>Get Port Tags Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Port-Tags+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>sortBy, sortOrder, whereNameTextSubString, 
							whereValueTextSubString, wherePermissions, selectFormat</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Port</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
			  <listitem>
					<para>
						<parameter>sortBy="Name/Value"</parameter>								
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereNameTextSubString=""</parameter>
						<optional>Optional</optional>					
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>whereValueTextSubString</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>wherePermissions="ADD,MODIFY,DELETE,VIWEFROM,STREAMTO"</parameter>
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>selectFormat="NameList/NameValueList/NameValueTree"</parameter>
						<optional>Default=NameValueList</optional>
					</para>
				</listitem>
			</itemizedlist>
	        </example>
	        <example>
	          <title>Get Port Tags Response - NameList Format</title>
	          <programlisting>
	            <![CDATA[
		    <Resource from="0" total="0">
		    	<PortTags>
					<Tag Name="Location"/>
					<Tag Name="Network"/>
		    	</PortTags>
		    </Resource> ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Port Tags Response - NameValueList Format</title>
	          <programlisting>
	            <![CDATA[
		   <Resource from="0" total="0">
		   		<PortTags>
					<Tag Name="Location" Value="Sunnyvale"/>
					<Tag Name="Location" Value="Hyderabad"/>
				</PortTags>
			</Resource>	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Port Tags Response - NameValueTree Format</title>
	          <programlisting>
	            <![CDATA[
		   <Resource from="0" total="0">
		   		<PortTags>
					<Tag Name="Location">
				   		<Value>Sunnyvale</Value>
				   		<Value>Hyderabad</Value>
					</Tag>
				</PortTags>
			</Resource>	]]>
	          </programlisting>
	        </example>
		</section>   

		<section>
			<title>SetPortInfo</title>
			<para>Update port title, description, and groups in the database</para>
			<example>
				<title>Set Port Info Request</title>
				<table border="1">
				<title>Set Port Info Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Port-Info+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID or title</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Port</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
			 	<programlisting>
		            <![CDATA[
					For e.g.
					To set Port info using NID: HTTP POST http:/<msip>/controller/
					Resource/Port?NID=default.mediastreamsrcportresourcelist.mssprl_091145e5-a419-4673-9451-45b15ccc9674
					
					To set Port info using title: HTTP POST http:/<msip>/controller/
					Resource/Port?title=rtp
					 
		     	  ]]>
				</programlisting>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>title</parameter>
							<optional>Required [Does not allow XML restricted special characters]</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>description</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>Groups</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
				</itemizedlist>
				<programlisting>
		            <![CDATA[
			     <PortInfo title='' description=''>
					<Groups>
						<Tag Name='' Value='' />
					</Groups>
				</PortInfo>
		       ]]>
				</programlisting>
			</example>
			<example>
				<title>Set Port Info Response</title>
				<programlisting>
		            <![CDATA[
		        <Resource>
			    	<PortInfo>
			      		<!-- Check Port Object Response XML-->
			    	</PortInfo>
			    </Resource>
		         ]]>
				</programlisting>
			</example>
		</section>
		<section>
			<title>SetPortObserverInfo</title>
			<para>Update observer information in the database</para>
			<example>
				<title>Set Port Observer Info Request</title>
				<table border="1">
				<title>Set Port Observer Info Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Port-ObserverInfo+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID or title</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Port</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>xAuth(true/false)</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>monitor(true/false)</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>UserNID</parameter>
							<optional>Required. if xAuth/monitor present. NID of the User to be set as an Observer</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>ResourceNID</parameter>
							<optional>Required. if xAuth/monitor present. NID of an asset resource in the system</optional>
						</para>
					</listitem>
				</itemizedlist>
				<programlisting>
		            <![CDATA[
			    <PortObserverInfo >
					<Observer xAuth='' monitor=''>
				    	<UserNID></UserNID>
				        <ResourceNID></ResourceNID>
				   	</Observer>
				</PortObserverInfo>
		       ]]>
				</programlisting>
			</example>
			<example>
				<title>Set Port Observer Info Response</title>
				<programlisting>
		            <![CDATA[
		        <Resource>
			    	<PortObserverInfo>
			      		<!-- Check Port Object Response XML-->
			   		 </PortObserverInfo>
			   </Resource>
		         ]]>
				</programlisting>
			</example>
		</section>
		<section>
			<title>SetPortPVRInfo</title>
			<para>Update the PVR settings in the database</para>
			<example>
				<title>Set Port PVR Info Request</title>
				<table border="1">
				<title>Set Port PVR Info Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Port-PVRInfo+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID or title</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Port</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>enable(true/false)</parameter>
							<optional>Required</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>trimLength</parameter>
							<optional>Optional - default is 4hrs</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>mediaStreamDirResourceNID</parameter>
							<optional>Required</optional>
						</para>
					</listitem>
				</itemizedlist>
				<programlisting>
		            <![CDATA[
			    <PortPVRInfo enable='true/false' trimLength='' mediaStreamDirResourceNID='' />		
		       ]]>
				</programlisting>
			</example>
			<example>
				<title>Set Port PVR Info Response</title>
				<programlisting>
		            <![CDATA[
		        <Resource>
			    	<PortPVRInfo>
			      	<!-- Check Port Object Response XML-->
			    	</PortPVRInfo>
			    </Resource>
		         ]]>
				</programlisting>
			</example>
		</section>			
		<section>
			<title>Port Object Response XML</title>
			<example>
				<title>Port Object Response XML </title>
				<programlisting>
		            <![CDATA[
			   <Port NID='' title='' streamType='' presence='' state='' portType=''>
					<Asset NID='' title='' deviceType='' deviceNID=''/>				
					<PVRInfo enable='' trimLength='' mediaStreamFileResourceNID='' mediaStreamDirResourceNID='' sessionId='' />
					<Description />
					<Groups>
						<Tag Name='' Value='' />
					</Groups>
					<Permissions add='' modify='' delete='' read='' viewfrom='' streamto=''/>
					<MaxInstanceCount/>
					<FeatureList>
	                    <Feature name=""/>
	                </FeatureList>
					<ObserverInfo>
						<Observer xAuth='' monitor='' userNID='' resourceNID='' />			
					</ObserverInfo>      
					<InstanceList>
						<Instance streamURL='' />						
					</InstanceList>                                        			
			   </Port>
				 ]]>
				</programlisting>
			</example>
		</section>
		<section>
			<title>SetPortStreamURL</title>
			<para>Update port stream URL in the database</para>
			<example>
				<title>Set Port StreamURL Request</title>
				<table border="1">
				<title>Set Port StreamURL Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Port-StreamURL+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID or title</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Port</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>streamURL</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
				</itemizedlist>
				<programlisting>
		            <![CDATA[
			    <PortStreamURL streamURL='' />
		       ]]>
				</programlisting>
			</example>
			<example>
				<title>Set Port StreamURL Response</title>
				<programlisting>
		            <![CDATA[
		        <Resource>
			    	<PortStreamURL>
			      		<!-- Check Port Object Response XML-->
			    	</PortStreamURL>
			    </Resource>
		         ]]>
				</programlisting>
			</example>
		</section>
	    <section>
       
        <title>Set Port Display Configuration Request </title>
         <para>
          updates the given display configuration.
          </para>
          <tip>
          <para>
          Suggest get config from the database update the required parameters and 
          send the set port display configuration request
          </para>   
        </tip>
        <example>
          <title>Set Port Display Configuration Request</title>
          <table border="1">
          <title>Set Port Display Configuration Request</title>
					<title>Set Port Display Config</title>
						<tbody>
							<tr>
								<td>Request</td>
								<td>HTTP POST</td>
							</tr>
							<tr>
								<td>Accept(No spaces or newlines)</td>
								<td>"application/vnd.barco.nimbus.Port-DisplayConfig+xml"</td>
							</tr>
							<tr>
								<td>Status</td>
								<td>200, 401, 500</td>
							</tr>
							<tr>
								<td>Query Parameters</td>
								<td>NID or title</td>
							</tr>
							<tr>
								<td>Resource Path</td>
								<td>/Resource/Port</td>
							</tr>
							<tr>
								<td>Authorization</td>
								<td>Basic (Required)</td>
							</tr>
						</tbody>
					</table>
          <programlisting>
            <![CDATA[
	<PortDisplayConfig byNID='' byTitle='' >	
	      <!--Check the appendix for device specific config-->
	</PortDisplayConfig>
           ]]>
          </programlisting>         
        </example>
        <example>
          <title>Set Port Display Configuration Response</title>
          <programlisting>
            <![CDATA[
	<PortDisplayConfig>		
	</PortDisplayConfig>
		    ]]>
          </programlisting>
        </example>
      </section> 
	   	<section>
        <title>Set Port Window Properties</title>
        <para>
          Sets the unmanned client window Properties.
          Note: Send all properties or one or combination.           
        </para>
        <example>
          <title>Set Port Window Properties Request</title>
          <table border="1">
          <title>Set Port Window Properties Request</title>
					<title>Set Port Window Properties</title>
						<tbody>
							<tr>
								<td>Request</td>
								<td>HTTP POST</td>
							</tr>
							<tr>
								<td>Accept(No spaces or newlines)</td>
								<td>"application/vnd.barco.nimbus.Port-WindowProperties+xml"</td>
							</tr>
							<tr>
								<td>Status</td>
								<td>200, 401, 500</td>
							</tr>
							<tr>
								<td>Query Parameters</td>
								<td>NID</td>
							</tr>
							<tr>
								<td>Resource Path</td>
								<td>/Resource/Port</td>
							</tr>
							<tr>
								<td>Authorization</td>
								<td>Basic (Required)</td>
							</tr>
						</tbody>
					</table>
         
          <programlisting>
            <![CDATA[
 <PortWindowProperties bySessionId='' byConnId=''
     byNID='' byCanvasId='' byWindowId='' byLayoutId='' >
	 <WindowProperties fps='' maximize='true/false' mute='true/false' 
		  remoteKbmCtrl='true/false' scale='' visibility='true/false' 
		  volume='50%' aspect='' border='' hpos='' vpos='' hres='' 
		  vres='' layoutPos='' scrollHPos='' scrollVPos='' transparency=''/>
 </PortWindowProperties>
            ]]>
          </programlisting>
          <itemizedlist>						
			<listitem>
				<para>
					<parameter>fps</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>maximize='true/false''</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>mute='true/false'</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>remoteKbmCtrl='true/false'</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>scale</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>visibility='true/false'</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
		    <listitem>
				<para>
					<parameter>volume</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>aspect</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>border</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>hpos</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>vpos</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>hres</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>vres</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>layoutPos</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>scrollHPos</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>scrollVPos</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>transparency</parameter>
					<optional>optional</optional>
				</para>
			</listitem>
		</itemizedlist>
        </example>
        <example>
          <title>Set Port Window Properties Response</title>
          <programlisting>
            <![CDATA[
	       <PortWindowProperties>			
		   </PortWindowProperties>	 
		    ]]>
          </programlisting>
        </example>
      </section>  
	   	</section>
	   	<section>
			<title>Dir</title>
			<para>
				API calls used for Dir.
			</para>
		<section>
	        <title>Get Dir</title>
	        <para>
	          This is the list of  Media Directories that the Client has access to.
	        </para>
	        <example>
	          <title>Get Dir Request</title>
	          <table border="1">
	          <title>Get Dir Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Dir+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>countToFetch, selectFormat, sortBy, sortOrder, startFrom, whereDateRange, whereNID,	whereTagExpr, whereTextSubStr, whereParentDirNID, wherePermissions, whereFilePermissions, subscriptionID, subscriptionScope, expireTime, dstPortTitle</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Dir</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
			   <listitem>
					<para>
						<parameter>sortBy="title/state/size/sizeUsed/dateCreated/dateModified"</parameter>		
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>sortBy="NID"</parameter>
						<optional>Not Supported</optional>
					</para>
				</listitem>			 
				<listitem>
					<para>
						<parameter>whereNID="DirNID"</parameter>
						<optional>dirNID Required</optional>
					</para>
				</listitem>
					<listitem>
					<para>
						<parameter>whereParentDirNID="parentDirNID"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>wherePermissions="MODIFY,DELETE,IMPORT,RECORD"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereFilePermissions="MODIFY,DELETE,EXPORT,PLAYBACK"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>subscriptionID</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>selectFormat="BASIC/SNAPSHOTURL(Deprecated)/UPLOADURL"</parameter>
						<optional>Optional. default='BASIC'</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>expireTime</parameter>
						<optional>Optional. expireTime should be in Seconds format. Used along with UPLOADURL selectFormat. For permanent URL use INFINITE keyword in expireTime</optional>				
					</para>
				</listitem>
				<listitem>
							<para>
								<parameter>whereDateRange="From:YYYY-MM-DD HH:MM:SS.MMMM,
					                           To:YYYY-MM-DD HH:MM:SS.MMMM,
					                           Interval:xx(Y/M/D/H/m/S/s)"
								</parameter>
								<optional>Optional</optional>
							</para>
						</listitem>
				<listitem>
							<para>
								<parameter>dstPortTitle
								</parameter>
								<optional>Optional</optional>
							</para>
						</listitem>
			</itemizedlist>
	        </example>
        	<example>
	          	<title>Get Dir Response - BASIC Format</title>
	          	<programlisting>
	            	<![CDATA[
	 <GetDir from="0" total="0">
			<Dir NID='' title='' dirType='' state='' size='' sizeUsed='' dateCreated='' dateModified='' readOnly=''>
				<Groups>
					<Tag Name="" Value="" />
				</Groups>
				<Permissions modify='' delete='' read='' import='' playback='' record='' />
			</Dir>
		</GetDir>
]]>
          	</programlisting>
        	</example>
        	<example>
	          	<title>Get Dir Response - SNAPSHOTURL Format (Deprecated)</title>
	          	<programlisting>
	            	<![CDATA[
	 <GetDir from="0" total="0">
			<Dir NID='' title='' dirType='' state='' size='' sizeUsed='' dateCreated='' dateModified='' readOnly='' snapshotURL=''>
				<Groups>
					<Tag Name="" Value="" />
				</Groups>
				<Permissions modify='' delete='' read='' import='' playback='' record='' />
			</Dir>
		</GetDir>
]]>
          	</programlisting>
        	</example>
			<example>
	          	<title>Get Dir Response - UPLOADURL Format</title>
	          	<programlisting>
	            	<![CDATA[
	 <GetDir from="0" total="0">
			<Dir NID='' title='' dirType='' state='' size='' sizeUsed='' dateCreated='' dateModified='' readOnly='' uploadURL=''>
				<Groups>
					<Tag Name="" Value="" />
				</Groups>
				<Permissions modify='' delete='' read='' import='' playback='' record='' />
			</Dir>
		</GetDir>
]]>
          	</programlisting>
        	</example>
        </section>
		<section>
        	<title>Get Dir Tags</title>
       	 	<para>
          		This is the list of Tags that the Client has access to.         
       	 	</para>
        	<example>
          		<title>Get Dir Tags Request</title>
          		<table border="1">
          		<title>Get Dir Tags Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Dir-Tags+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>sortBy, sortOrder, whereNameTextSubStr, 
							whereValueTextSubStr, wherePermissions, selectFormat</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Dir</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
				  <listitem>
						<para>
							<parameter>sortBy="Name/Value"</parameter>								
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>whereNameTextSubString=""</parameter>
							<optional>Optional</optional>					
						</para>
					</listitem>			
					<listitem>
						<para>
							<parameter>whereValueTextSubString</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>wherePermissions="MODIFY,DELETE,IMPORT,RECORD"</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>			
					<listitem>
						<para>
							<parameter>selectFormat="NameList/NameValueList/NameValueTree"</parameter>
							<optional>Default=NameValueList</optional>
						</para>
					</listitem>
				</itemizedlist>
	        </example>
			<example>
	          <title>Get Dir Tags Response - NameList Format</title>
	          <programlisting>
	            <![CDATA[
		    <DirTags from="0" total="0">
				<Tag Name="Location"/>
				<Tag Name="Network"/>
		    </DirTags>]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Dir Tags Response - NameValueList Format</title>
	          <programlisting>
	            <![CDATA[
		   <GetDirTags from="0" total="0">
				<Tag Name="Location" Value="Sunnyvale"/>
				<Tag Name="Location" Value="Hyderabad"/>
			</GetDirTags>	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Dir Tags Response - NameValueTree Format</title>
	          <programlisting>
	            <![CDATA[
		   <GetDirTags from="0" total="0">
				<Tag Name="Location">
				   <Value>Sunnyvale</Value>
				   <Value>Hyderabad</Value>
				</Tag>
			</GetDirTags>	]]>
	          		</programlisting>
	        	</example>
			</section>
		</section>
	   	<section>
			<title>File</title>
			<para>
				API calls used for File
			</para>
		<section>
	        <title>Get File</title>
	        <para>
	          This is the list of Files that the Client has access to.
	          If there are Files of type MediaGroup then the associated MediaClip Files will be
	          returned as nested sub-elements of the Media Group File.
	        </para>
	        <example>
	          <title>Get File Request</title>
	          <table border="1">
	          <title>Get File Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.File+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>countToFetch, selectFormat, sortBy, sortByMetaData, sortByTagName, sortOrder, startFrom, whereType, 
			                 whereMediaGroupID, whereDateRange, whereNID, whereTagExpr, whereTextSubStr, searchTextSubStrIn,
			                 whereState, whereMetaDataExpr, whereParentDirNID, whereSessionConfigNID, wherePermissions, subscriptionID, subscriptionScope, expireTime, 
			                 dstPortTitle, whereDownloadState</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/File</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
	          <listitem>
					<para>
						<parameter>searchTextSubStrIn=TITLE,DESCRIPTION,METADATA,BOOKMARK </parameter>
						<optional>Used along with whereTextSubStr</optional>											
					</para>				
				</listitem>
			   <listitem>
					<para>
						<parameter>sortBy="title/state/playlength/dateCreated/size"</parameter>
						<optional>Either sortBy/sortByMetaData/sortByTagName</optional>											
					</para>				
				</listitem>
				<listitem>
					<para>
						<parameter>sortByMetaData</parameter>					
				 		 <optional>Either sortBy/sortByMetaData/sortByTagName</optional>											
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>sortByTagName</parameter>							
						<optional>Either sortBy/sortByMetaData/sortByTagName</optional>											
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>sortBy="NID"</parameter>
						<optional>Not Supported</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereParentDirNID=""</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereState="Ready/Busy/Error/NotReady/Offline"</parameter>
						<optional>Optional</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereMetaDataExpr="Name%3D'TestAPI' and Value%3D'RecordTest'"</parameter>
						<optional>Optional</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereType="MediaClip,MediaGroup,MediaImage,ALL"</parameter>
						<optional>Optional Default=ALL</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereMediaGroupID=""</parameter>
						<optional>Optional</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereSessionConfigNID=""</parameter>
						<optional>Optional</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>wherePermissions="MODIFY,DELETE,PLAYBACK,IMPORT"</parameter>
						<optional>Optional</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>subscriptionID</parameter>
						<optional>Optional</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>expireTime</parameter>
						<optional>Optional.  expireTime should be in Seconds format. Used along with BASICURL or EXTENDEDURL selectFormat. For permanent URL use INFINITE keyword in expireTime</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>selectFormat="BASIC/EXTENDED/BASICURL/EXTENDEDURL/BASICCONNECTIONINFO"</parameter>
						<optional>Optional. Default=BASIC</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>dstPortTitle</parameter>
						<optional>Optional</optional>				
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereDateRange="From:YYYY-MM-DD HH:MM:SS.MMMM Z,
							To:YYYY-MM-DD HH:MM:SS.MMMM Z,
							Interval:xx(Y/M/D/H/m/S/s)"
						</parameter>
						<optional>Optional </optional>
					</para>
					<para>
						For example from 2014-01-01 00:00:00.0000 +05:30 to 2014-01-02 00:00:00.0000 +05:30 (give value in percent encoded form as below ):
						</para>
						<para>
						1. whereDateRange="From:2014-01-01%2000%3A00%3A00.000%20%2B05%3A30,
							To:2014-01-02%2000%3A00%3A00.000%20%2B05%3A30"
						</para>
						<para>
						2. whereDateRange="From:2014-01-01%2000%3A00%3A00.000%20%2B05%3A30,
							Interval:01D"
						</para>
						<para>
						3. whereDateRange="To:2014-01-02%2000%3A00%3A00.000%20%2B05%3A30,
							Interval:01D"
					    </para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereDownloadState="Ready/Busy/NotReady"
						</parameter>
						<optional>Optional (filter for cached files)</optional>
					</para>
				</listitem>
				<listitem>
							<para>
								<emphasis role="strong">Refer to Example 2.17 for Note related to URLs</emphasis>
							</para>
						</listitem>
			</itemizedlist>
			<programlisting><![CDATA[
					For e.g. Get all the recorded mediaclips:
					
					http://<msip>/controller/Resource/File?whereType=Mediaclip
						
					]]>
			</programlisting>
	        </example>
	        <example>
		<title>Sample sortByTagName="Location"</title>
		<programlisting><![CDATA[
	                 <Groups>
	                    <Tag Name="Location" Value="Sunnyvale"></Tag>
	                 </Groups>							
				
			 			]]>
			 		  
					</programlisting>
	</example>

	<example>
		<title>Sample sortByMetaData="TestAPI"</title>
		<programlisting>
					<![CDATA[
	                 <MetaData>
	                    <Tag Name="TestAPI">RecordTest</Tag>
	                 </MetaData>							
				
			 			]]>
			 		 </programlisting>
	</example>        
		    <example>
	          <title>Get File Response - EXTENDED Format</title>
	          <programlisting>
	            <![CDATA[
		<Resource from="200" total="400">
				<File NID='' title='' fileType='MediaClip' streamType='' size=''
					playlength='' state='' dateCreated='' dateModified=''
					readOnly='' mediaGroupId='' ffTracks='' bypassAutoStorageRules=''>
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
					<Permissions modify='' delete='' read='' export='' playback='' />
					<MetaData>
						<Tag Name="">Value</Tag>
					</MetaData>
				</File>	
				<File NID='' title='' fileType='MediaGroup' streamType='' size=''
					playlength='' presence='' state='' dateCreated='' dateModified=''
					readOnly='' mediaGroupId='' ffTracks='' bypassAutoStorageRules=''>
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
					<Permissions modify='' delete='' read='' export='' playback='' />
					<MetaData>
						<Tag Name="">Value</Tag>
					</MetaData>
					<!-- Files of type MediaGroup will have nested File records -->
					<FileList>
						<File NID='' title='' fileType='MediaClip' streamType='' size=''
						playlength='' presence='' state='' dateCreated='' dateModified=''
						readOnly='' mediaGroupId='' ffTracks='' bypassAutoStorageRules='' >
						]]>
				</programlisting>
			</example>
			<example>
				<title>Get File Response - EXTENDED Format [Continued]</title>
				<programlisting>
		          <![CDATA[
							<Groups>
								<Tag Name="" Value="" />
							</Groups>
							<Permissions modify='' delete='' read='' export='' playback='' />
							<MetaData>
								<Tag Name="">Value</Tag>
							</MetaData>
						</File>
					</FileList>	
				</File>
		</Resource>
				]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get File Response - BASIC Format</title>
	          <programlisting>
	            <![CDATA[
		<Resource from="200" total="400">
				<File fileType='MediaClip' NID="" title="" mediaGroupId="" streamType="" 
				    size="" playlength="" presence="" state="" dateCreated="" 
				    dateModified=""	readOnly="" ffTracks='' bypassAutoStorageRules=''>
					<description />
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
					<Permissions modify='' delete='' read='' export='' playback='' />
					<MetaData>
						<Tag Name="">Value</Tag>
					</MetaData>
					<Dir dirNID="" dirTitle="" />
					<Download>
            		<Media format="Standard" state="NotReady" stale="" />
            		<Media format="Proprietary" state="NotReady" stale="" />
         		</Download>
				</File>
		</Resource>
				]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get File Response - BASICURL Format</title>
	          <programlisting>
	            <![CDATA[
		<Resource from="200" total="400">
				<File NID='' title='' fileType='MediaClip' streamType='' size=''
					playlength='' state='' dateCreated='' dateModified=''
					readOnly='' mediaGroupId='' ffTracks='' mediaURL='' thumbnailURL='' bypassAutoStorageRules=''>
					<Groups>
						<Tag Name='' Value='' />
					</Groups>
					<Permissions modify='' delete='' read='' export='' playback='' />
					<MetaData>
						<Tag Name=''>Value</Tag>
					</MetaData>
				</File>
		</Resource>
				]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get File Response - EXTENDEDURL Format</title>
	          <programlisting>
	            <![CDATA[
		<Resource from="200" total="400">
				<File NID='' title='' fileType='' streamType='' size=''
				playlength='' presence='' state='' dateCreated='' dateModified=''
				readOnly='' mediaGroupId='' ffTracks='' mediaURL='' thumbnailURL='' bypassAutoStorageRules='true/false' >
				<description />
				<Download>
            		<Media format="Standard" state="NotReady" stale="" downloadURL=""/>
            		<Media format="Proprietary" state="NotReady" stale="" downloadURL="" />
         		</Download>
				<Groups>
					<Tag Name='' Value='' />
				</Groups>
				<Permissions modify='' delete='' read='' export='' playback='' />
				<MetaData>
					<Tag Name=''>Value</Tag>
				</MetaData>
				<Dir dirNID='' dirTitle='' />
			</File>
		</Resource>
				]]>
	          </programlisting>
	        </example>
			  <example>
	          <title>Get File Response - BASICCONNECTIONINFO Format</title>
	          <programlisting>
	            <![CDATA[
		<Resource from="200" total="400">
				<File NID='' title='' fileType='' streamType='' size=''
				playlength='' presence='' state='' dateCreated='' dateModified=''
				readOnly='' mediaGroupId='' ffTracks='' mediaURL='' thumbnailURL='' bypassAutoStorageRules='true/false' >
				<description />
				<Download>
            		<Media format="Standard" state="NotReady" stale="" downloadURL=""/>
            		<Media format="Proprietary" state="NotReady" stale="" downloadURL="" />
         		</Download>
				<Groups>
					<Tag Name='' Value='' />
				</Groups>
				<Permissions modify='' delete='' read='' export='' playback='' />
				<MetaData>
					<Tag Name=''>Value</Tag>
				</MetaData>
				<Dir dirNID='' dirTitle='' />
				<ConnectionStatus>
					<FileSessionInfo id='' name=''>
						<FileConnectionInfo id='' name='' state=''  type='VIEW/PLAYBACK/RECORD/PVR' 
							 srcNID='' srcTitle='' dstNID='' dstTitle='' errorCode='' errorData='' windowId='' canvasId=''/>
					</FileSessionInfo>
				</ConnectionStatus>
			</File>
		</Resource>
				]]>
	          </programlisting>
	        </example>
		</section>
		<section>
	        <title>Get File Tags</title>
	        <para>
	          This is the list of Tags that the Client has access to.         
	        </para>
	        <example>
	          <title>Get File Tags Request</title>
	          <table border="1">
	          <title>Get File Tags Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.File-Tags+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>sortBy, sortOrder, whereNameTextSubString, whereValueTextSubString,
			     					wherePermissions, selectFormat</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/File</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
			  <listitem>
					<para>
						<parameter>sortBy="Name/Value"</parameter>								
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereNameTextSubString=""</parameter>
						<optional>Optional</optional>					
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>whereValueTextSubString</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>wherePermissions="MODIFY,DELETE,PLAYBACK,EXPORT"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>		
				<listitem>
					<para>
						<parameter>selectFormat="NameList/NameValueList/NameValueTree"</parameter>
						<optional>Default=NameValueList</optional>
					</para>
				</listitem>
			</itemizedlist>
	        </example>
	        <example>
	          <title>Get File Tags Response - NameList Format</title>
	          <programlisting>
	            <![CDATA[
		    <Resource from="0" total="0">
		    	<FileTags>
					<Tag Name="Location"/>
					<Tag Name="Network"/>
				</FileTags>
		    </Resource>]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get File Tags Response - NameValueList Format</title>
	          <programlisting>
	            <![CDATA[
	       <Resource from="0" total="0">
		   		<FileTags>
					<Tag Name="Location" Value="Sunnyvale"/>
					<Tag Name="Location" Value="Hyderabad"/>
				</FileTags>
			</Resource>	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get File Tags Response - NameValueTree Format</title>
	          <programlisting>
	            <![CDATA[
		   <Resource from="0" total="0">
		   		<FileTags>
					<Tag Name="Location">
				   		<Value>Sunnyvale</Value>
				   		<Value>Hyderabad</Value>
					</Tag>
				</FileTags>
			</Resource>	]]>
	          </programlisting>
	        </example>
		</section>
		<section>
			<title>SetFileMetaData</title>
			<para>replace file metadata in database</para>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>MetaData</parameter>
						<optional>Required</optional>
					</para>
				</listitem>
			</itemizedlist>
			<example>
				
				<table border="1">
				<title>Set File MetaData Request by NID or title</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.File-MetaData+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID or title</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/File</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<programlisting>
					<![CDATA[
					<FileMetaData>
						<MetaData>
							<Tag Name='ID'>12345</Tag>
							<Tag Name='TestCase'>UpdateWithByNID</Tag>
						</MetaData>
					</FileMetaData>
				       ]]>
				</programlisting>
			</example>
			<example>
				
				<title>Set File MetaData Response</title>
				<programlisting>
					<![CDATA[
			    <SetFileMetaData>
			      <File NID='' title='' fileType='' streamType='' size=''
					playlength='' presence='' state='' dateCreated='' dateModified=''
					readOnly='' mediaGroupId='' bypassAutoStorageRules=''>
					<description />
					<Groups>
						<Tag name='' value='' />
					</Groups>
					<MetaData>
						<Tag Name=''>Value</Tag>
					</MetaData>
					<Dir dirNID='' dirTitle='' />
					<Download>
               <Media format="" stale="" state=""/>
                </Download>
                 <Permissions delete="" modify="" read="" export="" playback=""/>
				  </File>
			    </SetFileMetaData>
					    ]]>
			   	</programlisting>
			</example>
		 </section>
		 
		 
		 <section>
			<title>Delete File</title>
			<para>Delete the given file from the system</para>
			<itemizedlist>
					<listitem>
						<para>
							<parameter>NID</parameter>
							<optional>Required. NID of the file you want to delete</optional>
						</para>
					</listitem>
			</itemizedlist>
			<example>
				<title>DeleteFile Request </title>			
				<table border="1">
				<title>DeleteFile Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP DELETE</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/json"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>NID, moveToRecycleBin</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/File</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
			 	<itemizedlist>
	          <listitem>
					<para>
						<parameter>moveToRecycleBin='true/false' </parameter>
						<optional>if the value is true it will move the file to recycle bin. Otherwise it will delete from the system.Default is True</optional>											
					</para>				
				</listitem>
				</itemizedlist>	
			</example>
			<example>
				<title>DeleteFile Response</title>
				<programlisting>
	            <![CDATA[
		<Resource>
      <File NID="default.mediastreamfileresourcelist.msfrl_72ed6633-4072-45cb-b785-4dd902451692" bypassAutoStorageRules="false" clipID="091b8ef9-99e3-4028-abf3-c54fd6836334" dateCreated="1394129863550" dateModified="1394129863550" fileType="MediaClip" hls="true" mediaGroupID="" mediaID="387cf54f-7667-43eb-be8b-b4752b9cd3c2" playlength="77180" readOnly="false" sessionConfigNID="" size="21752456" state="Deleted" streamType="RTP" title="axis7412">
         <Dir NID="default.mediastreamdirresourcelist.msdrl_04e5116b-940c-4acc-aa3e-3ad0f37ce173" dirTitle="RECYCLEBIN" />
         <Download>
            <Media format="Standard" stale="true" state="Prepared" />
         </Download>
         <Groups>
            <Tag Name="" Value="" />
         </Groups>
         <MetaData>
            <Tag>
               <element Name="ID">
                  <content>12345</content>
               </element>
               <element Name="TestCase">
                  <content>UpdateWithByNID</content>
               </element>
            </Tag>
         </MetaData>
         <Permissions delete="true" export="true" modify="true" playback="true" read="true" />
         <description />
      </File>
   </Resource>
			 ]]>
			   </programlisting>
			</example>
		</section>
		
		 <section>
			<title>Prepare File For download</title>
			<para>Prepare file For download to client PC. Please subscribe for file updates using a subscriptionID and selectFormat as BASICURL/EXTENDEDURL in GetFile request, to get the file notification with a downloadURL, when media is Ready for download.
			Any edits to the media may cause the prepared status of the file to become stale, but still return a downloadURL on GetFile. It is the user's discretion whether to download a stale copy of the media or to issue another prepare to update the cached media for download.</para>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>byNID</parameter>
						<optional>fileNID required</optional>
					</para>
				</listitem>				
				<listitem>
					<para>
						<parameter>format="Proprietary/Standard/Both"</parameter>
						<optional>Optinal Default='Proprietary'</optional>
					</para>
				</listitem>
			</itemizedlist>
			<example>
				<title>Prepare File For Download Request</title>
				<table border="1">
				<title>Prepare File For Download Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>None</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>Resource/File/PrepareForDownload</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<programlisting>
					<![CDATA[
					<PrepareFileForDownload  byNID="" 
         			   format="" 
         			  />
				       ]]>
				</programlisting>
			</example>
			<example>
				<title>Prepare File For Download Response</title>
				<programlisting>
					<![CDATA[
			      <PrepareFileForDownload>
					    <File NID="" title="" fileType="" streamType="" size="" playlength="" mediaID="" dateCreated="" dateModified="" readOnly="" mediaGroupID="" clipID="" sessionConfigNID="" bypassAutoStorageRules="" state="" ffTracks="">
					        <description/>
					        <Dir NID="" dirTitle=""/>
					        <MetaData>
					            <Tag Name=""/>
					        </MetaData>
					        <Groups>
					            <Tag Name="" Value=""/>
					        </Groups>
					        <Download>
					            <Media format="Proprietary" stale="" state="Busy" downloadURL=""/>
					            <Media format="Standard" stale="" state="Busy" downloadURL=""/>
					        </Download>
					        <Permissions delete="" modify="" read="" export="" playback=""/>
					    </File>
					</PrepareFileForDownload>   
					    ]]>
			   	</programlisting>
			</example>
		 </section>
		 
		 <section>
			<title>Create Media From Cutlist</title>
			<para>Creates Media from existing media using start and end offsets within it.Generates a file notification when the new media creation is complete. Please subscribe for file updates using a subscriptionID in GetFile request for receiving file notifications.</para>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>byNID</parameter>
						<optional>fileNID of existing media - required</optional>
					</para>
				</listitem>				
				<listitem>
					<para>
						<parameter>cutList=""StartOffset:EndOffset,StartOffset:EndOffset"</parameter>
						<optional>offsets of existing media in milliseconds. E.g. 0:30000 is 30 seconds of media from start offset. - optional. Skip the value of cutList if you wish to create a copy of parent file</optional>
					</para>
					<para>
						Note: Cutlist values are validated against certain rules in the backend and will be rejected as invalid if not in proper order. 
						Cutlist values should be integer values in an ascending order and they should not overlap. (for e.g. 0:30000,20000:40000 is an invalid cutlist range)  
					</para>
				</listitem>
				<listitem>
					<para>
					  	<parameter>title</parameter>
						<optional>Title for new media - required</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>MetaData</parameter>
						<optional>MetaData for new media - Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>Description</parameter>
						<optional>Description for new media - required</optional>
					</para>
				</listitem>
			</itemizedlist>
			<example>
				<title>Create Media From Cutlist</title>
				<table border="1">
				<title>Create Media From Cutlist</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>201, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>None</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>Resource/File/CreateMediaFromCutList</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<programlisting>
					<![CDATA[
					
					<CreateMediaFromCutList byNID="" cutList="StartOffset:EndOffset,StartOffset:EndOffset" title="">
							  <MetaData>
							         <Tag Name="">
						            <content>Value</content>
						         </Tag>
						      </MetaData>
						      <Description />
						  </CreateMediaFromCutList>

					
				       ]]>
				</programlisting>
			</example>
			<example>
				<title>Create Media From Cutlist Response</title>
				<programlisting>
					<![CDATA[
			       <CreateMediaFromCutList>
					    <File NID="" title="" fileType="" streamType="" size="" playlength="" mediaID="" dateCreated="" dateModified="" readOnly="" mediaGroupID="" clipID="" sessionConfigNID="" bypassAutoStorageRules="" state="" ffTracks="">
					        <description/>
					        <Dir NID="" dirTitle=""/>
					        <MetaData>
					            <Tag Name=""/>
					        </MetaData>
					        <Groups>
					            <Tag Name="" Value=""/>
					        </Groups>
					        <Download>
					            <Media format="Proprietary" stale="" state="Busy" downloadURL=""/>
					            <Media format="Standard" stale="" state="Busy" downloadURL=""/>
					        </Download>
					        <Permissions delete="" modify="" read="" export="" playback=""/>
					    </File>
					</CreateMediaFromCutList>   
					    ]]>
			   	</programlisting>
			</example>
		 </section>
		 
		 <section>
			<title>Trim File with Cutlist</title>
			<para>Trim out sections of an existing mediafile using start and end offsets within it. 
			Generates a file notification when the trimmed media is ready. 
			Please subscribe for file updates using a subscriptionID in GetFile request for receiving file notifications.</para>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>byNID</parameter>
						<optional>fileNID of existing media - required</optional>
					</para>
				</listitem>				
				<listitem>
					<para>
						<parameter>cutList="StartOffset:EndOffset,StartOffset:EndOffset"</parameter>
						<optional>offsets of existing media in milliseconds. E.g. 0:30000 is 30 seconds of media from start offset. - required</optional>
					</para>
					<para>
						Note: Cutlist values are validated against certain rules in the backend and will be rejected as invalid if not in proper order. 
						Cutlist values should be integer values in an ascending order and they should not overlap. (for e.g. 0:30000,20000:40000 is an invalid cutlist range)  
					</para>
				</listitem>
			</itemizedlist>
			<example>
				<title>Trim File with Cutlist</title>
				<table border="1">
				<title>Trim File with Cutlist</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>202, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>None</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>Resource/File/Trim</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<programlisting>
					<![CDATA[
					
					<TrimFile byNID=""
						cutList="StartOffset:EndOffset,StartOffset:EndOffset"></TrimFile>
					
				       ]]>
				</programlisting>
			</example>
			<example>
				<title>Trim File with Cutlist Response</title>
				<programlisting>
					<![CDATA[
						<TrimFile>
							<File
								NID="default.mediastreamfileresourcelist.msfrl_a9504438-5bb1-4e09-a389-c60ebf8100f3"
								bypassAutoStorageRules="false" clipID="" dateCreated="1397505139401"
								dateModified="1397505139401" fileType="MediaClip" mediaGroupID=""
								mediaID="480193eb-7930-4d04-8d7a-0af670f2e5dd" playlength="0"
								readOnly="false" sessionConfigNID="" size="" state="Busy" streamType=""
								title="tx4">
								<Dir
									NID="default.mediastreamdirresourcelist.msdrl_4e09075d-cf15-44f8-98c3-ae826bb81727"
									dirTitle="srcrelay1" />
								<Download>
									<Media format="" stale="" state="NotReady" />
								</Download>
								<Groups>
									<Tag>
										<element Name="Location" Value="Sunnyvale" />
										<element Name="Users" Value="Admin" />
									</Tag>
								</Groups>
								<MetaData>
									<Tag Name="">
										<content>Value</content>
									</Tag>
								</MetaData>
								<Permissions delete="true" export="true" modify="true"
									playback="true" read="true" />
								<description />
							</File>
						</TrimFile>
					    ]]>
			   	</programlisting>
			</example>
		 </section>
		 
		  <section>
			<title>Clear Download Cache</title>
			<para>Free the disk space which is occupied by cached media file, after it is downloaded.</para>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>byNID</parameter>
						<optional>fileNID of existing media - required</optional>
					</para>
				</listitem>				
			</itemizedlist>
			<example>
				<title>Clear Download Cache</title>
				<table border="1">
				<title>Clear Download Cache</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP POST</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>202, 200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>None</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>Resource/File/ClearDownloadCache</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 	</table>
				<programlisting>
					<![CDATA[
					
					<ClearDownloadCache  
					      byNID="" >
                     </ClearDownloadCache>
				       ]]>
				</programlisting>
			</example>
			<example>
				<title>Clear Download Cache Response</title>
				<programlisting>
					<![CDATA[
			        <ClearDownloadCache>
					    <File NID="" title="" fileType="" streamType="" size="" playlength="" mediaID="" dateCreated="" dateModified="" readOnly="" mediaGroupID="" clipID="" sessionConfigNID="" bypassAutoStorageRules="" state="" ffTracks="">
					        <description/>
					        <Dir NID="" dirTitle=""/>
					        <MetaData>
					            <Tag Name=""/>
					        </MetaData>
					        <Groups>
					            <Tag Name="" Value=""/>
					        </Groups>
					        <Download>
					            <Media format="Proprietary" stale="" state="Busy" downloadURL=""/>
					            <Media format="Standard" stale="" state="Busy" downloadURL=""/>
					        </Download>
					        <Permissions delete="" modify="" read="" export="" playback=""/>
					    </File>
					</ClearDownloadCache> 
					    ]]>
			   	</programlisting>
			</example>
		 </section>
		 <section>
			<title>Inject Media</title>
			<para>Uploads the provided media file to the media store.
			To get the injectURL, you can use the Get DIR request with format as INJECTURL.
			</para>
			<example>
				<title>Inject Media</title>
				<programlisting>
					<![CDATA[
					
					Sample inject URL:		
					
					http://<DMS_IP>/mediajs/file/upload?dirID=/data1
														&timestamp=1389123260606
														&apiKey=-1110313941673189477
														&signature=fd154a45722592daa9c63ba4ccf8130e
														&sparam=bc8afb2b6575e6032ddc4eb90c8d0aa2
				   ]]>
				</programlisting>
				
				<para>You can upload the file by appending the query parameters to the injectURL and 
					sending HTTP POST with this URL. This should return 200:OK
				</para>
				<programlisting>
					<![CDATA[	
					
					 
					Sample injectURL with appended parameters:
					
					http://<DMS_IP>/mediajs/file/upload?dirID=/data1
														&timestamp=1389123260606
														&apiKey=-1110313941673189477
														&signature=fd154a45722592daa9c63ba4ccf8130e
														&sparam=bc8afb2b6575e6032ddc4eb90c8d0aa2
														&title=new_title
														&patientId=1234
														&patientName=new_patient
														&patientBirthDate=01011980
														&patientGender=male
														&accessionNumber=34534
														&doctorName=doctor_who
														
				]]>
			 </programlisting>
				  
			
			<para>In case server configuration "Enable HLS Streaming" is true and you do not want to create hls then append the query parameter "options=donotcreatehls" to the injectURL.</para>
				
				<programlisting>
					<![CDATA[
					
					
					Sample inject URL if you do not want to create hls:	
					
					http://<DMS_IP>/mediajs/file/upload?dirID=/data1
														&timestamp=1389123260606
														&apiKey=-1110313941673189477
														&signature=fd154a45722592daa9c63ba4ccf8130e
														&sparam=bc8afb2b6575e6032ddc4eb90c8d0aa2
														&options=donotcreatehls
				   ]]>
				</programlisting>
				
			</example>
		 </section>
		 
		 <section>
			<title>Download Media</title>
			<para>Download a media file from the media store on the system.
			To get the downloadURL, you can use the Get File request with format as EXTENDEDURL.
			Send an HTTP GET request using this downloadURL to download and save media to local machine.
			This should return 200:OK
			
			
			</para>
			<example>
				<title>Download Media</title>
				<programlisting>
					<![CDATA[
					
					
					Sample Download URL:		
					http://<DMS_IP>/mediajs/file/download?mediaID=316581ac-5168-42ae-adc7-e6c66099c151
										   &dirID=/data1
										   &timestamp=1389367743953
										   &apiKey=5754498016574178712
										   &signature=0895c6bd4404d70ab62f6f85104fa0f5
										   &format=proprietary
										   &uuid=tx1_89e9d445_53c6_4b7f_ae84_4c9b7f9e4905
										   &persistence=temporary
					
					
					
				     ]]>
				</programlisting>
				<para>Note: if downloadURL not present in the response for Get File, may suggest that the File is not prepared for download.
					Please use Prepare File Request to make the file available for download. This will result in a File Notification which
					includes the downloadURL for the file.Please subscribe for file updates using a subscriptionID in GetFile request in order to receive any
					file notifications.
					</para>
			</example>
	 </section>
		 
	     </section>
	     
	   	<section>
			<title>User </title>
			<para>
				API calls for User
			</para>
		<section>
	        <title>Get User </title>        
	        <para>                  
	          This is the list of Users that the Client has access to.
	        </para>
	        <example>
	          <title>Get User Request</title>
	          <table border="1">
	           <title>Get User Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.User+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>startFrom, countToFetch, sortBy, sortOrder, whereNID, whereUsername, 
									selectFormat, whereTextSubStr, whereTagExpr, subscriptionID</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/User</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
			   <listitem>
					<para>
						<parameter>sortBy="username/fullName"</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>subscriptionID</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>					
			</itemizedlist>
	        </example>
	        <example>
	          <title>Get User Response - BASIC Format</title>
	          <programlisting>
	            <![CDATA[            
		<Resource from="0" total="50">
				<User NID="" username="" email="" fullName="" creationDate="" 
					  modifiedDate="" presence="" state="" externalAuthentication="">
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
				</User>
				<User NID="" username="" email="" fullName="" creationDate="" 
					  modifiedDate="" presence="" state="" externalAuthentication="">
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
				</User>
				<User NID="" username="" email="" fullName="" creationDate="" 
					  modifiedDate="" presence="" state="" externalAuthentication="">
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
				</User>
		</Resource>
	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get User Response - EXTENDED Format</title>
	          <programlisting>
	            <![CDATA[
		<Resource from="0" total="50">	
			<User NID="" username="" email="" fullName="" creationDate=""  
				  modifiedDate="" presence="" state="" externalAuthentication="">				
				<Groups>
					<Tag Name="" Value="" />
				</Groups>		
				<UserPrivateData/>		
			</User>	
		</Resource>
	]]>
	          </programlisting>
	        </example>
		</section>      
		
		<section>
	        <title>Get User Tags</title>
	        <para>
	          This is the list of Tags that the Client has access to.         
	        </para>
	        <example>
	          <title>Get User Tags Request</title>
	          <table border="1">
	          <title>Get User Tags Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.User-Tags+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>sortBy, sortOrder, whereNameTextSubString,
										WhereValueTextSubStr, selectFormat</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/User</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			 </table>
	         <itemizedlist>
			  <listitem>
					<para>
						<parameter>sortBy="Name/Value"</parameter>								
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereNameTextSubString=""</parameter>
						<optional>Optional</optional>					
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>whereValueTextSubString</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>selectFormat="NameList/NameValueList/NameValueTree"</parameter>
						<optional>Default=NameValueList</optional>
					</para>
				</listitem>
			</itemizedlist>
	        </example>
	        <example>
	          <title>Get User Tags Response - NameList Format</title>
	          <programlisting>
	            <![CDATA[
		    <Resource from="0" total="0">
		    	<UserTags>
					<Tag Name="Location"/>
					<Tag Name="Network"/>
		    	</UserTags>
		    </Resource> ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get User Tags Response - NameValueList Format</title>
	          <programlisting>
	            <![CDATA[
		   <Resource from="0" total="0">
		    	<UserTags>
					<Tag Name="Location" Value="Sunnyvale"/>
					<Tag Name="Location" Value="Hyderabad"/>
				</UserTags>
		   </Resource> 	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get User Tags Response - NameValueTree Format</title>
	          <programlisting>
	            <![CDATA[
		  	<Resource from="0" total="0">
		    	<UserTags>
					<Tag Name="Location">
				   		<Value>Sunnyvale</Value>
				   		<Value>Hyderabad</Value>
					</Tag>
				</UserTags>
			</Resource> ]]>
	          </programlisting>
	        </example>
		</section>
		<section>
      <title>Set User Password</title>        
        <para>                  
          This is used to set the user password.         
        </para>
        <example>        
          <title>Set User Password Request</title> 
          <table border="1">
					<title>Set User Password Request</title>
						<tbody>
							<tr>
								<td>Request</td>
								<td>HTTP POST</td>
							</tr>
							<tr>
								<td>Accept(No spaces or newlines)</td>
								<td>"application/vnd.barco.nimbus.User-Password+xml"</td>
							</tr>
							<tr>
								<td>Status</td>
								<td>200, 401, 500</td>
							</tr>
							<tr>
								<td>Query Parameters</td>
								<td>NID</td>
							</tr>
							<tr>
								<td>Resource Path</td>
								<td>/Resource/User</td>
							</tr>
							<tr>
								<td>Authorization</td>
								<td>Basic (Required)</td>
							</tr>
						</tbody>
					</table>                  
          <programlisting>
            <![CDATA[	
	<SetUserPassword oldPassword="" newPassword=""/>
]]>
          </programlisting>          
        </example>                  
        <example>
          <title>Set User Password Response</title>
          <programlisting>
            <![CDATA[
	<Resource>
		<User NID="" username="" externalAuthentication="" email="" fullName="" creationDate="" modifiedDate="" presence="" state="" password="">
        	<Groups>
            	<Tag Name="" Value=""/>
        	</Groups>
        	<UserPrivateData/>
    	</User>
    </Resource>
]]>
          </programlisting>
        </example>
        </section>
		</section>
	   <section>
			<title>Get Tags</title>
	        <para>
	          This is the list of Tags that the Client has access to.         
	        </para>
	        <example>
	          <title>Get Tags Request</title>
	          <table border="1">
	           <title>Get Tags Request</title>
     				<tr>
						<td>Request</td>
       					<td>HTTP GET</td>
  					</tr>
  					<tr>
						<td>Accept(No spaces or newlines)</td>
       					<td>"application/vnd.barco.nimbus.Tags+xml"</td>
  					</tr>
  					<tr>
						<td>Status</td>
       					<td>200, 401, 500</td>
  					</tr>
  					<tr>
						<td>Query Parameters</td>
       					<td>sortBy, sortOrder, whereNameTextSubString, whereValueTextSubString,
			     					wherePermissions, whereObjectType, selectFormat</td>
  					</tr>
  					<tr>
						<td>Resource Path</td>
       					<td>/Resource/Tags</td>
  					</tr>
  					<tr>
						<td>Authorization</td>
       					<td>Basic (Required)</td>
  					</tr>
			  </table>
	          <itemizedlist>
			  <listitem>
					<para>
						<parameter>sortBy="Name/Value"</parameter>								
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereNameTextSubString=""</parameter>
						<optional>Optional</optional>					
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>whereValueTextSubString</parameter>
						<optional>Optional</optional>
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>selectFormat="NameList/NameValueList/NameValueTree"</parameter>
						<optional>Default=NameValueList</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereObjectType="Device/Users/MediaRoom/Profiles/Ports/Media/ALL"</parameter>
					</para>
				</listitem>	
			</itemizedlist>
	        </example>
	        <example>
	          <title>Get Tags Response - NameList Format</title>
	          <programlisting>
	            <![CDATA[
		    <Resource from="0" total="0">
		    	<Tags>
					<Tag Name="Location" 
					objectType="Devices/Users/MediaRoom/Profiles/Ports/Media/ALL"/>
					<Tag Name="Network" 
					objectType="Devices/Users/MediaRoom/Profiles/Ports/Media/ALL"/>
		    	</Tags>
		    </Resource> ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Tags Response - NameValueList Format</title>
	          <programlisting>
	            <![CDATA[
		    <Resource from="0" total="0">
		    	<Tags>
					<Tag Name="Location" Value="Sunnyvale" 
				 	objectType="Devices/Users/MediaRoom/Profiles/Ports/Media/ALL"/>
					<Tag Name="Location" Value="Hyderabad" 
					objectType="Devices/Users/MediaRoom/Profiles/Ports/Media/ALL"/>
				</Tags>
			</Resource>		]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Tags Response - NameValueTree Format</title>
	          <programlisting>
	            <![CDATA[
		   <Resource from="0" total="0">
		   		<Tags>
					<Tag Name="Location" 
				   	objectType="Devices/Users/MediaRoom/Profiles/Ports/Media/ALL">
				   		<Value>Sunnyvale</Value>
				   		<Value>Hyderabad</Value>
					</Tag>
				</Tags>
			</Resource>		]]>
	          </programlisting>
	        </example>
		</section>	
		
		<section>
			<title>Get DisplayProfile</title>
			<para>
				This is the list of DisplayProfile objects that the Client has access to.
			</para>
			<example>
				<title>Get DisplayProfile Request</title>
				<table border="1">
				<title>Get DisplayProfile Request</title>
					<tbody>
						<tr>
							<td>Request</td>
							<td>HTTP GET</td>
						</tr>
						<tr>
							<td>Accept</td>
							<td>"application/vnd.barco.nimbus.DisplayProfile+xml"</td>
						</tr>
						<tr>
							<td>Status</td>
							<td>200, 401, 500</td>
						</tr>
						<tr>
							<td>Query Parameters</td>
							<td>selectFormat, sortBy, sortOrder,
								countToFetch, startFrom,
								whereDateRange, whereNID,whereTagExpr,whereTextSubStr 
							</td>
						</tr>
						<tr>
							<td>Resource Path</td>
							<td>Resource/DisplayProfile</td>
						</tr>
						<tr>
							<td>Authorization</td>
							<td>Basic (Required)</td>
						</tr>
					</tbody>
				</table>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>sortBy="title"</parameter>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>whereTextSubStr=""</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>whereTagExpr</parameter>
							<optional>Optional</optional>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>selectFormat="BASIC/EXTENDED"
							</parameter>
							<optional>Default=BASIC</optional>
						</para>
					</listitem>
				</itemizedlist>
			</example>
			<example>
				<title>Get DisplayProfile Response - BASIC Format</title>
				<programlisting>
	            <![CDATA[
	         <Resource from="1" total="12">
    <DisplayProfile NID="default.displayprofilelist.dpl_1d31d3f3-f0ea-42a1-8f6a-cac8b3f88268" title="2x1_Canvas_1920x1080" portType="" priority=""/>
</Resource>
		  ]]>
	          </programlisting>
			</example>
			<example>
				<title>Get DisplayProfile Response - EXTENDED Format</title>
				<programlisting>
	            <![CDATA[
				<Resource from="1" total="12">
    <DisplayProfile NID="default.displayprofilelist.dpl_1d31d3f3-f0ea-42a1-8f6a-cac8b3f88268" title="2x1_Canvas_1920x1080" portType="" priority="">
        <description/>
        <Groups>
            <Tag Name="" Value=""/>
        </Groups>
        <Canvas id="" hres="1920" vres="1080">
            <Background enable="" zIndex="" content="">
                <ImageContent imageURL="" color=""/>
                <SessionContent enableConnPanel="" enableBookmarkPanel="" enableCtrlPanel="" enableHeaderPanel="" enablePlayerPanel="" sessionId=""/>
            </Background>
            <Layout id="LayoutId1" type="" nRow="" nCol="" colWidth="" rowHeight="" hpad="" vpad="" stripPos="" nStrip="" border="hide" borderStyle="[8px]" header="hide" headerStyle="basic" active="true"/>
            <Window id="Win1" content="">
                <ConnectionContent MediaStreamIOPortTypeTitle="" MediaStreamIOPortElementID="" sessionId="" connId="" vres="" hres="" srcKbmCtrl=""/>
                <ThumbnailContent MediaStreamIOPortTypeTitle="" MediaStreamIOPortElementID="" imageURL="" refreshInterval=""/>
                <Properties zIndex="100" border="" vpos="0%" hpos="0%" vres="100%" hres="50%" aspect="" transparency="0" layoutId="LayoutId1" layoutPos="" visibility="true" maximize="false" fps="15" scale="fitWindow" mute="false" volume="50%" remoteKbmCtrl="false" scrollHPos="0" scrollVPos="0"/>
            </Window>
            <Window id="Win2" content="">
                <ConnectionContent MediaStreamIOPortTypeTitle="" MediaStreamIOPortElementID="" sessionId="" connId="" vres="" hres="" srcKbmCtrl=""/>
                <ThumbnailContent MediaStreamIOPortTypeTitle="" MediaStreamIOPortElementID="" imageURL="" refreshInterval=""/>
                <Properties zIndex="100" border="" vpos="0%" hpos="50%" vres="100%" hres="50%" aspect="" transparency="0" layoutId="LayoutId1" layoutPos="" visibility="true" maximize="false" fps="15" scale="fitWindow" mute="false" volume="50%" remoteKbmCtrl="false" scrollHPos="0" scrollVPos="0"/>
            </Window>
        </Canvas>
    </DisplayProfile>
</Resource>
		  	]]>
	          </programlisting>
			</example>
			
		</section>
	</chapter>
	<chapter>
		<title>Resource Update Notifications</title>	       	
		<section>
		<title>Resource ConnectionUpdate Notification</title>
		<itemizedlist>
			<listitem>
				<para>
					<parameter>sessionId</parameter>
					<optional>session id</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>id</parameter>
					<optional>connection id</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>name</parameter>
					<optional>connection name</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>state</parameter>
					<optional>connection state: Check connectionNotification State listing for enum values</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>errorCode</parameter>
					<optional>optional if there is no error.</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>errorData</parameter>
					<optional>error description. optional if there is no error.</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>windowId</parameter>
					<optional>window id</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>canvasId</parameter>
					<optional>canvas Id</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SrcEntity:id</parameter>
					<optional>source entity id </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SrcEntity:resourceTitle</parameter>
					<optional>source title </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SrcEntity:resourceNID</parameter>
					<optional>source nid </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SrcEntity:userJID</parameter>
					<optional>source user JID </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SrcEntity:userFullName</parameter>
					<optional>source user full name </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>DstEntity:id</parameter>
					<optional>destination entity id </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>DstEntity:resourceTitle</parameter>
					<optional>destination title </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>DstEntity:resourceNID</parameter>
					<optional>destination nid </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>DstEntity:userJID</parameter>
					<optional>destination user JID </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>DstEntity:userFullName</parameter>
					<optional>destination user full name </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:id</parameter>
					<optional>id of profile </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:profileNID</parameter>
					<optional>Pofile nid </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:profileName</parameter>
					<optional>Pofile Name </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:allowKMSwitch='true/false'</parameter>
					<optional>allow key boeard mouse switch </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:remoteKM='true/false'</parameter>
					<optional>describes remote key boeard mouse allowed or not </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:avOption='Audio/Video/Both'</parameter>
					<optional>information about audio video options  </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:maxBandwidth</parameter>
					<optional>bandwidth used for this connection </optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:lowCompression</parameter>
					<optional>low compression used for this connection</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:highCompression</parameter>
					<optional>high compression used for this connection</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:burstRatio</parameter>
					<optional>burst Ratio used for this connection</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:burstDuration</parameter>
					<optional>burst duration used for this connection</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:unicast='true/false'</parameter>
					<optional>information about unicast connection</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Profile:multicast='true/false'</parameter>
					<optional>information about multicast connection</optional>
				</para>
			</listitem>
		</itemizedlist>
		
			<example>
				<title>AuthConectionInfo element in AuthorizationRequired Notification</title>
				<programlisting>
	            		<![CDATA[
	   	<AuthConnectionInfo sessionId='' id=''  name='' state='' type='VIEW/PLAYBACK/RECORD/PVR' errorCode='' errorData='' windowId='' canvasId=''>
			<SrcEntity id='' resourceTitle='' resourceNID='' userJID='' userFullName='' />
			<DstEnity id='' resourceTitle='' resourceNID='' userJID='' 	userFullName='' />
			<Profile id='' profileName='' profileNID='' allowKMSwitch='' remoteKM='' avOption='' maxBandwidth='' 
		   	   lowCompression='' highCompression=''	burstRatio='' burstDuration='' unicast='' multicast='' />
		</AuthConnectionInfo>		
	            		]]>
	          	</programlisting>
			</example>
			
			<example>
				<title>PortConectionInfo element in PortConnectionUpdate Notification - BASICCONNECTIONINFO format</title>
				<programlisting>
	            		<![CDATA[
	            				<ConnectionStatus>
									<PortSessionInfo id='' name=''>
	   									<PortConnectionInfo id='' name='' state=''  type='VIEW/PLAYBACK/RECORD/PVR' 
				 							srcNID='' srcTitle='' dstNID='' dstTitle='' errorCode='' errorData='' windowId='' canvasId=''/>
				 					</PortSessionInfo>
								</ConnectionStatus>
											
	            		]]>
	          	</programlisting>
			</example>
			
			<example>
				<title>PortConectionInfo element in PortConnectionUpdate Notification - EXTENDEDCONNECTIONINFO format</title>
				<programlisting>
	            		<![CDATA[
			            		<ConnectionStatus>
									<PortSessionInfo id='' name=''>
	   									<PortConnectionInfo id='' name='' state=''  type='VIEW/PLAYBACK/RECORD/PVR' 
				 							srcNID='' srcTitle='' dstNID='' dstTitle='' errorCode='' errorData='' windowId='' canvasId=''
				 							srcUserJID='' srcUserName='' destUserJID='' destUserName=''>
					 
				 							<Profile id='' profileName='' profileNID='' allowKMSwitch='' remoteKM='' avOption=''
			    								maxBandwidth='' lowCompression='' highCompression='' burstRatio=''
												burstDuration='' unicast='' multicast='' />
										</PortConnectionInfo>
									</PortSessionInfo>
								</ConnectionStatus>		
	            		]]>
	          	</programlisting>
			</example>
			
			<example>
				<title>FileConnectionInfo element in FileConnectionUpdate Notification - BASICCONNECTIONINFO format</title>
				<programlisting>
	            		<![CDATA[
	            				<ConnectionStatus>
									<FileSessionInfo id='' name=''>
										<FileConnectionInfo id='' name='' state=''  type='VIEW/PLAYBACK/RECORD/PVR' 
											 srcNID='' srcTitle='' dstNID='' dstTitle='' errorCode='' errorData='' windowId='' canvasId=''/>
									</FileSessionInfo>
								</ConnectionStatus>
											
	            		]]>
	          	</programlisting>
			</example>
		</section>
	
		<section>
			<title>Resource ConnectionStateUpdate Notification</title>
			<para>Check ConnState and Timeline notifications in SessionNotifications for paramter listing</para>
			<example>
				<title>ConectionState element in ConnectionStateUpdate Notification</title>
				<programlisting>
	            		<![CDATA[		
		   <ConnectionState sessionId='' connId='' value='' errorCode='' errorData=''>
				<Timeline sessionId="" connGroupId="" connId="" id="">
					<Start WC="2341234" TC="" Offset="3456" parentTimelineId=""/>
					<Last WC="7444674" TC="" Offset="9678687" TimeScale="0"
					requestedAction="Pause"/>
				</Timeline>				
			</ConnectionState>	
	            		]]>
	          			</programlisting>
			</example>
		</section>
		<section>
			<title>Port</title>
			<para>
				This is a list of update notifications corresponding to the port.
			</para>
			<section>
				<title>Port Update</title>
				<para>
					This is a notification for port update. 
				</para>
				<example>
					<title>Port Update Notification BASIC</title>
					<programlisting>
            		<![CDATA[		
		 	 <PortUpdate>
    			<Port NID='' title='' streamType='' presence='' state='' portType='' selectFormat="BASIC" operation="Add/Delete/Update" subscriptionID=""/>   
			 </PortUpdate>
            		]]>
          			</programlisting>
				</example>
				<example>
					<title>Port Update Notification EXTENDED</title>
					<programlisting>
            		<![CDATA[		
		 	 <PortUpdate>
    			<Port NID='' title='' streamType='' presence='' state='' portType='' selectFormat="EXTENDED" operation="Add/Delete/Update" subscriptionID="">
					<Asset NID='' title='' deviceType='' deviceNID='' />
					<description />
					<Groups>
						<Tag name='' value='' />
					</Groups>
					<MaxInstanceCount />
					<FeatureList>
						<Feature name="" />
					</FeatureList>
				</Port>		
			 </PortUpdate>
            		]]>
          			</programlisting>
				</example>
			</section>			

			<section>
				<title>Port Connection Update</title>
				<para>
					This is a notification for port connection update. 
				</para>
				<example>
					<title>Port Connection Update Notification</title>
					<programlisting>
            		<![CDATA[	
            		        <PortConnectionUpdate>
            		           <Port NID='' subscriptionID='' operation='Add/Delete'>	
				    	 	     <PortConnectionInfo ...../>
				    	 	     <!-- Check PortConnectionInfo element in ConnectionUpdate Section of Update Notification Chapter  -->
				    	 	  </Port>
				    	 	</PortConnectionUpdate>
					]]>
          			</programlisting>
				</example>
			</section>
			<section>
				<title>Port Connection State Update</title>
				<para>
					This is a notification for port connection state update. 
				</para>
				<example>
					<title>Port Connection State Update Notification</title>
					<programlisting>
            		<![CDATA[		
			<PortConnectionStateUpdate>			
				<Port NID='' subscriptionID=''>
				    <ConnectionState .../>
					<!-- check ConnectionState element in ConnectionStateUpdate section in Update Notification chapter -->
				</Port>
			</PortConnectionStateUpdate>
            		]]>
          			</programlisting>
				</example>
			</section>
			<section>
				<title>Port Display Config Update</title>
				<para>
					This is a notification for port Display Config Updates. 
				</para>
				<example>
					<title>Port DisplayConfigUpdate Notification</title>
					<programlisting>
            		<![CDATA[
						<PortDisplayConfigUpdate>			
							<Port NID='' subscriptionID='' operation='Update'>
							  <!--Check the appendix for device specific config-->
							</Port>
					    </PortDisplayConfigUpdate>
					]]>
          			</programlisting>
				</example>
			</section>
			<section>
				<title>Port Display Status Update</title>
				<para>
					This is a notification for port Display Status Updates. 
				</para>
				<example>
					<title>Port DisplayStatusUpdate Notification</title>
					<programlisting>
            		<![CDATA[
						<PortDisplayStatusUpdate>			
							<Port NID='' subscriptionID='' operation='Update'>
							  <!--Check the appendix for device specific Status-->
							</Port>
					    </PortDisplayStatusUpdate>
					]]>
          			</programlisting>
				</example>
			</section>
		</section>
		<section>
			<title>File</title>
			<para>
				This is a list of update notifications corresponding to the File.
			</para>
			<section>
				<title>File Update</title>
				<para>
					This is a notification for File update. 
				</para>
				<example>
					<title>File Update Notification BASIC</title>
					<programlisting>
            		<![CDATA[
            			
            	</FileUpdate>		
	            		<File NID='' title='' fileType='MediaClip' streamType='' size=''
					playlength='' state='' dateCreated='' dateModified=''
					readOnly='' mediaGroupId='' ffTracks='' bypassAutoStorageRules='true/false'>
					<Groups>
						<Tag Name='' Value='' />
					</Groups>
					<Permissions modify='' delete='' read='' export='' playback='' />
					<MetaData>
						<Tag Name=''>Value</Tag>
					</MetaData>
					</File>
				</FileUpdate>	
            		]]>
          			</programlisting>
				</example>
				<example>
					<title>File Update Notification EXTENDED</title>
					<programlisting>
            		<![CDATA[	
            		
            		</FileUpdate>		
	            		<File NID='' title='' fileType='MediaClip' streamType='' size=''
					playlength='' state='' dateCreated='' dateModified=''
					readOnly='' mediaGroupId='' ffTracks='' bypassAutoStorageRules='true/false'>
					<Groups>
						<Tag Name='' Value='' />
					</Groups>
					<Permissions modify='' delete='' read='' export='' playback='' />
					<MetaData>
						<Tag Name=''>Value</Tag>
					</MetaData>
					<Download>
	            		<Media format="Standard" state="NotReady" stale="" />
	            		<Media format="Proprietary" state="NotReady" stale=""/>
         			</Download>
         			<Dir dirNID='' dirTitle='' />
					</File>
				</FileUpdate>		
		 	
            		]]>
          			</programlisting>
				</example>
				<example>
					<title>File Update Notification EXTENDEDURL</title>
					<programlisting>
            		<![CDATA[		
		 	 </FileUpdate>		
	            		<File NID='' title='' fileType='MediaClip' streamType='' size=''
					playlength='' state='' dateCreated='' dateModified=''
					readOnly='' mediaGroupId='' ffTracks='' bypassAutoStorageRules='true/false'>
					<Groups>
						<Tag Name='' Value='' />
					</Groups>
					<Permissions modify='' delete='' read='' export='' playback='' />
					<MetaData>
						<Tag Name=''>Value</Tag>
					</MetaData>
					<Download>
	            		<Media format="Standard" state="NotReady" stale="" />
	            		<Media format="Proprietary" state="NotReady" stale=""/>
         			</Download>
         			<Dir dirNID='' dirTitle='' />
					</File>
				</FileUpdate>		
            		]]>
          			</programlisting>
				</example>
			</section>
			<section>
				<title>File Connection Update</title>
				<para>
					This is a notification for file connection update. 
				</para>
				<example>
					<title>File Connection Update Notification</title>
					<programlisting>
            		<![CDATA[	
            		        <FileConnectionUpdate>
            		           <File NID='' subscriptionID='' operation='Add/Delete'>	
				    	 	     <FileSessionInfo ...../>
				    	 	     <!-- Check FileConnectionInfo element in ConnectionUpdate Section of Update Notification Chapter  -->
				    	 	  </File>
				    	 	</FileConnectionUpdate>
					]]>
          			</programlisting>
				</example>
			</section>
			<section>
				<title>File Connection State Update</title>
				<para>
					This is a notification for file connection state update. 
				</para>
				<example>
					<title>File Connection State Update Notification</title>
					<programlisting>
            		<![CDATA[		
			<FileConnectionStateUpdate>			
				<File NID='' subscriptionID=''>
				    <ConnectionState .../>
					<!-- check ConnectionState element in ConnectionStateUpdate section in Update Notification chapter -->
				</File>
			</FileConnectionStateUpdate>
            		]]>
          			</programlisting>
				</example>
			</section>
			</section>	
	</chapter>
	<chapter>
		<title>Session API</title>
		<para>
			API Calls used in Session
		</para>
		<section>
			<title>Session Info</title>
			<para>
				API calls for Session Info
			</para>
	      <section>
	      	<title>Get Session Config</title>
	        <para>
	          This is the list of runtime Session Configurations that the Client has access to.
	          Refer to the Appendix for the format of the Session object
	        </para>
	       	<example>
	          <title>Get Session Config Request</title>
	          <table border="1">
	          <title>Get Session Config Request</title>
	  			<tr>
					<td>Request</td>
	    			<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
			  </table>
	          <itemizedlist>
		        <listitem>
					<para>
						<parameter>startFrom</parameter>
					</para>
				</listitem>
				 <listitem>
					<para>
						<parameter>countToFetch</parameter>
					</para>
				</listitem>
			   <listitem>
					<para>
						<parameter>sortBy</parameter>
					</para>
				</listitem>
				 <listitem>
					<para>
						<parameter>sortOrder</parameter>
					</para>
				</listitem>		   		
				<listitem>
					<para>
						<parameter>whereNID</parameter>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereTagExpr</parameter>
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>whereTextSubStr</parameter>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>subscriptionID</parameter>
					</para>
				</listitem>				
			 </itemizedlist>
	        </example>
	        
	        <example>
          		<title>Get Session Config Request</title>
          		<programlisting>
            		<![CDATA[
		<GetSessionConfig startFrom="1" countToFetch="100"
			sortBy="" sortOrder="ascending/descending"
			selectFormat="BASIC/EXTENDED"
			whereNID=""
			whereTextSubStr=""
			whereTagExpr=""
			subscriptionID=''/>
]]>
          		</programlisting>
        	</example>
	        
	        
			<example>
          		<title>Get Session Config Response - BASIC Format</title>
          		<programlisting>
            		<![CDATA[
	<GetSessionConfig from="0" total="50">
			<SessionConfig NID="" title="" dateCreated="" playbackOption="" type="">
				<Groups>
					<Tag Name="" Value="" />
				</Groups>
			</SessionConfig>
			<SessionConfig NID="" title="" dateCreated="" playbackOption="" type="">
				<Groups>
					<Tag Name="" Value="" />
				</Groups>
			</SessionConfig>
	</GetSessionConfig>
]]>
          		</programlisting>
        	</example>
        	<example>
          		<title>Get Session Config Response - EXTENDED Format</title>
          		<programlisting>
            		<![CDATA[
	<GetSessionConfig from="0" total="50">
		 	<SessionConfig NID="" title="">
				<description />
				<Groups>
					<Tag Name="" Value="" />
				</Groups>
				<SessionInfo/>
		 	</SessionConfig>
	</GetSessionConfig>
]]>
          		</programlisting>
        	</example>
      	</section>
      	<section>
        	<title>Get Session</title>
        	<optional>Not Implemented</optional>
        	<para>
	          This is the list of runtime Sessions that the Client has access to.
	          Refer to the Appendix for the format of the Session object
	        </para>
	        <example>
	          <title>Get Session Request</title>
	          <table border="1">
	          <title>Get Session Request</title>
	  			<tr>
					<td>Request</td>
	    			<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
			  </table>
	          <itemizedlist>
	           <listitem>
					<para>
						<parameter>startFrom</parameter>
						<optional>Not Supported</optional>
					</para>
				</listitem>
				 <listitem>
					<para>
						<parameter>countToFetch</parameter>
						<optional>Not Supported</optional>
					</para>
				</listitem>
			   <listitem>
					<para>
						<parameter>sortBy</parameter>
						<optional>Not Supported</optional>
					</para>
				</listitem>
				 <listitem>
					<para>
						<parameter>sortOrder</parameter>
						<optional>Not Supported</optional>
					</para>
				</listitem>		   		
				<listitem>
					<para>
						<parameter>whereNID</parameter>
						<optional>Not Supported</optional>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>whereTagExpr</parameter>
						<optional>Not Supported</optional>
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>whereTextSubStr</parameter>
						<optional>Not Supported </optional>
					</para>
				</listitem>			
			</itemizedlist>
	        </example>
	        
	        <example>
          		<title>Get Session Request</title>
          		<programlisting>
            		<![CDATA[
		<GetSession startFrom="1" countToFetch="100"
			sortBy="" sortOrder="ascending/descending"
			selectFormat="BASIC/EXTENDED"
			whereNID=""
			whereTextSubStr=""
			whereTagExpr=""
			subscriptionID=''/>
]]>
          		</programlisting>
        	</example>
	        
	        
	        <example>
	          <title>Get Session Response - BASIC Format[ Not Implemented ]</title>
	          <programlisting>
	            <![CDATA[
		<GetSession from="0" total="50">
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated='' playlength='' />
				</Session>
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated='' playlength='' />
				</Session>
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated='' playlength='' />
				</Session>
		</GetSession>
	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Session Response - BASIC Format[Currently Implemented]</title>
	          <programlisting>
	            <![CDATA[
		<GetSession from="0" total="50">
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated=''/>
				</Session>
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated=''/>
				</Session>
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated=''/>
				</Session>
		</GetSession>
	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Session Response - EXTENDED Format[ Not Implemented ]</title>
	          <programlisting>
	            <![CDATA[
		<GetSession from="0" total="50">
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated='' playlength='' />
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
					<MetaData>
						<Tag Name=''></Tag>
					</MetaData>
					<TimelineList>
						<Timeline id=''>
							<Start WC='' Offset='' TC='' parentTimelineId='' />
							<Last WC='' Offset='' TC='' TimeScale='' requestedAction=''/>
						</Timeline>
					</TimelineList>
					<GrpFileList>
						<GrpFile type='SyncPly' id='' resourceNID='' resourceTitle=''
							dateCreated='' recSessionConfigId='' recSessionId='' syncEntityId=''>
					         <MetaData>
					            <Tag Name=""></Tag>
					         </MetaData>
					      </GrpFile>
						<GrpFile type='SyncRec' id='' resourceNID='' resourceTitle='' >
					         <MetaData>
					            <Tag Name=""></Tag>
					         </MetaData>
					    </GrpFile>
					</GrpFileList>
					<DirList>
						<Dir id='' resourceNID='' resourceTitle='' />
					</DirList>
					<ProfileList>
						<Profile id='' name='' profileNID='' ffTracks=''/>
					</ProfileList>				
					]]>
	          </programlisting>
	          </example>
	          <example>
	          	<title>Get Session Response - EXTENDED Format[ Not Implemented ] (Continued)</title>
	          	<programlisting>
	            	<![CDATA[
					<EntityList>
						<Entity type='SrcPort' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<User type='' userNID='' username='' userJID='' />
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
							<PVR enable='' trimLength='' connId='' recEntityId=''
								plyEntityId='' ffTracks='' />
						</Entity>
						<Entity type='DstPort' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<User type='' userNID='' username='' userJID='' />
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
						</Entity>
						<Entity type='RlyPort' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<User type='' userNID='' username='' userJID='' />
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
						</Entity>
						<Entity type='PlyFile' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<User type='' userNID='' username='' userJID='' />
							<File type='' resourceNID='' resourceTitle='' dirId=''
								grpFileId='' startOffset='' playLength='' />
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
						</Entity>
						<Entity type='RecFile' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<User type='' userNID='' username='' userJID='' />
							<File type='' resourceNID='' resourceTitle='' dirId=''
								grpFileId='' key="" action="" keyMetaDataKeyName="">
					            <MetaData>
					               <Tag Name=""></Tag>
					            </MetaData>
					        </File>
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
						</Entity>
						<Entity type='PVRFile' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<User type='' userNID='' username='' userJID='' />
							<File type='' resourceNID='' resourceTitle='' dirId=''
								trimLength='' />
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
						</Entity>
					</EntityList>
					]]>
	          	</programlisting>
	          </example>
	          <example>
	          		<title>Get Session Response - EXTENDED Format[ Not Implemented ] (Continued)</title>
	          		<programlisting>
	           			<![CDATA[
					
					<ConnectionList>
						<Connection type='VIEW/PLAYBACK' id='' gid='' name=''
							mode='AUTO/ONDEMAND' srcEntityId='' dstEntityId='' profileId=''
							authEntityId='' streamURL='' state='' timelineId='' />
						<Connection type='RECORD' id='' gid='' name=''
							mode='AUTO/ONDEMAND' srcEntityId='' dstEntityId='' profileId=''
							authEntityId='' streamURL='' state='' timelineId='' />
						<Connection type='PVR' id='' gid='' name='' mode='AUTO/ONDEMAND'
							srcEntityId='' dstEntityId='' profileId='' authEntityId='' streamURL=''
							state='' timelineId='' />				
					</ConnectionList>
				</Session>
		</GetSession>
	]]>
	          		</programlisting>
	        </example>
	        <example>
	          <title>Get Session Response - EXTENDED Format[Currently Implemented]</title>
	          <programlisting>
	            <![CDATA[
		<GetSession from="0" total="50">
				<Session id='' name='' type='' state=''
					timelineId='' recordTimelineId=''>
					<Properties sessionConfigNID='' ownerUserJID=''
						dateCreated=''/>
					<Groups>
						<Tag Name="" Value="" />
					</Groups>
					<MetaData>
						<Tag Name=''></Tag>
					</MetaData>
					<TimelineList>
						<Timeline id=''>
							<Start WC='' Offset='' TC='' parentTimelineId='' />
							<Last WC='' Offset='' TC='' TimeScale='' requestedAction=''/>
						</Timeline>
					</TimelineList>
					<GrpFileList>
						<GrpFile type='SyncPly' id='' resourceNID='' resourceTitle=''
							dateCreated='' recSessionConfigId='' recSessionId='' syncEntityId='' >
					         <MetaData>
					            <Tag Name=""></Tag>
					         </MetaData>
					    </GrpFile>
						<GrpFile type='SyncRec' id='' resourceNID='' resourceTitle='' >
					         <MetaData>
					            <Tag Name=""></Tag>
					         </MetaData>
					    </GrpFile>
					</GrpFileList>
									]]>
	          	</programlisting>
	          </example>
	          <example>
	          	<title>Get Session Response - EXTENDED Format[ Currently Implemented ] (Continued)</title>
	          	<programlisting>
	            	<![CDATA[
					
					<EntityList>
						<Entity type='SrcPort' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
							<PVR enable='' trimLength='' connId='' ffTracks=''/>
						</Entity>
						<Entity type='DstPort' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<Port type='' resourceNID='' resourceTitle='' trickPlay=''/>
						</Entity>
						<Entity type='PlyFile' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<File type='' resourceNID='' resourceTitle='' dirId=''
								grpFileId='' startOffset='' playLength=''/>
						</Entity>
						<Entity type='RecFile' id='' name='' streamType='' presence='' gc='' state='' errorCode='' errorData=''>
							<File type='' resourceNID='' resourceTitle='' dirId=''
								grpFileId='' key="" action="" keyMetaDataKeyName="">
					            <MetaData>
					               <Tag Name=""></Tag>
					            </MetaData>
					        </File>
						</Entity>
					</EntityList>
					]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Get Session Response - EXTENDED Format[Currently Implemented] (Continued) </title>
	          <programlisting>
	            <![CDATA[
					<ConnectionList>
						<Connection id='' srcEntityId='' dstEntityId='' streamURL='' 
						            state='' timelineId='' errorCode='' errorData=''>
							<ConnSeg srcResourceTitle='' dstResourceTitle='' profileTitle='' 
							         state='' errorCode='' errorData='' srcResourceNID='' 
							         dstResourceNID='' profileNID=''/>
						</Connection>
					</ConnectionList>
				</Session>
		</GetSession>
	]]>
	          </programlisting>
	        </example>
	      </section>
        </section>
		<section>
      		<title>Session Requests</title>
      		<section>
       			<title>Parameter Listing</title>
        		<para>
          			This is the list of Parameters in Session Setup Requests
	    		</para>
	    		<orderedlist>
	    			<title/>
        			<para/>  
						<listitem>		 
							<para>Common Parameters</para>
							<itemizedlist>
								<listitem>
									<para>
										<parameter>sessionId </parameter>
										<optional>Required</optional>
									</para>
								</listitem>
								<listitem>
									<para>
										<parameter>sessionConfigId </parameter>
										<optional>Optional</optional>
									</para>
								</listitem>
							</itemizedlist>
						</listitem>		
						<listitem>
							<para> GrpFile Parameters [Either resourceNID or resourceTitle Required] </para>
							<itemizedlist>
								<listitem>
									<para>
										<parameter>type="SyncRec/SyncPly"</parameter>
										<optional>Required</optional>
									</para>
								</listitem>
								<listitem>
									<para>
										<parameter>id</parameter>
										<optional>Required</optional>
									</para>
								</listitem>
								<listitem>
									<para>
										<parameter>resourceNID</parameter>
										<optional>Required</optional>
									</para>
								</listitem>
								<listitem>
									<para>
										<parameter>resourceTitle</parameter>
										<optional>Required</optional>
									</para>
								</listitem>
							</itemizedlist>
						</listitem>		
						<listitem>
							<para> Entity Parameters</para>
							<itemizedlist>
								<listitem>
									<para>
										<parameter>type="SrcPort/DstPort/PlyFile/RecFile/PVRFile"</parameter>
										<optional>Required</optional>
									</para>
								</listitem>
								<listitem>
									<para>
										<parameter>id</parameter>
										<optional>Required</optional>
									</para>
								</listitem>	
								<listitem>
									<para> Port Parameters [Either resourceNID or resourceTitle Required]</para>
									<itemizedlist>
										<listitem>
											<para>
												<parameter>resourceNID</parameter>
												<optional>Required</optional>
											</para>
										</listitem>
										<listitem>
											<para>
												<parameter>resourceTitle</parameter>
												<optional>Required</optional>
											</para>
										</listitem>				
									</itemizedlist>
								</listitem>	
								<listitem>
									<para> PVR Parameters [TBD]</para>
								</listitem>	
								<listitem>
									<para> File Parameters [Either resourceNID or resourceTitle Required]</para>
									<itemizedlist>
										<listitem>
											<para>
												<parameter>resourceNID</parameter>
												<optional>Required</optional>
											</para>
										</listitem>
										<listitem>
											<para>
												<parameter>resourceTitle</parameter>
												<optional>Required</optional>
											</para>
										</listitem>	
										<listitem>
											<para>
												<parameter>grpFileId</parameter>
												<optional>Optional</optional>
											</para>
										</listitem>	
										<listitem>
											<para>
												<parameter>key="Title/MetaData"</parameter>
												<optional>Optional</optional>
											</para>
										</listitem>
										<listitem>
											<para>
												<parameter>action="Append/Overwrite"</parameter>
												<optional>Optional</optional>
											</para>
										</listitem>
										<listitem>
											<para>
												<parameter>keyMetaDataKeyName</parameter>
												<optional>Optional</optional>
											</para>
										</listitem>	
										<listitem>
											<para>
												<parameter>MetaData element</parameter>
												<optional>Optional</optional>
											</para>
										</listitem>									
									</itemizedlist>
								</listitem>			
							</itemizedlist>
						</listitem>	 
						<listitem>
							<para> Connection Parameters</para>
							<itemizedlist>
								<listitem>
									<para>
										<parameter>id</parameter>
										<optional>Required</optional>
									</para>
								</listitem>
								<listitem>
									<para>
										<parameter>srcEntityId</parameter>
										<optional>Required</optional>
									</para>
								</listitem>
								<listitem>
									<para>
										<parameter>dstEntityId</parameter>
										<optional>Required</optional>
									</para>
								</listitem>				
							</itemizedlist>
						</listitem>   
					 </orderedlist>
	    		</section>
			    <section>
			        <title>StartSession</title>
			        <itemizedlist>
			          <listitem>
			            <para>
			               Note on Groups:
			              <simplelist>
			                <member>The Groups tag is used to set the Group of the recordings created as a result of this session</member>
			              </simplelist>
			            </para>
			          </listitem>
			          <listitem>
			            <para>
			               Note on GrpFile:
			              <simplelist>
			                <member>GrpFile is referenced by Files in the SessionRequest to indicate their corresponding media group file information</member>
			                <member>GrpFile.resourceTitle with (type=SyncRec) is used to set the title of the GroupFile for the recordings created as a result of this session</member>
			              </simplelist>
			            </para>
			          </listitem>
			          <listitem>
			            <para>
			               Note on EntityList:
			              <simplelist>
			                <member>This is the list of sources,destinations in the session</member>
			                <member>Entity where type=SrcPort is a live source referened by its title or NID</member>
			                <member>Entity.PVR.enable where type=SrcPort indicates that this should have PVR</member>
			                <member>Entity where type=DstPort is a destination that can receive from a live or playback source refernced by its title or NID</member>
			                <member>Entity where type=RecFile is a recording file to be created with the specified title</member>
			                <member>Entity.File.grpFileId indicates that this recording will be group under the GrpFile element with the same id</member>
			                <member>Entity where type=PlyFile is a recording file to be played back referenced by the specified NID</member>
			              </simplelist>
			            </para>
			          </listitem>
			          <listitem>
			            <para>
			               Note on ConnectionList:
			              <simplelist>
			                <member>This is the list of connections in the session</member>
			                <member>Connection.srcEntityId references the source entity with the matching id</member>
			                <member>Connection.dstEntityId references the destination entity with the matching id</member>
			                <member>Connection.id will set the id for the connection between the source and destination</member>
			                <member>Connection.type will set the type of connection. Possible Connections are 'VIEW/PLAYBACK/RECORD/PVR'</member>
			              </simplelist>
			            </para>
			          </listitem>
			       </itemizedlist>        
			       <example>
			          <title>Basic Start Recording Session Request</title>
			          <table border="1">
			          <title>Basic Start Recording Session Request</title>
			  				<tr>
								<td>Request</td>
			    				<td>HTTP POST</td>
							</tr>
							<tr>
								<td>Accept(No spaces or newlines)</td>
				    			<td>"application/xml"</td>
							</tr>
							<tr>
								<td>Status</td>
				    			<td>200, 401, 500</td>
							</tr>
							<tr>
								<td>Query Parameters</td>
				    			<td>None</td>
							</tr>
							<tr>
								<td>Resource Path</td>
				    			<td>/Session</td>
							</tr>
							<tr>
								<td>Authorization</td>
				    			<td>Basic (Required)</td>
							</tr>
					 	 </table>
			          <programlisting>
			            <![CDATA[
	 <StartSession sessionId="recordSessionID">
	  <Session id="recordSessionConfigNID">
	 	 <Properties sessionConfigNID="" ownerUserJID="" 
	 	   dateCreated="" playlength=""/>
	     <Groups>
	         <Tag Name="Location" Value="Sunnyvale"/>
	     </Groups>
	     <MetaData>
	         <Tag Name=""/>
	     </MetaData>             
	     <GrpFileList>
	         <GrpFile type="SyncRec" id="gfId" resourceNID="" 
	          resourceTitle="GroupFileTitle">
	         <MetaData>
	            <Tag Name=""></Tag>
	         </MetaData>
	      </GrpFile>
	     </GrpFileList>
	     <DirList>
	        <Dir id="dirId" resourceNID= "" resourceTitle=""/>
	     </DirList>
	     Dir List is Optional element. 
	     <ProfileList>
	         <Profile id="profileid" 
		     profileNID="" name="" ffTracks=""/>
	     </ProfileList>
	      Profile List is optional element 
	       ]]>
		          </programlisting>
		        </example>
	        
		        <example>
		        	<title>Basic Start Recording Session Request (Continued)</title>	
		        	<programlisting>
		        	<![CDATA[
		     <EntityList>
		       <Entity type="SrcPort" id="src1">
		           <Port resourceNID="" resourceTitle="tx1" trickPlay=""/>
		           <PVR enable="true" trimLength="" startTC="" SessionId="" 
		           	recEntityId="" plyEntityId="" connID="" ffTracks=""/>
		       </Entity>
		       <Entity type="DstPort" id="dst1">
		           <Port resourceNID="" resourceTitle="playerpc" trickPlay="false"/>
		       </Entity>
		       <Entity type="RecFile" id="recordd1">
		           <File resourceNID="" resourceTitle="title1" grpFileId="gfId" 
		           key="" action="" keyMetaDataKeyName="">
		            <MetaData>
		               <Tag Name=""></Tag>
		            </MetaData>
			       </File>
		       </Entity>
		       <Entity type="SrcPort" id="src2">
		           <Port resourceNID="" resourceTitle="rtp_tx1" trickPlay=""/>
		           <PVR enable="true" trimLength="" startTC="" SessionId="" 
		           	recEntityId="" plyEntityId="" connID="" ffTracks=""/>
		       </Entity>
		       <Entity type="DstPort" id="dst2">
		           <Port resourceNID="" resourceTitle="playerpc" trickPlay="true"/>
		       </Entity>
		       <Entity type="RecFile" id="recordd2">
		           <File resourceNID="" resourceTitle="title2" grpFileId="gfId" 
		           dirId=" key="" action="" keyMetaDataKeyName="">
		            <MetaData>
		               <Tag Name=""></Tag>
		            </MetaData>
			       </File>
		       </Entity>
		     </EntityList>
		 ]]>
		          </programlisting>
		        </example>
	        
		        <example>
		        	<title>Basic Start Recording Session Request (Continued)</title>	
		        	<programlisting>
		        	<![CDATA[
		   	 <ConnectionList>
		   	     <Connection id="strmc1" srcEntityId="src1" dstEntityId="dst1" profileId="profileId"/>
		            <Connection id="recordc1" srcEntityId="src1" dstEntityId="recordd1" canvasId='' windowId='' profileId="profileId"/>
		            <Connection id="strmc2" srcEntityId="src2" dstEntityId="dst2" canvasId='' windowId='' profileId="profileId"/>
		      	     <Connection id="recordc2" srcEntityId="src2" dstEntityId="recordd2" canvasId='' windowId='' profileId="profileId"/>
		     </ConnectionList>
		    </Session>
		 </StartSession>
		     ]]>
		        	</programlisting>
		        </example>	
	        
		        <example>
		          <title>Advance Start Recording Session Request <optional>Not Implemented</optional></title>          
		          <programlisting>
		            <![CDATA[
		 <StartSession sessionId="recordSessionID" >
		    <Session id="recordSessionConfigNID" 
		      name="" state="" timelineId="">
		     <Properties sessionConfigNID="" ownerUserJID="" 
		                 dateCreated="" playlength=""/>
		     <Groups>
		         <Tag Name="Location" Value="Sunnyvale"/>
		     </Groups>
		     <MetaData>
		         <Tag Name=""/>
		     </MetaData>
		     <TimelineList>
		        <Timeline id="">
		            <Start WC="" Offset="" TC="" parentTimelineId=""/>
		            <Last WC="" Offset="" TC="" TimeScale="" requestedAction=""/>
		        </Timeline>
		     </TimelineList>
		     <GrpFileList>
		       <GrpFile type="SyncRec" id="gfId" resourceNID="" 
		                  resourceTitle="GroupFileTitle">
		         <MetaData>
		            <Tag Name=""></Tag>
		         </MetaData>
		      </GrpFile>
		     </GrpFileList>
		     <DirList/>
		     <ProfileList>	     
		     </ProfileList>   
		     <EntityList>
		       <Entity type="SrcPort" id="src1" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		           <User type="" userNID="" username="" userJID=""/>
		           <Port type="" resourceNID="" resourceTitle="tx1" trickPlay=""/>
		           <PVR enable="" trimLength="" startTC="" sessionId="" connId="" recEntityId="" plyEntityId="" ffTracks=""/>
		       </Entity>
		                    ]]>
		          </programlisting>
		        </example>
		        <example>
		          <title>Advance Start Recording Session Request <optional>Not Implemented</optional> (Continued)</title>          
		          <programlisting>
		            <![CDATA[
		                       
		        <Entity type="DstPort" id="dst1" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <User type="" userNID='' username='' userJID=""/>
		            <Port type="" resourceNID="" resourceTitle="playerpc" trickPlay='false'/>
		        </Entity>
		        <Entity type="RecFile" id="recordd1" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <User type="" userNID='' username='' userJID=""/>
		            <File type="" resourceNID="" resourceTitle="title1" dirId="" 
		            grpFileId="gfId"/>
		            <Port type="" resourceNID="" resourceTitle="" trickPlay=""/>
		        </Entity>
		        <Entity type="SrcPort" id="src2" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <User type="" userNID='' username='' userJID=""/>
		            <Port type="" resourceNID="" resourceTitle="rtp_tx1" trickPlay=""/>
		            <PVR enable="" trimLength="" startTC="" sessionId="" connId="" recEntityId="" plyEntityId="" ffTracks=""/>
		        </Entity>
		        <Entity type="DstPort" id="dst2" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <User type="" userNID='' username='' userJID=""/>
		            <Port type="" resourceNID="" resourceTitle="playerpc" trickPlay="true"/>
		        </Entity>
		        <Entity type="RecFile" id="recordd2" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <User type="" userNID='' username='' userJID=""/>
		            <File type="" resourceNID="" resourceTitle="title2" dirId="" 
		            grpFileId="gfId" key="" action="" keyMetaDataKeyName="">
			            <MetaData>
			               <Tag Name=""></Tag>
			            </MetaData>
			       </File>
		            <Port type="" resourceNID="" resourceTitle="" trickPlay=""/>
		        </Entity>
		    </EntityList>
		                    ]]>
		          </programlisting>
		        </example>
		        <example>
		          <title>Advance Start Recording Session Request <optional>Not Implemented</optional> (Continued)</title>          
		          <programlisting>
		            <![CDATA[
		    <ConnectionList>
		       <Connection type="STREAM" id="strmc1" gid="" name="" 
		       mode="AUTO/ONDEMAND" srcEntityId="src1" dstEntityId="dst1" 
		       profileId="unknown" authEntityId="" streamURL="" state="" 
		       timelineId="" canvasId='' windowId=''/>
		       <Connection type="STREAM" id="recordc1" gid="" name=""
		        mode="AUTO/ONDEMAND" srcEntityId="src1" dstEntityId="recordd1" 
		        profileId="unknown" authEntityId="" streamURL="" 
		        state="" timelineId="" canvasId='' windowId=''/>
		       <Connection type="STREAM" id="strmc2" gid="" name=""
		        mode="AUTO/ONDEMAND" srcEntityId="src2" dstEntityId="dst2" 
		        profileId="unknown" authEntityId="" streamURL="" 
		        state="" timelineId="" canvasId='' windowId=''/>
		       <Connection type="STREAM" id="recordc2" gid="" name="" 
		       mode="AUTO/ONDEMAND" srcEntityId="src2" dstEntityId="recordd2" 
		       profileId="unknown" authEntityId="" streamURL="" 
		       state="" timelineId="" canvasId='' windowId=''/>
		    </ConnectionList>
		   </Session>
		 </StartSession>
		  ]]>
		          </programlisting>
		        </example>
		        <example>
		          <title>Basic Start Playback Session Request</title>
		          <programlisting>
		            <![CDATA[
		 <StartSession sessionId="playbackSessionID" sessionConfigNID="none">
		   <Session id="sessionConfigNID" 
		        name="" state="" timelineId="">
		    <GrpFileList>
		        <GrpFile type="SyncPly" id="groupFileID" 
		        resourceNID="default.mediastreamfileresourcelist.
		        msfrl_081a2b85-b62a-425f-a11a-7a7b6c3bc681" 
		        />
		    </GrpFileList>
		    <EntityList>
		        <Entity type="DstPort" id="clientd1" name="" 
		            streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <Port type="" resourceNID="" resourceTitle="playerpc" trickPlay="true"/>
		        </Entity>
		        <Entity type="PlyFile" id="recordd1" name="" 
		             streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <File type="" 
		            resourceNID="default.mediastreamfileresourcelist.
		            msfrl_cf058887-bf44-4728-a8c6-eddfa831a03e" 
		            resourceTitle="" grpFileId=""/>
		        </Entity>
		        <Entity type="DstPort" id="clientd2" name="" 
		             streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <Port type="" resourceNID="" resourceTitle="playerpc" trickPlay="false"/>
		        </Entity>
		        <Entity type="PlyFile" id="recordd2" name="" 
		            streamType="" presence="" gc="" state="" errorCode="" errorData="">
		            <File type="" 
		            resourceNID="default.mediastreamfileresourcelist.
		            msfrl_c13887ae-73f4-4029-9d37-c4a366156d17" 
		            resourceTitle="" grpFileId="" />
		        </Entity>
		    </EntityList>
		    <ConnectionList>
		     <Connection id="strmc1" srcEntityId="recordd1" dstEntityId="clientd1" canvasId='' windowId=''/>
		     <Connection id="strmc2" srcEntityId="recordd2" dstEntityId="clientd2" canvasId='' windowId=''/>
		    </ConnectionList>
		   </Session>
		 </StartSession>
		
		  ]]>
		          </programlisting>
		        </example>
		        <example>
		          <title>Advance Start Playback Session Request <optional>Not Implemented</optional></title>          
		          <programlisting>
		            <![CDATA[
		  <StartSession sessionId="playbackSessionID" sessionConfigNID="none">
		   <Session id="sessionConfigNID" name=""
		    state="" timelineId="">
		    <Properties sessionConfigNID="" ownerUserJID="" 
		                dateCreated="" playlength=""/>
		    <Groups>
		        <Tag Name="" Value=""/>
		    </Groups>
		    <MetaData>
		        <Tag Name=""/>
		    </MetaData>
		    <TimelineList>
		        <Timeline id="">
		            <Start WC="" Offset="" TC="" parentTimelineId=""/>
		            <Last WC="" Offset="" TC="" TimeScale="" requestedAction=""/>
		        </Timeline>
		    </TimelineList>
		    <GrpFileList>
		        <GrpFile type="SyncPly" id="groupFileID" 
		        resourceNID="default.mediastreamfileresourcelist.
		        msfrl_081a2b85-b62a-425f-a11a-7a7b6c3bc681" 
		        resourceTitle="" dateCreated="" recsessionConfigNID="" 
		        recSessionId="recordSessionID" 
		        syncEntityId="" recSessionConfigNID="recordSessionConfigNID"/>
		    </GrpFileList>
		    <DirList/>
		    <ProfileList>
		        <Profile id="" name="" profileNID="" ffTracks=""/>
		    </ProfileList>  
		                     ]]>
		          </programlisting>
		        </example>
		        <example>
		          <title>Advance Start Playback Session Request <optional>Not Implemented</optional> (Continued)</title>          
		          <programlisting>
		            <![CDATA[
		   <EntityList>
		     <Entity type="DstPort" id="clientd1" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		         <User type="" userNID='' username='' userJID=""/>
		         <Port type="" resourceNID="" resourceTitle="playerpc" trickPlay="true"/>
		     </Entity>
		     <Entity type="PlyFile" id="recordd1" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		         <User type="" userNID='' username='' userJID=""/>
		         <File type="" 
		         resourceNID="default.mediastreamfileresourcelist.
		         msfrl_cf058887-bf44-4728-a8c6-eddfa831a03e" 
		         resourceTitle="" dirId="" grpFileId="" startOffset="" playLength=""/>
		         <Port type="" resourceNID="" resourceTitle="" trickPlay=""/>
		     </Entity>
		     <Entity type="DstPort" id="clientd2" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		         <User type="" userNID='' username='' userJID=""/>
		         <Port type="" resourceNID="" resourceTitle="playerpc" trickPlay="true"/>
		     </Entity>
		     <Entity type="PlyFile" id="recordd2" name="" streamType="" presence="" gc="" state="" errorCode="" errorData="">
		         <User type="" userNID='' username=''userJID=""/>
		         <File type="" 
		         resourceNID="default.mediastreamfileresourcelist.
		         msfrl_c13887ae-73f4-4029-9d37-c4a366156d17" 
		         resourceTitle="" dirId="" grpFileId="" startOffset="" 
		         playLength=""/>
		         <Port type="" resourceNID="" resourceTitle="" trickPlay=""/>
		     </Entity>
		   </EntityList>
		                    ]]>
		          </programlisting>
		        </example>
		        <example>
		          <title>Advance Start Playback Session Request <optional>Not Implemented</optional> (Continued)</title>          
		          <programlisting>
		            <![CDATA[
		  	<ConnectionList>
		         <Connection type="STREAM" id="strmc1" gid="" name="" 
		         mode="AUTO/ONDEMAND" srcEntityId="recordd1" dstEntityId="clientd1"
		         profileId="unknown" authEntityId="" streamURL="" state="" timelineId=""
		          canvasId='' windowId=''/>
		         <Connection type="STREAM" id="strmc2" gid="" name="" 
		         mode="AUTO/ONDEMAND" srcEntityId="recordd2" dstEntityId="clientd2" 
		         profileId="unknown" authEntityId="" streamURL="" state="" timelineId=""
		         canvasId='' windowId=''/>
		     </ConnectionList>
		    </Session>
		   </StartSession>
		  ]]>
		          </programlisting>
		        </example>
	      	</section>
        
        	<section>
        		<title>StopSession</title>
        		<para>
          			Used to terminate Sessions.
        		</para>
        		<example>
          			<title>StopSession Request</title>
          			<table border="1">
          			<title>StopSession Request</title>
		  				<tr>
							<td>Request</td>
		    				<td>HTTP POST</td>
						</tr>
						<tr>
							<td>Accept(No spaces or newlines)</td>
			    			<td>"application/xml"</td>
						</tr>
						<tr>
							<td>Status</td>
			    			<td>200, 401, 500</td>
						</tr>
						<tr>
							<td>Query Parameters</td>
			    			<td>None</td>
						</tr>
						<tr>
							<td>Resource Path</td>
			    			<td>/Session</td>
						</tr>
						<tr>
							<td>Authorization</td>
			    			<td>Basic (Required)</td>
						</tr>
			 	 	</table>
	          		<programlisting>
            			<![CDATA[
	    <StopSession sessionId=""/>
	  ]]>
	          		</programlisting>
	        	</example>
      		</section>
      	</section>      
		<section>
			<title>Session Connection Operations</title>
			<para>
				API calls for Session Connection Operations
			</para>
			 <section>
	        <title>View</title>
	        <para>
	          Used to setup connections between Live sources and Playback destinations.
	          <simplelist>
	            <member>
	              Use the SrcPort and DstPort to specify the resources to connect.
	              Use either the name or id field returned in the GetPortList command.
	              Use the srcEntityId or dstEntityId attribute specs in order to specify a connection to an existing src/dst.
	              Use the canvasId and windowId to specify the canvas/window to be used for the connection.
	            </member>
	            <member>
	              Specify an optional Profile to further constrain the max available profile based on the admin settings.
	              Again use the attribute form to reuse an existing profile.
	            </member>
	            <member>
	              Specify a PVR buffer length (in minutes) to request a buffered relay in the path of the connection.
	              Use custom routing to override the default location of relays and PVR buffers.
	            </member>
	          </simplelist>
	        </para>
	        <example>
	          <title>Basic View Request</title>
	          <para>A new session is always started. Returns an error if sessionId already exists. If no sessionId is specified a sessionId is generated by the system</para>
	          <table border="1">
	          <title>Basic View Request by Title</title>
	  				<tr>
						<td>Request</td>
	    				<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
			 	 </table>
	          	 <programlisting>
	             	<![CDATA[
	            
	   <View sessionId="session1" sessionName="" id="strmc1" name="" 
	   srcEntityId="" dstEntityId="" canvasId="" windowId="" restartSession="true">
	       <SrcPort id="" portNID="" portTitle="tx1" pvrEnable="false"/>
	       <DstPort id="" portNID="" portTitle="srcpc1"/>
	   </View>
	
	  ]]>
	           </programlisting>
	        </example>
	        <example>
					<title>Basic View Request by Title</title>
					<para>A new session is always started. If no sessionId is specified a sessionId
						is generated by the system
					</para>
					<programlisting>
	            <![CDATA[
	            For E.g. to connect a SrcPort "tx1" to a DstPort "xp2001_CHANNEL2" 
	            <View >
	       		<SrcPort portTitle="tx1"/>
	       		<DstPort portTitle="xp2001_Channel2"/>
	  			 </View>
	 		 ]]>
	          </programlisting>
				</example>
	        <example>
	          <title>Basic View Request by NID</title>
	          <para>A new session is always started. Returns an error if sessionId already exists. If no sessionId is specified a sessionId is generated by the system</para>
	          <programlisting>
	            <![CDATA[
		<View sessionId="session1" sessionName="" id="strmc1" name="" 
		srcEntityId="" dstEntityId="" canvasId="" windowId="" restartSession="true">
		    <SrcPort id="" portNID="default.mediastreamsrcportresourcelist.
		    mssprl_e973aef8-93f1-4388-a378-a77ddc364b2c" portTitle="" pvrEnable="false"/>
		    <DstPort id="" portNID="default.mediastreamdstportresourcelist.
		    msdprl_1d9c4ced-5168-4d4d-bf7e-8b0011f676da" portTitle=""/>
		</View>
	  ]]>
	          </programlisting>
	        </example>
          
	        <example>
	          <title>View Request with Profile Title </title>
	          <programlisting>
	            <![CDATA[
	    <View sessionId='mySession1234' id='myConn1234' name='' sessionName=''>
	      <SrcPort id="" portNID="" pvrEnable='true' pvrBufferLength='30'/>
	      <DstPort id="" portNID=""/>
	      <Profile id="" profileTitle="V2D_LAN"/>
	    </View>
	  ]]>
	          </programlisting>
	        </example>       
        
           
	        <example>
	          <title>View Request with Profile NID </title>
	          <programlisting>
	            <![CDATA[
	    <View sessionId='mySession1234' id='myConn1234' name='' sessionName=''>
	      <SrcPort id="" portNID="" pvrEnable='true' pvrBufferLength='30'/>
	      <DstPort id="" portNID=""/>
	      <Profile id="" profileNID="nid1"/>
	    </View>
	  ]]>
	          </programlisting>
	        </example>
        
	        <example>
	          <title>View Request with PVR </title>
	          <para> [ Not Implemented ]</para>
	          <programlisting>
	            <![CDATA[
	    <View sessionId='mySession1234' id='myConn1234' name='' sessionName=''>
	      <SrcPort id="" portNID="" pvrEnable='true' pvrBufferLength='30'/>
	      <DstPort id="" portNID=""/>
	      <Profile id="" profileNID=""/>
	    </View>
	  ]]>
	          </programlisting>
	        </example>
      
	        <example>
	          <title>View Request to add a connection from an existing Src to a new Dst</title>
	          <programlisting>
	            <![CDATA[
	  <View sessionId="recordSessionID" sessionName="" id="vstrm1" name="" 
	     srcEntityId="src1" dstEntityId="" canvasId="" windowId="" 
	     restartSession="">
	      <SrcPort id="" portNID="" portTitle="" pvrEnable=""/>
	      <DstPort id="vdst1" portNID="" portTitle="srcpc1"/>
	  </View>
	  ]]>
	          </programlisting>
	        </example>
	         <example>
	          <title>View Request to add a connection from an existing Src to a new Dst with profileid</title>
	          <programlisting>
	            <![CDATA[
	  <View sessionId="recordSessionID" sessionName="" id="vstrm1" name="" 
	     srcEntityId="src1" dstEntityId="" canvasId="" windowId="" 
	     restartSession="" profileid="profileId1">
	      <SrcPort id="" portNID="" portTitle="" pvrEnable=""/>
	      <DstPort id="vdst1" portNID="" portTitle="srcpc1"/>
	  </View>
	  ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>View Request to add a connection from an existing Src to existing Dst</title>
	          <programlisting>
	            <![CDATA[
	 <View sessionId="recordSessionID" sessionName="" id="vstrm2" name="" 
	   srcEntityId="src1" dstEntityId="vdst1" canvasId="" windowId=""
	   restartSession="false">
	  <SrcPort id="" portNID="" portTitle="" pvrEnable=""/>
	  <DstPort id="" portNID="" portTitle=""/>
	 </View>
	  ]]>
	          </programlisting>
	        </example>        
        
	        <example>
	          <title>View Request Response</title>
	          <para>The response to the view request will consist of the updated Session element</para>
	          <itemizedlist>
			  <listitem>
					<para>
						<parameter> sessionId : id of session (Default UUID)</parameter>	
						<optional>Optional</optional>												
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>id : id of connection (Default UUID)  </parameter>
						<optional>Optional</optional>														
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>name : name of the Connection (Default conn_UUID)</parameter>
						<optional>Optional</optional>														
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>sessionName : name of the session. Default is username and session start Time(srcuser1 Jun 25 00:15)</parameter>
						<optional>Optional</optional>														
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>dstEntityId : Destination entity id in session </parameter>
						<optional>Either entity id or portTitle Required</optional>														
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>srcEntityId : source entity id in session</parameter>
						<optional>Either entity id or portTitle Required</optional>														
					</para>
				</listitem>			
				<listitem>
					<para>
						<parameter>portTitle : Source/Destination resource Title (Matches to Entity name in the session doc) </parameter>
						<optional>Either entity id or portTitle Required</optional>														
					</para>
				</listitem>	
				<listitem>
					<para>
						<parameter>profileTitle : profile title to be used in session</parameter>
						<optional>Optional</optional>														
					</para>
				</listitem>	
				<listitem>
					<para>
						<parameter>profileNID : profile nid to be used in session</parameter>
						<optional>Optional</optional>														
					</para>
				</listitem>	
				<listitem>
					<para>
						<parameter>profileId : profile Id in session</parameter>
						<optional>Optional</optional>														
					</para>
				</listitem>		
			 </itemizedlist>
			 
	          <programlisting>
	            <![CDATA[
 <Session gc="true" id="Session_29BAD04A-DB32-466B-95EF-40D6729D6DFD" 
   name="srcuser1 Jun 25 00:15" 
   recordTimelineId="505f1b62-9a8e-4008-8c22-2d683ed40dfa.RecordTrack" 
   state="Started" 
   timelineId="505f1b62-9a8e-4008-8c22-2d683ed40dfa.StreamTrack" 
   type="LIVE">
   <Properties dateCreated="1277424909504" 
   ownerUserJID="srcuser1@localhost/pc1" playlength="" sessionConfigNID=""/>
   <TimelineList>
        <Timeline connGroupId="" connId="" 
	id="505f1b62-9a8e-4008-8c22-2d683ed40dfa.StreamTrack" 
	sessionId="Session_29BAD04A-DB32-466B-95EF-40D6729D6DFD">
      <Start Offset="0" WC="1277424909504" TC="" parentTimelineId=""/>
      <Last Offset="0" TimeScale="1" WC="1277424909504" TC="" requestedAction=""/>
      </Timeline>
      <Timeline connGroupId="" connId="" 
       id="505f1b62-9a8e-4008-8c22-2d683ed40dfa.RecordTrack" 
          sessionId="Session_29BAD04A-DB32-466B-95EF-40D6729D6DFD">
     <Start Offset="0" WC="1277424909504" TC="" parentTimelineId=""/>
     <Last Offset="0" TimeScale="1" WC="1277424909504" TC="" requestedAction=""/>
   </Timeline>
   </TimelineList>
   <GrpFileList/>
   <DirList/>
   <ProfileList>
     <Profile id="3980fb57-5fd7-4398-be26-2ca9056b0d63" 
     profileNID="default.mediastreamprofilelist.mspl_e1cb45a9-f433-40b2-8156-258c0d3f26ed" 
     name="V2D_LAN" ffTracks=""/>
   </ProfileList> 
	         ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>View Request Response (Continued)</title>          
	          <programlisting>
	            <![CDATA[
   <EntityList>
     <Entity gc="true" id="c5d9ac1f-fb26-4f35-9626-a82e00aad228" 
      name="tx1" presence="available" streamType="V2D" type="SrcPort" state="" errorCode="" errorData="">
       <Port resourceTitle="tx1"
        resourceNID="default.mediastreamsrcportresourcelist.
        mssprl_9df8a5a4-bad1-488a-a3da-d0edbfeae3f2" trickPlay=""/>
     </Entity>
     <Entity gc="true" id="72a3d1d7-6aa3-481c-ae32-02e7a0a9929a" 
       name="pc1" presence="available" streamType="MULTI" type="DstPort" state="" errorCode="" errorData="">
        <Port resourceTitle="pc1"
         resourceNID="default.mediastreamdstportresourcelist.
         msdprl_ea1024f3-b1a4-4b06-8395-ec6961b61637" trickPlay="true"/>
     </Entity>
   </EntityList>         
   <ConnectionList>
        <Connection dstEntityId="72a3d1d7-6aa3-481c-ae32-02e7a0a9929a" 
               id="Conn_4A12955D-E857-4540-BC45-B951AE9F4A68" name="tx1" 
               srcEntityId="c5d9ac1f-fb26-4f35-9626-a82e00aad228" state="STREAMING" 
               streamURL="v2d://10.1.5.169/port=6060?bandwidth=10240000?
               avoption=Video?ismulticast=false?enablekbm=false" 
               type="VIEW">
            <ConnSeg dstResourceNID="default.mediastreamrelayportresourcelist.
                msrprl_e3349f7e-5552-400e-8264-be7b3884b228" 
               dstResourceTitle="srcrelay1" 
               profileNID="profileNID" 
               profileTitle="V2D_LAN" 
               srcResourceNID="default.mediastreamsrcportresourcelist.
               mssprl_9df8a5a4-bad1-488a-a3da-d0edbfeae3f2" 
               srcResourceTitle="tx1" state="STREAMING" errorCode="" errorData="" />
             <ConnSeg 
             dstResourceNID="" 
                dstResourceTitle="padmajapc" 
                profileNID="default.mediastreamprofilelist.
                mspl_b337c45e-5bea-4574-9909-9a623b9cc22d" 
                profileTitle="V2D_LAN" 
                srcResourceNID="" srcResourceTitle="srcrelay1" 
                state="STREAMING" errorCode="" errorData="" />
         </Connection>
     <Groups>
       <Tag Name="Location" Value="Sunnyvale"/>
     </Groups>
 </Session>
	       ]]>
	          </programlisting>
	        </example>          
	        <example>
	          <title>View Request Response  <optional>Not Implemented</optional> </title>        
	          <programlisting>
	            <![CDATA[
 <Session id="session_config_7A6C6DC1-A43B-4D0C-A5BC-F52FE1E2C39E"
	name="session_config" 
	recordTimelineId="4d758c18-8602-46fb-aa0a-d7b96dda88b2.RecordTrack"
	state="Started"
	timelineId="4d758c18-8602-46fb-aa0a-d7b96dda88b2.StreamTrack" type="LIVE">
	<Properties dateCreated="1277427023666" ownerUserJID="srcuser1@localhost/pc1"
		playlength=""
		sessionConfigNID="default.sessionconfiglist.
		scl_8f5fcbea-fed9-4399-8b52-cf1e4d158500" />
	<TimelineList>
		<Timeline connGroupId="" connId=""
			id="4d758c18-8602-46fb-aa0a-d7b96dda88b2.StreamTrack" 
			sessionId="session_config_7A6C6DC1-A43B-4D0C-A5BC-F52FE1E2C39E">
			<Start Offset="0" WC="1277427023666" TC="" parentTimelineId="" />
			<Last Offset="0" TimeScale="1" TC="" WC="1277427023666"
				requestedAction="" />
		</Timeline>
		<Timeline connGroupId="" connId=""
			id="4d758c18-8602-46fb-aa0a-d7b96dda88b2.RecordTrack" 
			sessionId="session_config_7A6C6DC1-A43B-4D0C-A5BC-F52FE1E2C39E">
			<Start Offset="0" WC="1277427023666" TC="" parentTimelineId="" />
			<Last Offset="0" TimeScale="1" TC="" WC="1277427023666"
				requestedAction="" />
        </Timeline>
	</TimelineList>
	<GrpFileList />
	<DirList />
	<ProfileList />
    ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>View Request Response <optional>Not Implemented</optional> (Continued)</title>          
	          <programlisting>
	            <![CDATA[
  <EntityList>
	<Entity id="SrcPort_CE1AE1E4-A3F6-4659-9837-F952577801CB" name="tx1"
		presence="available" streamType="V2D" type="SrcPort" gc="" state="" errorCode="" errorData="">
	  <User resourceNID="" resourceTitle="" userJID="" /> (Not implemented)
	  <Port netIp="" netPort=""
      resourceNID="default.mediastreamsrcportresourcelist.
      mssprl_9df8a5a4-bad1-488a-a3da-d0edbfeae3f2"
		resourceTitle="tx1" trickPlay=""/> 
	  <PVR enable="" plyEntityId="" connId="" startTC="" sessionId="" recEntityId=""
		trimLength="" ffTracks="" />(Not implemented)
	</Entity>
	<Entity id="DstPort_A4890CD8-D221-439D-841F-2CF352F1A4CC" name="pc1"
		presence="available" streamType="MULTI" type="DstPort" gc="" state="" errorCode="" errorData="">
	  <User resourceNID="" resourceTitle="" userJID="" />(Not implemented)
	  <Port netIp="" netPort=""
		resourceNID="default.mediastreamdstportresourcelist.
		msdprl_ea1024f3-b1a4-4b06-8395-ec6961b61637"
		resourceTitle="pc1" trickPlay="true"/>
	</Entity>
  </EntityList>
	           ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>View Request Response <optional>Not Implemented</optional> (Continued)</title>          
	          <programlisting>
	            <![CDATA[
  <ConnectionList>
	  <Connection authEntityId=""
		dstEntityId="DstPort_A4890CD8-D221-439D-841F-2CF352F1A4CC" 
		gid="ConnGrp_086607B9-5BBA-45A1-BE8A-7F9F727D4665"
		id="Conn_6D39B2DF-D5A8-47FB-B4EB-197B7725B01F" mode="" name="tx1"
		profileId="" srcEntityId="SrcPort_CE1AE1E4-A3F6-4659-9837-F952577801CB"
		state="WAITING_FOR_SOURCE-DEST_CONTACTED" streamType="V2D" streamURL=""
		timelineId="" type="VIEW" canvasId='' windowId=''>
		(Not Implemented   gid=""  mode=""  profileId=""   
		streamType="V2D" timelineId="")
		<ConnSeg
			dstResourceNID="default.mediastreamdstportresourcelist.
			msdprl_ea1024f3-b1a4-4b06-8395-ec6961b61637"
			dstResourceTitle="pc1"
			profileNID="default.mediastreamprofilelist.
			mspl_b337c45e-5bea-4574-9909-9a623b9cc22d"
			profileTitle="V2D_LAN"
			srcResourceNID="default.mediastreamrelayportresourcelist.
			msrprl_e3349f7e-5552-400e-8264-be7b3884b228"
			srcResourceTitle="srcrelay1" state="WAITING_FOR_SOURCE-DEST_CONTACTED" 
			errorCode="" errorData="" />
	  </Connection>
	
   </ConnectionList>
   <Groups>
	 <Tag Name="Location" Value="Sunnyvale" />
   </Groups>
 </Session>
	       ]]>
	          </programlisting>
	        </example>         
	      </section>
		     <section>
		        <title>Playback</title>
		        <para>
		          Used to setup connections between Recorded media and Playback destinations.
		          <simplelist>
		            <member>
		              Use the SrcFile/GrpFile and DstPort to specify the resources to connect.
		              Identify the file by specifying the resourceNID or the dir, filename and recording date
		              Optional sessionId can be specified
		              Use the srcEntityId or dstEntityId attribute specs in order to specify a connection to an existing src/dst.
		              Use the canvasId and windowId to specify the canvas/window to be used for the connection.
		            </member>
		            <member>
		              Specify an optional Media Store Port to override the default based on the admin settings.
		            </member>
		            <member>
		              Specify a SyncMediaId shared among media that should be played back "in Sync".
		            </member>
		          </simplelist>
		        </para>
		        <para> Support for Playback by Title/fileDate NOT implemented.</para>
		        <example>
		          <title>Basic Playback Request by Title</title>
		          <para> [ Not Implemented ]</para>
		          <table border="1">
		           <title>Basic Playback Request by Title</title>
		  				<tr>
							<td>Request</td>
		    				<td>HTTP POST</td>
						</tr>
						<tr>
							<td>Accept(No spaces or newlines)</td>
			    			<td>"application/xml"</td>
						</tr>
						<tr>
							<td>Status</td>
			    			<td>200, 401, 500</td>
						</tr>
						<tr>
							<td>Query Parameters</td>
			    			<td>None</td>
						</tr>
						<tr>
							<td>Resource Path</td>
			    			<td>/Session</td>
						</tr>
						<tr>
							<td>Authorization</td>
			    			<td>Basic (Required)</td>
						</tr>
				  	</table>
		          <programlisting>
		            <![CDATA[
		    <Playback>
		      <SrcFile id="" fileTitle="" fileDate=""/>
		      <DstPort id="" portTitle=""/>
		    </Playback>
		  ]]>
		          </programlisting>
		        </example>
		        <example>
	          		<title>Basic Playback Request by NID</title>
	        		<para>A new session is always started. Returns an error if sessionId already exists. 
	        		If no sessionId is specified a sessionId is generated by the system</para>
	          		<programlisting>
	           			 <![CDATA[
    <Playback sessionId="playbackAPISessionID" id="strmc1" srcEntityId="" 
    dstEntityId="" restartSession="" canvasId='' windowId=''>
        <GrpFile id="grpId1" fileNID="" fileTitle=""/>
        <SrcFile id="" fileNID="nid1" fileTitle="" 
        grpFileId="grpId1"/>
        <DstPort id="" portNID="" portTitle="srcpc1"/>
    </Playback>
  ]]>
          			</programlisting>
        		</example>
        		<example>
          			<title>Basic Playback Request with file name/date spec</title>
        			<para> [ Not Implemented ]</para>
          			<programlisting>
            			<![CDATA[
    <Playback sessionId="" connGroupId="" id="" canvasId='' windowId=''>
      <SrcFile id="" fileTitle="" fileDate=""/>
      <DstPort id="" portNID=""/>
    </Playback>
  ]]>
          			</programlisting>
        		</example>
        		<example>
          			<title>Advanced Playback Request including grpFileId and StorePort spec</title>
        			<para> [ Not Implemented ]</para>
          			<programlisting>
            			<![CDATA[
    <Playback sessionId="" connGroupId="" id="" canvasId='' windowId=''>
      <SrcFile id="" fileNID="" fileTitle="" fileDate="" grpFileId="">
        <StorePort id="" portNID=""/>
      </SrcFile>   
      <DstPort id="" portNID=""/>
    </Playback>
  ]]>
          			</programlisting>
          		</example>
				<example>
          			<title>Basic Playback Request by group file NID</title>
        			<para>A new session is always started with connections for all the clip files under the groupfile specified by the NID. Any existing session with the given sessionId is terminated. If no sessionId is specified a sessionId is generated by the system</para>
          			<programlisting>
            			<![CDATA[
    <Playback sessionId="playbackAPISessionID" id="strmc1" 
        srcEntityId="" dstEntityId="" restartSession="" canvasId='' windowId=''>
        <GrpFile id="grpId1" 
         fileNID="default.mediastreamfileresourcelist.msfrl_3ed1f399-5026-43e8-9a84-9e6cd35cdef1" 
         fileTitle=""/>
        <SrcFile id="" fileNID="" fileTitle="" grpFileId="grpId1"/>
        <DstPort id="" portNID="" portTitle="srcpc1"/>
    </Playback>
]]>
          			</programlisting>
        		</example>
        		<example>
          			<title>Basic Playback Request by srcEntityId</title>
        			<para>Start a playback connection to an existing playback source in an existing session</para>
          			<programlisting>
            			<![CDATA[
    <Playback sessionId="playbackSessionID" id="vstrm1" 
         srcEntityId="recordd1" dstEntityId="" restartSession="" canvasId='' windowId=''>
         <GrpFile id="grpId1" fileNID="" fileTitle=""/>
         <SrcFile id="" fileNID="" fileTitle="" grpFileId="grpId1"/>
         <DstPort id="vdst1" portNID="" portTitle="srcpc1"/>
    </Playback>           

  ]]>
          			</programlisting>
        		</example>
        		<example>
          			<title>Basic Playback Request by srcEntityId and dstEntityId</title>
        			<para>Start a playback connection to an existing playback source in an existing session</para>
          			<programlisting>
            			<![CDATA[        
     <Playback sessionId="playbackSessionID" id="vstrm2" 
          srcEntityId="recordd1" dstEntityId="vdst1" restartSession="" canvasId='' windowId=''>
          <GrpFile id="grpId1" fileNID="" fileTitle=""/>
          <SrcFile id="" fileNID="" fileTitle="" grpFileId="grpId1"/>
          <DstPort id="" portNID="" portTitle=""/>
      </Playback>
  ]]>
          			</programlisting>
        		</example>      
        		<example>
          			<title>Playback Request Response</title>
          			<para>The response is similiar to the view request response will consist of the updated Session element</para>
        		</example>
      		</section>
      	     <section>
          		<title>Play</title>
          		<para>
            		This is the equivalent of issuing "Resume" with new speed.             
          		</para>
           				  <glosslist>
				   <glossentry>
              <glossterm>timeScale</glossterm>
              <glossdef>
                <para>
                  Playback Speed. Supported Speed 1, 2, 5, 10, 60
                </para>
              </glossdef>
            </glossentry>
            <glossentry>
              <glossterm>nowOffset</glossterm>
              <glossdef>
                <para>
                  An Offset relative to NOW.
                </para>
              </glossdef>
            </glossentry>
            <glossentry>
              <glossterm>startOffset</glossterm>
              <glossdef>
                <para>
                  An Offset relative to the START Time of the current Scope.
                </para>
              </glossdef>
            </glossentry>
            <glossentry>
              <glossterm>liveOffset</glossterm>
              <glossdef>
                <para>
                  An Offset relative to the LIVE Time of the current Scope.
                </para>
              </glossdef>
            </glossentry>
            <glossentry>
              <glossterm>mediaTime</glossterm>
              <glossdef>
                <para>
                  A Time reference to the TC attached to the media in the Media File
                </para>
              </glossdef>
            </glossentry>
            <glossentry>
              <glossterm>mediaOffset</glossterm>
              <glossdef>
                <para>
                  An Offset relative to the start of the Media File. This provides
                  a sequential index into a Media File irrespective of the TCs of the media in it.
                </para>
              </glossdef>
            </glossentry>
            <glossentry>
              <glossterm>mediaId</glossterm>
              <glossdef>
                <para>
                  The ID of the media associated with the mediaOffset/mediaTime. 
                  The session/connGrp/conn offset is found using the mediaId + mediaOffset/mediaTime
                  This is used to resolve ambiguity when there is more than one media in the scope
                </para>
              </glossdef>
            </glossentry>
            <glossentry>
              <glossterm>mediaConnId</glossterm>
              <glossdef>
                <para>
                  The connId associated with the mediaOffset/mediaTime. 
                  The session/connGrp/conn offset is found using the connId + mediaOffset/mediaTime
                  This is used to resolve ambiguity when the same media is in more than one connection in the scope
                </para>
              </glossdef>
            </glossentry> 
               <glossentry>
              <glossterm>bookmarkId</glossterm>
              <glossdef>
                <para>
                 The ID of the bookmark associated with the mediaOffset/mediaTime. 
                  The session/connGrp/conn offset is found using the bookmarkId + mediaOffset/mediaTime
                  This is used to resolve ambiguity when there is more than one media in the scope
                </para>
              </glossdef>
            </glossentry>           
          </glosslist>
		        <example>
		            <title>Play Request</title>
		            <table border="1">
		             <title>Play Request</title>
		  				<tr>
							<td>Request</td>
		    				<td>HTTP POST</td>
						</tr>
						<tr>
							<td>Accept(No spaces or newlines)</td>
			    			<td>"application/xml"</td>
						</tr>
						<tr>
							<td>Status</td>
			    			<td>200, 401, 500</td>
						</tr>
						<tr>
							<td>Query Parameters</td>
			    			<td>None</td>
						</tr>
						<tr>
							<td>Resource Path</td>
			    			<td>/Session</td>
						</tr>
						<tr>
							<td>Authorization</td>
			    			<td>Basic (Required)</td>
						</tr>
				  	</table>
		            <programlisting>
		              <![CDATA[
		  <Play sessionId="" timeScale=''/>             
		]]>
		            </programlisting>
		        </example>
          		<example>
            		<title>Play Response</title>
            		<programlisting>
              			<![CDATA[
	<Timeline sessionId="xyz123" connGroupId="" connId="" id="">
		<Start WC="1252016072510" TC="" Offset="0" parentTimelineId=""/>
		<Last WC="1252016160137" TC="" Offset="87627" TimeScale="1" 
		requestedAction="ResumeFrom"/>
	</Timeline>
]]>
            		</programlisting>
          		</example>
          		   <example>
            <title>Play Request w/ nowOffset </title>
            <programlisting>
              <![CDATA[
  <Play sessionId="" nowOffset=""/>
]]>
            </programlisting>
          </example>
          <example>
            <title>Play Request w/ startOffset</title>
            <programlisting>
              <![CDATA[
  <Play sessionId="" startOffset=""/>
]]>
            </programlisting>
          </example>
          <example>
            <title>Play Request w/ liveOffset </title>
            <programlisting>
              <![CDATA[
  <Play sessionId="" liveOffset=""/>
]]>
            </programlisting>
          </example>
          <example>
            <title>Play Request w/ mediaOffset</title>
            <programlisting>
              <![CDATA[
  <Play sessionId="" mediaOffset="" mediaId="" mediaConnId=""/>
]]>
            </programlisting>
          </example>
          <example>
            <title>Play Request  w/ mediaTime</title>
            <programlisting>
              <![CDATA[
  <Play sessionId="" mediaTime="" mediaId="" mediaConnId=""/>
]]>
            </programlisting>
          </example>
          <example>
            <title>Play Request  w/ Bookmark</title>
            <programlisting>
              <![CDATA[
  <Play sessionId="" bookmarkId="" mediaConnId=""/>
]]>
            </programlisting>
          </example>
        	</section>
             <section>
        		<title>Record</title>        
        		<para>
          			Used to setup connections for Recording media.
	          		<simplelist>
		            	<member>
		              		Use the SrcPort and DstFile elements to specify the resources to connect.
		              		Identify the file by specifying the resourceNID or the dir, filename and recording date
		            	</member>
		            	<member>
		              		Specify an optional Media Store Port to override the default based on the admin settings.
		            	</member>
		            	<member>
		              		Specify a SyncMediaId shared among media that should be recorded "in Sync".
		            	</member>            
			        </simplelist>
			        <itemizedlist>
			        	<listitem>
							<para>
								<parameter> sessionId : id of session (Default UUID)</parameter>	
								<optional>Optional</optional>												
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>id : id of connection (Default UUID)  </parameter>
								<optional>Optional</optional>														
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>name : name of the Connection (Default conn_UUID)</parameter>
								<optional>Optional</optional>														
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>sessionName : name of the session. Default is username and session start Time(srcuser1 Jun 25 00:15)</parameter>
								<optional>Optional</optional>														
							</para>
						</listitem>					
						<listitem>
							<para>
								<parameter>srcEntityId : source entity id in session</parameter>
								<optional>Either entity id or portTitle Required</optional>														
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>portTitle : Source resource Title (Matches to Entity name in the session doc) </parameter>
								<optional>Either entity id or portTitle Required</optional>														
							</para>
						</listitem>			
						<listitem>
							<para>
								<parameter>DstFile id : id of rec entity</parameter>
								<optional>Either entity id or portTitle Required</optional>														
							</para>
						</listitem>	
						<listitem>
							<para>
								<parameter>DstFile fileTitle :recording file title</parameter>
								<optional>Required if key=Title or new recording otherwise optional  [Does not allow XML restricted special characters]</optional>														
							</para>
						</listitem>	
						<listitem>
							<para>
								<parameter>DstFile Key :will be used to find out file existed or not. Values could be Title/MetaData</parameter>
								<optional>optional</optional>														
							</para>
						</listitem>	
						<listitem>
							<para>
								<parameter>DstFile action : what actions we can perform on Append/Overwrite(Default is Error on Exist if don't specify any thing) (Overwriten[not implemented])</parameter>
								<optional>optional</optional>														
							</para>
						</listitem>	
						<listitem>
							<para>
								<parameter>DstFile keyMetaDataTagName : used along with key attribute. If key=Metadata then have to specify keyMetaDataTagName</parameter>
								<optional>Required if key=MetaData otherwise optional</optional>														
							</para>
						</listitem>	
						<listitem>
							<para>
								<parameter>DstFile MetaData element</parameter>
								<optional>optional</optional>														
							</para>
						</listitem>		
			 		</itemizedlist>
        		</para>
        		<example>
          			<title>Basic Record Request</title>
          			<table border="1">
          			<title>Basic Record Request</title>
		  				<tr>
							<td>Request</td>
		    				<td>HTTP POST</td>
						</tr>
						<tr>
							<td>Accept(No spaces or newlines)</td>
			    			<td>"application/xml"</td>
						</tr>
						<tr>
							<td>Status</td>
			    			<td>200, 401, 500</td>
						</tr>
						<tr>
							<td>Query Parameters</td>
			    			<td>None</td>
						</tr>
						<tr>
							<td>Resource Path</td>
			    			<td>/Session</td>
						</tr>
						<tr>
							<td>Authorization</td>
			    			<td>Basic (Required)</td>
						</tr>
				  	</table>
		          	<programlisting>
		            	<![CDATA[
            <Record sessionId="" sessionName=""  id="" name="">
                <SrcPort id="" portNID="" portTitle="tx1"/>
                <DstFile id="" fileTitle="RecordingTitle">
                    <MetaData>
                        <Tag Name="ID">1299792256</Tag>
                        <Tag Name="TestCase">BasicRecording</Tag>
                    </MetaData>
                </DstFile>
            </Record>
            
            <Record>
                <SrcPort portTitle="tx1"/>
                <DstFile fileTitle="Recording1"/>
            </Record>
  ]]>
          			</programlisting>
        		</example>
		        <example>
		          <title>Basic Record Request with file name/dir spec</title>
		          <programlisting>
		            <![CDATA[
		           <Record sessionId="" sessionName=""  id="" name="" >
		                <SrcPort id="" portNID="" portTitle="tx1"/>
		                <DstFile id="" fileTitle="RecordingTitle" dirNID="dirNID1">
		                    <MetaData>
		                        <Tag Name="ID">1299792256</Tag>
		                        <Tag Name="TestCase">BasicRecordingWithDirNID</Tag>
		                    </MetaData>
		                </DstFile>
		            </Record>  ]]>
		          </programlisting>
		        </example>
        
		        <example>
		          <title>Record from an existing Src to file</title>
		          <programlisting>
		            <![CDATA[
		           <Record sessionId="id1" id="conn1" name="" srcEntityId="srcentityId1">
		                <DstFile id="" fileTitle="" dirNID="">
		                    <MetaData>
		                        <Tag Name="ID">1299792256</Tag>
		                        <Tag Name="TestCase">RecordExistingSource</Tag>
		                    </MetaData>
		                </DstFile>
		            </Record>  ]]>
		          </programlisting>
		        </example>        
		        <example>
		          <title>Append to Recording Based on Title</title>
		          <programlisting>
		            <![CDATA[
		           <Record sessionId="" id="" name="" >
		                <SrcPort id="" portNID="" portTitle="tx1"/>
		                <DstFile id="" fileTitle="fileTitle1"  key='Title'  action='Append' />
		            </Record>  ]]>
		          </programlisting>
		        </example>
		         <example>
		          <title>Append to Recording Based on MetaData</title>
		          <programlisting>
		            <![CDATA[
		           <Record sessionId="" id="" name="" srcEntityId="">
		                <SrcPort id="" portNID="" portTitle="tx1"/>
		                <DstFile id="" fileTitle="fileTitle1"  
		                    key='MetaData'  action='Append' keyMetaDataTagName='ID'>
		                    <MetaData>
		                        <Tag Name="ID">1299792256</Tag>
		                        <Tag Name="TestCase">AppendToRecording</Tag>
		                    </MetaData>
		                </DstFile>
		            </Record>  ]]>
		          </programlisting>
		        </example>
        
		        <example>
		          <title>Record Request with Profile NID</title>
		          <programlisting>
		            <![CDATA[
		           <Record sessionId="" sessionName=""  id="" name="" >
		                <Profile id="" profileNID="NID1" profileTitle=""/>
		                <SrcPort id="" portNID="" portTitle="tx1"/>
		                <DstFile id="" fileTitle="RecordingTitle" dirNID="dirNID1">
		                    <MetaData>
		                        <Tag Name="ID">1299792256</Tag>
		                        <Tag Name="TestCase">BasicRecordingWithDirNID</Tag>
		                    </MetaData>
		                </DstFile>
		            </Record>  ]]>
		          </programlisting>
		        </example>
        
		        <example>
		          <title>Record Request with Profile Title</title>
		          <programlisting>
		            <![CDATA[
		           <Record sessionId="" sessionName=""  id="" name="" >
		                <Profile id="" profileNID="" profileTitle="V2D_LAN"/>
		                <SrcPort id="" portNID="" portTitle="tx1"/>
		                <DstFile id="" fileTitle="" dirNID="dirNID1">
		                    <MetaData>
		                        <Tag Name="ID">1299792256</Tag>
		                        <Tag Name="TestCase">BasicRecordingWithDirNID</Tag>
		                    </MetaData>
		                </DstFile>
		            </Record>  ]]>
		          </programlisting>
		        </example>
        
		         <example>
		          <title>Record from an existing Src with profile id</title>
		          <programlisting>
		            <![CDATA[
		           <Record sessionId="" sessionName=""  id="" name="" profileId="profileID">
		                <Profile id="" profileNID="" profileTitle=""/>
		                <SrcPort id="" portNID="" portTitle="tx1"/>
		                <DstFile id="" fileTitle="" dirNID="dirNID1">
		                    <MetaData>
		                        <Tag Name="ID">1299792256</Tag>
		                        <Tag Name="TestCase">BasicRecordingWithDirNID</Tag>
		                    </MetaData>
		                </DstFile>
		            </Record>  ]]>
		          </programlisting>
		        </example>

		        <example>
		          <title>Advanced Record Request including grpFileId and StorePort spec </title>
		          <para> [ Not Implemented ]</para>
		          <programlisting>
		            <![CDATA[
		    <Record sessionId="" connGroupId="" id="">
		      <SrcPort id="" portNID=""/>
		      <DstFile id="" grpFileId="" fileTitle="" dirTitle="" dirNID="">
		        <StorePort id="" portNID=""/>
		      </DstFile>   
		    </Record>
		  ]]>
		          </programlisting>
		        </example>
		        <example>
		          <title>Record Request Response </title>        
		          <programlisting>
		            <![CDATA[
		 <Session name="srcuser1 Mar 10 21:24" timelineId="c29ccf26-74c4-4e5a-9d3e-f2818e54cd1d.StreamTrack" 
		  recordTimelineId="c29ccf26-74c4-4e5a-9d3e-f2818e54cd1d.RecordTrack" 
		  type="LIVE" gc="true" id="set_file_metada_test_1299792256" state="Started">
		    <Properties sessionConfigNID="" ownerUserJID="srcuser1@localhost/srcpc1" dateCreated="1299792256254" playlength=""/>
		    <TimelineList/>
		    <GrpFileList/>
		    <DirList/>
		    <ProfileList>
			     <Profile id="3980fb57-5fd7-4398-be26-2ca9056b0d63" 
			     profileNID="default.mediastreamprofilelist.mspl_e1cb45a9-f433-40b2-8156-258c0d3f26ed" 
			     name="V2D_LAN"/>
		    </ProfileList>
		    <EntityList>
		    <Entity gc="false" id="021cf69d-b6e4-4f5e-88e2-56930830d243" type="SrcPort" name="tx1" presence="available" state="" errorCode="" errorData="">
		      <Port resourceNID="default.mediastreamsrcportresourcelist.mssprl_e22023ce-982c-40b2-87a7-926cf5a2bfca" resourceTitle="tx1" trickPlay=""/>
		    </Entity>
		    <Entity gc="false" id="47bdcfe0-b7a1-4e73-a1b9-01318f99e654" type="RecFile" name="set_file_metada_test_1299792256" presence="available" state="" errorCode="" errorData="">
		       <File resourceTitle="set_file_metada_test_1299792256" grpFileId="" key="" action="" keyMetaDataKeyName="" dirId="" 
		            clipId="47bdcfe0-b7a1-4e73-a1b9-01318f99e654" resourceNID="default.mediastreamfileresourcelist.msfrl_725d55ff-30ef-40ce-bd27-4692f0822e01" 
		            playLength="0" mediaGroupId="">
		          <MetaData>
		              <Tag Name="ID">1299792256</Tag>
		              <Tag Name="TestCase">AddMediaStreamFile</Tag>
		          </MetaData>
		       </File>
		     </Entity>
		    </EntityList>
		    
		    ]]>
		  			</programlisting>
		        </example>
        		<example>
		          <title>Record Request Response [continued]</title>          
		          <programlisting>
		            <![CDATA[
		   <ConnectionList>
		    <Connection dstEntityId="47bdcfe0-b7a1-4e73-a1b9-01318f99e654" 
		       id="set_file_metada_test_1299792256" srcEntityId="021cf69d-b6e4-4f5e-88e2-56930830d243" 
		        type="RECORD" name="set_file_metada_test_1299792256" canvasId="set_file_metada_test_1299792256" 
		        windowId="set_file_metada_test_1299792256" state="WAITING_FOR_SOURCE-DEST_CONTACTED"/>
		    </ConnectionList>
		    <Groups>
		       <Tag Name="Location" Value="Sunnyvale"/>
		    </Groups>
		 </Session>
		           ]]>
		          </programlisting>
		        </example>     
		</section>
      	     <section>
          <title>ResumeRecord</title>
          <example>
            <title>ResumeRecord Request</title>
            <table border="1">
            <title>ResumeRecord Request</title>
  				<tr>
					<td>Request</td>
    				<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		  	</table>
            <programlisting>
              <![CDATA[
  <ResumeRecord sessionId='xyz123'/>
]]>
            </programlisting>
          </example>
          <example>
            <title>ResumeRecord Response</title>
            <programlisting>
              <![CDATA[
	<Timeline sessionId="xyz123" connGroupId="" connId="" id="">
		<Start WC="1252016072510" TC="" Offset="0" parentTimelineId=""/>
		<Last WC="1252016479279" TC="" Offset="406769" TimeScale="1" 
		requestedAction="Resume"/>
	</Timeline>
]]>
            </programlisting>
          </example>
        </section>
		     <section>
	        <title>SwitchSrc</title>        
	        <para>
	          Used to switch the src for an existing connections.
	          <simplelist>
	            <member>
	              Use the SrcEntityId to specify the source to switch to.              
	            </member>
	          </simplelist> 
	        </para>
	        <example>
	          <title>SwitchSrc Request</title>
	          <table border="1">
	          <title>SwitchSrc Request</title>
	  				<tr>
						<td>Request</td>
	    				<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
			 	</table>
	         <programlisting>
	            <![CDATA[
	    <SwitchSrc sessionId="recordSessionID" connId="strmc2" newSrcEntityId="src1"/>
	  ]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>SwitchSrc Response</title>
	          <programlisting>
	            <![CDATA[
	    <Connection id="strmc2" srcEntityId="src1" dstEntityId="myDst1234"/>
	  ]]>
	          </programlisting>
	        </example>
      	  </section>
		     <section>
	          <title>PauseRecord</title>
	          <example>
	            <title>PauseRecord Request</title>
	            <table border="1">
	            <title>PauseRecord Request</title>
	  				<tr>
						<td>Request</td>
	    				<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
			  	</table>
	            <programlisting>
	              <![CDATA[
	  <PauseRecord sessionId='xyz123'/>             
	]]>
	            </programlisting>
	          </example>
	          <example>
	            <title>PauseRecord Response</title>
	            <programlisting>
	              <![CDATA[
		<Timeline sessionId="xyz123" connGroupId="" connId="" id="">
			<Start WC="1252016072510" TC="" Offset="0" parentTimelineId=""/>
			<Last WC="1252016452472" TC="" Offset="379962" TimeScale="0" 
			requestedAction="Pause"/>
		</Timeline>           
	]]>
	            </programlisting>
	          </example>
	        </section>
	         <section>
	          <title>Pause</title>
	          <example>
	            <title>Pause Request</title>
	            <table border="1">
	            <title>Pause Request</title>
	  				<tr>
						<td>Request</td>
	    				<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
			  	</table>
	            <programlisting>
	              <![CDATA[
	  <Pause sessionId='xyz123'/>             
	]]>
	            </programlisting>
	          </example>
	          <example>
	            <title>Pause Response</title>
	            <programlisting>
	              <![CDATA[
		<Timeline sessionId="xyz123" connGroupId="" connId="" id="">
			<Start WC="1252016072510" TC="" Offset="0" parentTimelineId=""/>
			<Last WC="1252016119868" TC="" Offset="47358" TimeScale="0" requestedAction="Pause"/>
		</Timeline>            
	]]>
	            </programlisting>
	          </example>
	        </section>
             <section>
          <title>SkipBack</title>
          <para>
            The "skipOffset" is always a "nowOffset".
            This is the equivalent of issuing "Resume" with a negative "nowOffset"
          </para>
          <example>
            <title>SkipBack Request</title>
            <table border="1">
            <title>SkipBack Request</title>
  				<tr>
					<td>Request</td>
    				<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		  	</table>
            <programlisting>
              <![CDATA[
  <SkipBack sessionId='xyz123' skipOffset='2000' timeScale='' />
]]>
            </programlisting>
          </example>
          <example>
            <title>SkipBack Response</title>
            <programlisting>
              <![CDATA[
	<Timeline sessionId="xyz123" connGroupId="" connId="" id="">
		<Start WC="1252016072510" TC="" Offset="0" parentTimelineId=""/>
		<Last WC="1252016400432" TC="" Offset="325922" TimeScale="1" 
		requestedAction="SkipBack"/>
	</Timeline>
]]>
            </programlisting>
          </example>
        </section>
           <section>
          <title>SkipFwd</title>
          <para>
            The "skipOffset" is always a "nowOffset".
            This is the equivalent of issuing "Resume" with a positive "nowOffset"
          </para>
          <example>
            <title>SkipFwd Request</title>
            <table border="1">
            <title>SkipFwd Request</title>
  				<tr>
					<td>Request</td>
    				<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		 	 </table>
            <programlisting>
              <![CDATA[
  <SkipFwd sessionId='xyz123' skipOffset='1000' timeScale='' />             
  ]]>
            </programlisting>
          </example>
          <example>
            <title>SkipFwd Response</title>
            <programlisting>
              <![CDATA[
	<Timeline sessionId="xyz123" connGroupId="" connId="" id="">
		<Start WC="1252016072510" TC="" Offset="0" parentTimelineId=""/>
		<Last WC="1252016423002" TC="" Offset="349492" TimeScale="1" 
		requestedAction="SkipFwd"/>
	</Timeline>
  ]]>
            </programlisting>
          </example>
        </section>
      	    <section>
			<title>Catchup</title>
          	<para>
            	This is the equivalent of issuing "Resume" with a liveOffset=0
          	</para>
          	<example>
            	<title>Catchup Request</title>
            	<table border="1">
            	<title>Catchup Request</title>
	  				<tr>
						<td>Request</td>
	    				<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
		  		</table>
            	<programlisting>
              		<![CDATA[
  				<Catchup sessionId=""/>             
					]]>
            	</programlisting>
          	</example>
          	<example>
            	<title>Catchup Response</title>
            	<programlisting>
              		<![CDATA[
				<Timeline sessionId="xyz123" connGroupId="" connId="" id="">
					<Start WC="1252016072510" TC="" Offset="0" parentTimelineId=""/>
					<Last WC="1252016160137" TC="" Offset="87627" TimeScale="1" 
					requestedAction="Catchup"/>
				</Timeline>
					]]>
            	</programlisting>
          	</example>
		</section>
		</section>
		<section>
			<title>Session Participant API</title>
			<para>
				API calls for Session Participants
			</para>
		    <section>
	        <title>Invite</title>
	        <para> [Not Implemented] </para>
	        <para>Issue an Invite to explicitly invite another user to a session</para>
	        <example>
	          <title>Simple Invite by userId or jid</title>
	          <table border="1">
	          <title>Simple Invite by userId or jid</title>
	  			<tr>
					<td>Request</td>
	    			<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
			  </table>
	          <programlisting>
	            <![CDATA[
	  <Invite sessionId="" id="" userId="" jid=""/>
	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Invite by userId(who) and/or deviceId(from where)</title>
	          <programlisting>
	            <![CDATA[
	  <Invite sessionId="" id="" userId="" deviceId=""/>
	]]>
	          </programlisting>
	        </example>
	      </section>
	      <section>
	        <title>Join</title>
	        <para>
	          In response to the Join - the system will send back an "MUC invite" to an MUC room.
	          The client should respond to that by doing a standard "XMPP MultiUserChat Join" to enter the MUC room. 
	          <simplelist>
	            <member>
	              - Join is once per session with or without invite.
	            </member>
	            <member>
	              - An invite is required to join "Invitation Only" Sessions (the default)
	            </member>
	            <member>
	              - Sessions that have been "Published" can be joined without an explicit  "Invite"
	            </member>
	          </simplelist>
	        </para>
	        <example>
	          <title>Join without invite Request</title>
	          <table border="1">
	           <title>Join without invite Request</title>
	  			<tr>
					<td>Request</td>
	    			<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
			  </table>
	          <programlisting>
	            <![CDATA[
	  <Join sessionId=""/>
	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Join without invite Response</title>
	          <programlisting>
	            <![CDATA[
	  <Session .../>
	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Join without invite Response - MUC Room Invite Message</title>
	          <programlisting>
	            <![CDATA[
	  <Session .../>
	]]>
	          </programlisting>
	        </example>
	        <example>
	          <title>Join with invite</title>
	          <programlisting>
	            <![CDATA[
	  <Join sessionId="" inviteId=""/>
	]]>
	          </programlisting>
	        </example>
	      </section>
	      <section>
	        <title>Kick</title>
	        <para> [Not Implemented] </para>
	        <para>Issue a Kick to explicitly force a user to leave a session</para>
	        <example>
	          <title>Kick</title>
	          <table border="1">
	          <title>Kick</title>
	  			<tr>
					<td>Request</td>
	    			<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
			  </table>
	          <programlisting>
	            <![CDATA[
	  <Kick sessionId="" id="" userName="" jid="" userId="" deviceId=""/>
	]]>
	          </programlisting>
	        </example>
	      </section>
	     </section>
	   <section>
			<title>Bookmark Operations</title>
			<para>
				API calls for Bookmarks
			</para>
		<section>
	    	<title>AddBookmark</title>
	        <para>
	          The location of the bookmark is derived by the App Server based on the "Time" of the specified Connection (or ConnGroup).
	          All the fields in the RequestXML are optional.  If an 'id' is not specified - it will be generated by the system.
	          Bookmarks can be added without a title or comment and then updated with all the info later.
	        </para>
	        <example>
				<title>AddBookmark Request</title>
	          	<table border="1">
	          	<title>AddBookmark Request</title>
		  			<tr>
						<td>Request</td>
		    			<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
			  	</table>
	          	<programlisting>
            		<![CDATA[
		<Bookmark whereFileNID="" whereSessionInfo="" title="" TC="" offset="">
			<Description />
			<MetaData>
				<Tag Name=""></Tag>
			</MetaData>
		</Bookmark>
]]>
          		</programlisting>  
          		<itemizedlist>
		          	<listitem>
						<para>
							<parameter>Either whereSessionInfo or whereFileNID Required </parameter>					
						</para>
						<para>
								<parameter>whereSessionInfo is key:value pairs e.g. "@whereSessionInfo": "sessionId:,connGroupId:,connId:,entityId
								</parameter>
								
						</para>
						<para>
								<parameter>whereFileNID is the NID of the file to add bookmark to.
								</parameter>
							</para>
					</listitem>
				</itemizedlist>       
        	</example>
        	<example>
          		<title>AddBookmark Response</title>
          		<programlisting>
            		<![CDATA[
	<AddBookmark NID="" title="">
		  <Bookmark TC="" offset="" owner=""
			  dateCreated="" fileNID="">
			  <Description />
			  <MetaData>
				  <Tag Name=""></Tag>
			  </MetaData>
		  </Bookmark>
	</AddBookmark>	
]]>
          		</programlisting>        
        	</example>
		</section>
        <section>
        	<title>DeleteBookmark</title>
	        <example>
	          <title>DeleteBookmark Request</title>
	          <table border="1">
	          <title>DeleteBookmark Request</title>
	          	<tr>
					<td>Request</td>
	    			<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
		  	</table>
	        <programlisting>
	            <![CDATA[
		<DeleteBookmark whereNID="" whereTCRange="" whereDateRange=""
			whereFileNID="" whereSessionInfo=""/>
				]]>
	        </programlisting>
	        <itemizedlist>
	        	<listitem>
					<para>
						<parameter>whereNID or whereSessionInfo or whereFileNID</parameter>		
						<option>Required</option>			
					</para>
					<para>
								<parameter>whereNID is the NID of the bookmark to delete.
								</parameter>
							</para>
					<para>
						<parameter>whereTCRange or whereDateRange format: "From:2014-11-17 00:00:00.0000,To:2014-11-19 15:00:00.0000"
						 </parameter>	
					</para>
				</listitem>
			</itemizedlist>   
	       </example>
	        <example>
          		<title>DeleteBookmark Response</title>
          		<programlisting>
            		<![CDATA[
		<DeleteBookmark total="">
			<Bookmark NID=""/>
			<Bookmark NID=""/>
			<Bookmark NID=""/>
		</DeleteBookmark>
]]>
          		</programlisting>
        	</example>
		</section>
      	<section>
        	<title>GetBookmark</title>
        	<example>
          		<title>GetBookmark Request</title>
          		<table border="1">
          		<title>GetBookmark Request</title>
		  			<tr>
						<td>Request</td>
		    			<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
		  		</table>
        	</example>
        	
        	<example>
          		<title>GetBookmark Request</title>
          		<programlisting>
            		<![CDATA[
  <GetBookmark startFrom="" countToFetch="" sortOrder=""
			sortBy="ascending/descending"
			selectFormat="BASIC/EXTENDED"
			whereNID=""
			whereTextSubStr=""
			whereTCRange=""
			whereFileNID=""
			whereSessionInfo=""/>
]]>
          		</programlisting>
          		<itemizedlist>
						<listitem>
							<para>
								<parameter>Either whereSessionInfo or whereFileNID Required
								</parameter>
							</para>
							<para>
								<parameter>whereSessionInfo is key:value pairs e.g. "@whereSessionInfo": "sessionId:,connGroupId:,connId:,entityId"
								</parameter>
							</para>
							<para>
								<parameter>whereFileNID is the NID of the file which contains bookmarks.
								</parameter>
							</para>
						</listitem>
						
					</itemizedlist>
					
        	</example>
        	

        	<example>
          		<title>GetBookmark Response - BASIC Format</title>
          		<programlisting>
            		<![CDATA[
  <GetBookmark from="" total="">
	<Bookmark NID="" title="" TC="" offset="" owner="" 
	    dateCreated="" fileNID=""/>
	<Bookmark NID="" title="" TC="" offset="" owner="" 
	    dateCreated="" fileNID=""/>
	<Bookmark NID="" title="" TC="" offset="" owner=""
	    dateCreated="" fileNID=""/>
  </GetBookmark>
]]>
          		</programlisting>
        	</example>
        	<example>
          		<title>GetBookmark Response - EXTENDED Format</title>
          		<programlisting>
            		<![CDATA[
  <GetBookmark from="" total="">
		<Bookmark NID="" title="" TC="" offset="" owner="" 
		    dateCreated="" fileNID="">
			<Description />
			<MetaData>
				<Tag Name=""></Tag>
			</MetaData>
		</Bookmark>
  </GetBookmark>
]]>
          		</programlisting>
        	</example>
      	</section> 
	     <section>
	        <title>NewBookmark</title>        
	        <para>
	           Return  new bookmark for given session or file nid by filling the time code and offset values. 
	          (Note: this call don't add bookmark in database.  To add bookmark in database user has to use AddBookmark along with this).          
	          <optional></optional>                             
	        </para>      
	          
	        <example>
	          <title>NewBookmark Request</title>
	          <table border="1">
	          <title>NewBookmark Request</title>
	  			<tr>
					<td>Request</td>
	    			<td>HTTP POST</td>
				</tr>
				<tr>
					<td>Accept(No spaces or newlines)</td>
	    			<td>"application/xml"</td>
				</tr>
				<tr>
					<td>Status</td>
	    			<td>200, 401, 500</td>
				</tr>
				<tr>
					<td>Query Parameters</td>
	    			<td>None</td>
				</tr>
				<tr>
					<td>Resource Path</td>
	    			<td>/Session</td>
				</tr>
				<tr>
					<td>Authorization</td>
	    			<td>Basic (Required)</td>
				</tr>
			  </table>
	          <programlisting>
	            <![CDATA[
				<NewBookmark whereFileNID=""  whereSessionInfo="sessionId:,connGroupId:,connId:,entityId"/>	]]>
	          </programlisting>  
	          <itemizedlist>
	          <listitem>
					<para>
						<parameter>Either whereSessionInfo or whereFileNID Required </parameter>					
					</para>
				</listitem>
			</itemizedlist>       
	        </example>
	        <example>
	          <title>NewBookmark Response</title>
	          <programlisting>
	            <![CDATA[
				<NewBookmark>
					<Bookmark title="" TC="" offset="">	
						<Description />
						<MetaData>
						   <Tag Name=""></Tag>
						</MetaData>
					</Bookmark>
	    		</NewBookmark>	
	]]>
	          </programlisting>        
	        </example>
	      </section>
	     <section>
	        <title>UpdateBookmark</title>
	        <example>
	          <title>UpdateBookmark Request</title>
	          <table border="1">
	          <title>UpdateBookmark Request</title>
	  				<tr>
						<td>Request</td>
	    				<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
			 	 </table>
	          <programlisting>
	            <![CDATA[
		<UpdateBookmark whereNID="">
				<Bookmark title="" TC="" offset="">
					<Description />
					<MetaData>
						<Tag Name=""></Tag>
					</MetaData>
				</Bookmark>
		</UpdateBookmark>
	]]>
	          </programlisting>  
	           <itemizedlist>
	          <listitem>
					<para>
						<parameter>whereNID</parameter>		
						<option>Required </option>			
					</para>
				</listitem>
			</itemizedlist>         
	        </example>
	        <example>
	          <title>UpdateBookmark Response</title>
	          <programlisting>
	            <![CDATA[
		<UpdateBookmark>
			<Bookmark NID="" title="" TC="" offset="" 
			    owner="" dateCreated="" fileNID="">
				<Description />
				<MetaData>
					<Tag Name=""></Tag>
				</MetaData>
			</Bookmark>
		</UpdateBookmark>		
	]]>
	          </programlisting>
	        </example>
	      </section>
	    </section>> 
	   <section>
			<title>Authorization</title>
			<para>
				External Authorization
			</para>
	    <section>
			<title>Authorize Request</title>
			<para>
				Auth user can reply back with his decision allow/deny/revoke using Authorize request
			</para>
			<example>
				<title>Authorize Request</title>
				<table border="1">
				<title>Authorize Request</title>
		  			<tr>
						<td>Request</td>
		    			<td>HTTP POST</td>
					</tr>
					<tr>
						<td>Accept(No spaces or newlines)</td>
		    			<td>"application/xml"</td>
					</tr>
					<tr>
						<td>Status</td>
		    			<td>200, 401, 500</td>
					</tr>
					<tr>
						<td>Query Parameters</td>
		    			<td>None</td>
					</tr>
					<tr>
						<td>Resource Path</td>
		    			<td>/Session</td>
					</tr>
					<tr>
						<td>Authorization</td>
		    			<td>Basic (Required)</td>
					</tr>
		  		</table>
				<programlisting>
            		<![CDATA[		
	   <Authorize sessionId='' connId='' action='ALLOW/DENY/REVOKE' reason='' /> 
            		]]>
          		</programlisting>
			</example>
			<example>
				<title>Authorize Response</title>
				<programlisting>
            		<![CDATA[
	    	<Authorize>		
			 	<AuthConnectionInfo ...../>
					 <!-- Check authConnectionInfo element in ConnectionUpdate Section of Update Notification Chapter  -->	
			</Authorize> ]]>
          		</programlisting>
			</example>
		 </section>
		 </section>
	  </chapter>

     <chapter>
    <title>Session Notifications</title>
    <section>
      <title>EntityPresence Notification</title>
      <para>
        Every time an entity joins or leaves the room a
        presence update is sent into the room
      </para>
      <example>
        <title>EntityPresence Notification</title>
        <programlisting>
          <![CDATA[
  <EntityPresence entityId="" sessionId="" jid="" value=""/>

  
]]>
        </programlisting>
      </example>
    </section>
    <section>
      <title>ConnState Notification</title>
      <para>
        Every time a connection state changes - a notification is
        sent into the room. If value is Error - then code and msg are valid
        The list of possible connections states are mentioned below
       </para>
      <example>
        <title>ConnState Notification: CONNECTED</title>
        <programlisting>
          <![CDATA[
  <ConnState sessionId="" connId="" value='<see below>'>
    <Timeline/>
  </ConnState>
  
  The list of possible connections states are mentioned below
  [desc not present in the notification]
  The connection states are also reflected in the Connection 
  element within the Session
  
  <ConnStateList>
    <ConnState value="CREATED"  desc="Stream has been created"/>
    <ConnState value="AUTHORIZING"  desc="Waiting for authorization"/>
    <ConnState value="CHECKING_AVAILABILITY"  
               desc="Waiting for the source/dest resource to acquire a contactJID"/>
    <ConnState value="WAITING_FOR_DEST"  
               desc="Waiting for destination to join the room"/>
    <ConnState value="WAITING_FOR_SOURCE-DEST_CONTACTED"  
               desc="Destination notified of stream"/>
    <ConnState value="WAITING_FOR_SOURCE-DEST_ACKNOWLEDGED"  
               desc="Destination waiting for source"/>
    <ConnState value="WAITING_FOR_STREAMURL"  
               desc="Destination waiting for streamURL"/>
    <ConnState value="WAITING_FOR_STREAMSTART"  
               desc="Destination waiting for stream started notification"/>
    <ConnState value="STREAMING"  desc="Stream started"/>
    <ConnState value="STREAM_PAUSED"  desc="Stream paused"/>
    <ConnState value="DENIED_XAUTH"  desc="Authorization denied"/>
    <ConnState value="REVOKED_XAUTH"  desc="Authorization revoked"/>
    <ConnState value="END_OF_MEDIA"  desc="End of Media"/>
    <ConnState value="SETUP_ERROR"  desc="Error while setup of stream"/>
    <ConnState value="START_ERROR"  desc="Error when starting the stream"/>
    <ConnState value="SOURCE_ERROR"  desc="Source setup error"/>
    <ConnState state="MEDIA_ERROR"  desc="Media error"/>
  </ConnStateList>
  
  The Timeline element is same as the Session Timeline mentioned earlier, 
  but now specific to the scope of the Connection
]]>
        </programlisting>
      </example>
      <example>
        <title>ConnState Notification: Error</title>
        <programlisting>
          <![CDATA[
  <ConnState sessionId="" connId="" value='ERROR' errorCode='NNNN' errorData='Error Description'/>
]]>
        </programlisting>
      </example>
    </section>
    <section>
      <title>SessionState Notification</title>
      <para>
        Every time a Session state changes - a notification is
        sent into the room. If value is Error - then code and msg are valid
        The possible values in the SessionState Notification are CREATED and DELETED
       </para>
       <example>
        <title>SessionState Notification</title>
        <programlisting>
          <![CDATA[
  <SessionState sessionId="" value="" />
]]>
        </programlisting>
      </example>
    </section>
    <section>
      <title>Timeline Notification</title>
      <para>
        A Timeline is a collection of 3 attributes that serves as a the basic unit for sharing Time/Offset information among Entities.
        It allows for Time/Offset exchange without being subject to the delays in message transmission/processing.
        Using it, one Entity can derive/track the Current Offset of another entity (to the extent that their WCs are in Sync).
      </para>
      <para>
        Timelines exist Hierarchically for:
        <simplelist>
          <member>
            - the session
          </member>
          <member>
            - all connection groups
          </member>
          <member>
            - all connections
          </member>
          <member>
            - all entities.
          </member>
        </simplelist>
      </para>
      <para>
        A Basic Timeline correlates:
        <simplelist>
          <member>
            - lastWC = the WC when the last action that affected this Timeline happened
          </member>
          <member>
            - lastOffset = the Offset of this Entity w.r.t. its START at that time
          </member>
          <member>
            - TimeScale = the rate at which the Offset has been changing since then
            - reflects the lastAction: eg: Play = 1, Stop = 0, Rewind = -1, 15xFF = 15
          </member>
        </simplelist>
      </para>
      <para>
        To track fully Time/Offset, the Timline includes Info about the Start of the Entity.
        <simplelist>
          <member>
            - StartWC = The WC at the time this Enitity was Started.
            This is used to derive the Entity's LIVE Time at any moment.
          </member>
          <member>
            - StartOffset = The difference between the 0 offset of this Entity and the 0 Offset of it's current Parent Entity
            This is used to translate a parent Entity Offset to a child Entity Offset.
          </member>
        </simplelist>
      </para>
      <para>
        <simplelist>
          <member>
            - PVR actions essentially specify a new "target" Timeline for the scope they are issued at.
          </member>
          <member>
            - These then result in timeline change requests for entities that make up that scope
          </member>
          <member>
            - When the entites achieve this timeline, they send timeline update notifications into the session.
          </member>
          <member>
            - If all goes well, these will match the requested timeline.
          </member>
          <member>
            - The other event that causes Timeline Notifications is when Connection grouping/hierarchy changes.
          </member>
        </simplelist>
      </para>
      <para>
        If the difference between the Start and Last WC is equal to
        the difference between the Start and Last Offset then you
        are "Live/CaughtUp"
      </para>
      <example>
        <title>Timeline Notification</title>
        <programlisting>
          <![CDATA[
  <Timeline sessionId="" connGroupId="" connId="" id="">
    <Start WC="2341234" TC="" Offset="3456" parentTimelineId=""/>
    <Last WC="7444674" TC="" Offset="9678687" TimeScale="0"
     requestedAction="Pause"/>
  </Timeline>
]]>
        </programlisting>
      </example>
    </section>
  </chapter>
    <appendix>
     <title>Data Model</title>
     <para></para>
      <section>
         <title>RX Display Config/Status Parameter Listing</title>         
     <itemizedlist>		
			<listitem>
				<para>
					<parameter>Background enable="true/false"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Background zIndex=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Background content="0xRRGGBB/LOCALVIDEO"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Window id=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Window enable="true/false"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Window zIndex=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Window content="SPLASH/REMOTEVIDEO"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>vpos="ALIGNTOP/ALIGNMIDDLE/ALIGNBOTTOM/NNNpx"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>hpos="ALIGNLEFT/ALIGNMIDDLE/ALIGNRIGHT/NNNpx"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>hres="NNNpx"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>vres="NNNpx"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>aspect="SourceWidth/SourceHeight/Auto/None"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>transparency="NNNpx"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
		</itemizedlist>
	</section>
	<section>
		<title>RX DisplayConfig </title>	 
		<programlisting>
		  <![CDATA[
			<Canvas>
			  <Background zIndex="0" content="LOCALVIDEO" enable="true"/>
			  <Window id="id" zIndex="1" content="REMOTEVIDEO" enable="true">
			    <Geometry vpos="ALIGNTOP" 
			    		  hpos="ALIGNLEFT" 
			    		  vres="75%" 
			    		  hres="75%" 
			    		  aspect="Auto" 
			    		  transparency="20%"/>
			   </Window>
		     </Canvas>
		   ]]>
	  </programlisting>
	</section>	
	<section>
		<title>RX DisplayStatus </title>		
		<programlisting>
		  <![CDATA[
			<Canvas hres="1280px" vres="1024px">
 				 <Display id="" hres="1280px" vres="1024px" lut="15 [VESA 1280x1024@60 Hz]"/>
  				 <Background zIndex="0" content="LOCALVIDEO" enable="true"/>
  				 <Window id="" enable="true" zIndex="1" content="REMOTEVIDEO">
   					 <Geometry vpos="0px" hpos="0px" 
   					 			vres="768px" hres="960px" 
   					 			transparency="20%"/>
   					 <Source hres="960px" vres="768px" 
   					 		 hscale="75%" vscale="75%" 
   					 		 lut="Server Splash Screen 1280x1024@60.0"/>
 				 </Window>
			</Canvas>
		   ]]>
	  </programlisting>
	</section>
	<section>
         <title>Remote Operated Client Display Config/Status Parameter Listing</title>         
         <itemizedlist>						
			<listitem>
				<para>
					<parameter>Background enable="true/false"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Background zIndex=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Background content='OS/Image/Session'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ImageContent imageURL="" </parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ImageContent color="" </parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SessionContent enableConnPanel='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SessionContent enableBookmarkPanel='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SessionContent enableCtrlPanel='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SessionContent enableHeaderPanel='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SessionContent enablePlayerPanel='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SessionContent sessionId=''</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>SessionContent content="0xRRGGBB/LOCALVIDEO"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>	
	        <listitem>
				<para>
					<parameter>Layout id=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout type="Custom/AutoGrid/AutoStrip"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout nRow=""</parameter>
					<optional>Required if type='AutoGrid'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout nCol=""</parameter>
					<optional>Required if type='AutoGrid'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout colWidth=""</parameter>
					<optional>Required if type='AutoGrid/AutoStrip'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout rowHeight=""</parameter>
					<optional>Required if type='AutoGrid/AutoStrip'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout hpad=""</parameter>
					<optional>Required if type='AutoGrid/AutoStrip'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout vpad=""</parameter>
					<optional>Required if type='AutoGrid/AutoStrip'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout stripPos=""</parameter>
					<optional>Required if type='AutoStrip'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout nStrip=""</parameter>
					<optional>Required if type='AutoStrip'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout border="show/hide/autohide"</parameter>
					<optional>Required if type='Custom'</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Layout borderStyle="[L:T:R:B]/[css]"</parameter>
					<optional>Required if type='Custom'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout header="hide/show/sutohide"</parameter>
					<optional>Required if type='Custom'</optional>
				</para>
			</listitem>	
			<listitem>
				<para>
					<parameter>Layout headerStyle="basic/extended/[css]"</parameter>
					<optional>Required if type='Custom'</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Layout active="true/false"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
     		<listitem>
				<para>
					<parameter>Window id=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>Window</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Window content='MediaThumbnail/MediaStream'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>			
			<listitem>
				<para>
					<parameter>Window zIndex=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Window content="SPLASH/REMOTEVIDEO"</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
				<listitem>
				<para>
					<parameter>ConnectionContent MediaStreamIOPortTypeTitle=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ConnectionContent MediaStreamIOPortElementID=''</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ConnectionContent sessionId=''</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ConnectionContent connId=''</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ConnectionContent srcKbmCtrl=''</parameter>
					<optional>Not Supported</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ThumbnailContent MediaStreamIOPortTypeTitle=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ThumbnailContent MediaStreamIOPortElementID=''</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ThumbnailContent imageURL=""</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>ThumbnailContent refreshInterval=''</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties fps</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties maximize='true/false''</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties mute='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties remoteKbmCtrl='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties scale</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties visibility='true/false'</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
		    <listitem>
				<para>
					<parameter>Properties volume</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties aspect</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties border</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>Properties hpos</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>Properties vpos</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties hres</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties vres</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>Properties layoutPos</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>Properties scrollHPos</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
					<listitem>
				<para>
					<parameter>Properties scrollVPos</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
			<listitem>
				<para>
					<parameter>Properties transparency</parameter>
					<optional>Required</optional>
				</para>
			</listitem>
		</itemizedlist>
      </section> 	        
	<section>
		<title>Remote Operated Client DisplayConfig </title>	  
		<programlisting>
		  <![CDATA[
		  
 
  <Display configurable="" hres="AUTO" vres="AUTO">
      <Panel id="" enable="" content="">
         <Geometry zIndex="" border="" vpos="0" 
               hpos="0" vres="100%" hres="100%" 
               aspect="" transparency="">
         </Geometry>
      </Panel>
  </Display>

  <Canvas id="" hres="1280" vres="1024">
     <Background enable="" zIndex="" content="">
        <ImageContent imageURL="" color=""></ImageContent>
        <SessionContent enableConnPanel="" enableBookmarkPanel="" 
                        enableCtrlPanel="" enableHeaderPanel=""
                        enablePlayerPanel="" sessionId="">
         </SessionContent>
     </Background>

     <Layout id="LayoutId1" type="" nRow="" nCol="" colWidth="" 
             rowHeight="" hpad="" vpad="" stripPos="" nStrip="" 
             border="hide" borderStyle="[8px]" header="hide" 
             headerStyle="basic" active="true">
     </Layout>
     
     <Window id="Win1" content="">
        <ConnectionContent MediaStreamIOPortTypeTitle="" 
                           MediaStreamIOPortElementID="" 
                           sessionId="" connId="" vres="" 
                           hres="" srcKbmCtrl="">
        </ConnectionContent>
        <ThumbnailContent MediaStreamIOPortTypeTitle="" 
                          MediaStreamIOPortElementID="" 
                          imageURL="" refreshInterval="">
        </ThumbnailContent>
        <Properties zIndex="100" border="" vpos="0" hpos="0"
                    vres="100%" hres="100%" aspect="" 
                    transparency="0" layoutId="LayoutId1" 
                    layoutPos="" visibility="true" 
                    maximize="false" fps="15" 
                    scale="fitWindow" mute="false" 
                    volume="50%" remoteKbmCtrl="false" 
                    scrollHPos="0" scrollVPos="0">
        </Properties>  
      </Window>
  </Canvas>

		   ]]>
	  </programlisting>
	</section>	
	<section>
		<title>Remote Operated Client DisplayStatus </title>		
		<programlisting>
		  <![CDATA[

  <Display configurable="" hres="AUTO" vres="AUTO">
      <Panel id="" enable="" content="">
         <Geometry zIndex="" border="" vpos="0" 
               hpos="0" vres="100%" hres="100%" 
               aspect="" transparency="">
         </Geometry>
      </Panel>
  </Display>

  <Canvas id="" hres="1280" vres="1024">
     <Background enable="" zIndex="" content="">
        <ImageContent imageURL="" color=""></ImageContent>
        <SessionContent enableConnPanel="" enableBookmarkPanel="" 
                        enableCtrlPanel="" enableHeaderPanel=""
                        enablePlayerPanel="" sessionId="">
         </SessionContent>
     </Background>

     <Layout id="LayoutId1" type="" nRow="" nCol="" colWidth="" 
             rowHeight="" hpad="" vpad="" stripPos="" nStrip="" 
             border="hide" borderStyle="[8px]" header="hide" 
             headerStyle="basic" active="true">
     </Layout>
     
     <Window id="Win1" content="">
        <ConnectionContent MediaStreamIOPortTypeTitle="" 
                           MediaStreamIOPortElementID="" 
                           sessionId="" connId="" vres="" 
                           hres="" srcKbmCtrl="">
        </ConnectionContent>
        <ThumbnailContent MediaStreamIOPortTypeTitle="" 
                          MediaStreamIOPortElementID="" 
                          imageURL="" refreshInterval="">
        </ThumbnailContent>
        <Properties zIndex="100" border="" vpos="0" hpos="0"
                    vres="100%" hres="100%" aspect="" 
                    transparency="0" layoutId="LayoutId1" 
                    layoutPos="" visibility="true" 
                    maximize="false" fps="15" 
                    scale="fitWindow" mute="false" 
                    volume="50%" remoteKbmCtrl="false" 
                    scrollHPos="0" scrollVPos="0">
        </Properties>  
      </Window>
  </Canvas>

		   ]]>
	  </programlisting>
	</section>
	
    </appendix>
   <appendix>
    <title>REST API - Basic Tutorial</title>
    <para>
      The following tutorial walks you through a basic set of calls used in the API and how to execute them.
    </para>
    
    <section>
     <title>REST Tester</title>
     <para>
       Prerequisites for the tutorial:
      <simplelist>
      	<member>
      	-	Login to admin UI
      	</member>
      	<member>
      	-	Add user: user1
      	</member>
      	<member>
      	-	Add device(webclient): webclient
      	</member>
      </simplelist>
      </para>
      <para>
	  <emphasis role="strong">
       We will use the BarcoRESTdiagnostics tool for demonstrating the use of the API. 
	   </emphasis>
     </para>
     <para>
	 <emphasis role="strong">
       BarcoRESTdiagnostics:<![CDATA[ http://<msip>/clients/gui/player/resttester/BarcoRESTdiagnostics.html ]]>
	   </emphasis>
     </para>
     <para> 
       <emphasis role="strong">Important fields in the tester are: </emphasis>
       
       <simplelist>
       	  <member>
            - IPaddress: Enter your Management Server IP Address
          </member>
          <member>
            - User:  Enter the username for an existing user.
          </member>
          <member>
            - Password: Enter password for above user
          </member>
          <member>
            - Resource: Resource is the web client resource existing in the MS
          </member>
          <member>
            - Service version: Service version is the current service version of your MS.
          </member>
          <member>
            - Login: Link to login the user with above details
          </member>
          <member>
            - Logout: Link for user logout
          </member>
          <member>
            - URL: Enter REST URL here <![CDATA[ http:<msip>/controller/<resource_path>?<query_params> ]]>
          </member>
          <member>
            - Accept Header: The format in which you expect your response from server  (e.g.  application/json)
          </member>
          <member>
            - HTTP Method: Allows to choose the method type for your REST request.
          </member>
          <member>
            - SUBMIT: Used to submit your REST requests
          </member>
          <member>
            - Request: Hidden box, which is visible when request method is POST. Add your request body here for POST/PUT requests.
          </member>
          <member>
            - Response: Displays the response for your REST request.
          </member>
          <member>
           - Notifications: Displays the notifications being sent by server.
          </member>
        </simplelist>
       
     </para>
    </section>
    
    <section>
        <title>Service Login</title>
        <para>
          Open BarcoRESTdiagnostics.html in a browser window.
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the Service Login request.
        Click on the 'Login' link after filling in the below details.
          <simplelist>
            <member>- IPaddress: MS ip address</member>
            <member>- User:  Enter the username for an existing user.</member>
          	<member>- Password: Enter password for above user</member>
          	<member>- Resource: Resource is the web client resource existing in the MS</member>
          	<member>- Service version: Service version is the current service version of your MS.</member>
          </simplelist>
        </para>
        <para>Service Login Response is available in the Response text field and a Long Polling channel is established for the User.
       <emphasis role="strong"> To see more details about how a Long polling notification channel is setup, please refer to the ServiceLogin API call in this document.</emphasis></para>
      </section>
    
    <section>
        <title>GetPort - Sources</title>
        <para>
          Fetching the list of source ports from the system.
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the GetPort request
          <simplelist>
            <member>- URL: http://10.51.51.72/controller/Resource/Port?type=SrcPort</member>
            <member>- METHOD: HTTP GET</member>
            <member>- Accept Header: application/xml </member>
          </simplelist>
        </para>
        <para><emphasis role="strong"> Upon hitting SUBMIT, a response will appear in the Response text field. From the response, please note down title for one of the source ports. For e.g. "tx1"</emphasis></para>
      </section>
      
      <section>
        <title>GetPort - Destination</title>
        <para>
          Fetching the list of destination ports from the system.
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the GetPort request
          <simplelist>
            <member>- URL: http://10.51.51.72/controller/Resource/Port?type=DstPort</member>
            <member>- METHOD: HTTP GET</member>
            <member>- Accept Header: application/xml </member>
          </simplelist>
        </para>
        <para> <emphasis role="strong">  Upon hitting SUBMIT, a response will appear in the Response text field. From the response, please note down title for one of the destination ports. For e.g. "rx1"</emphasis></para>
      </section>
      
      <section>
        <title>View</title>
        <para>
          View a source stream on the destination.
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the View request.
        Enter the request body in the Request field which appears on selection of the HTTP POST method from drop down. Hit SUBMIT to send the request.
          <simplelist>
            <member>- URL: http://10.51.51.72/controller/Session</member>
            <member>- METHOD: HTTP POST</member>
            <member>- Accept Header: application/xml </member>
            <member>- REQUEST BODY: </member>
            <member><![CDATA[ <View>
      <DstPort portTitle="rx1" />
      <SrcPort portTitle="tx1" />
   </View> ]]> 
			</member>
          </simplelist>
        </para>
        <para><emphasis role="strong"> From the response, please note down session ID. Should be found as an attribute "@id" at the bottom of Session response</emphasis></para>
      </section>
      
      <section>
        <title>StopSession</title>
        <para>
          Stop the session started by the View call
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the Stop Session request.
        Enter the request body in the Request field which appears on selection of the HTTP POST method from drop down. Hit SUBMIT to send the request.
          <simplelist>
            <member>- URL: http://10.51.51.72/controller/Session</member>
            <member>- METHOD: HTTP POST</member>
            <member>- Accept Header: application/xml </member>
            <member>- REQUEST BODY: </member>
            <member><![CDATA[ <StopSession sessionId="" />]]> 
			</member>
          </simplelist>
        </para>
        <para><emphasis role="strong">  Please use the sessionId from the View response</emphasis></para>
      </section>
      
      <section>
        <title>Record</title>
        <para>
          Start a recording session
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the Record request
        Enter the request body in the Request field which appears on selection of the HTTP POST method from drop down. Hit SUBMIT to send the request.
          <simplelist>
            <member>- URL: http://10.51.51.72/controller/Session</member>
            <member>- METHOD: HTTP POST</member>
            <member>- Accept Header: application/xml </member>
            <member>- REQUEST BODY: </member>
            <member><![CDATA[ <Record>
      <DstFile fileTitle="tx1record" />
      <SrcPort portTitle="tx1" />
   </Record>]]> 
			</member>
          </simplelist>
        </para>
        <para><emphasis role="strong"> Please use the sessionId from the Record response and run the StopSession(see above) to stop the recording</emphasis></para>
      </section>
      
      <section>
        <title>GetFile - Recordings</title>
        <para>
          Fetch the recording files
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the GetFile request. Hit SUBMIT to send the request.
          <simplelist>
            <member>- URL: http://10.51.51.72/controller/Resource/File</member>
            <member>- METHOD: HTTP GET</member>
            <member>- Accept Header: application/xml </member>
          </simplelist>
        </para>
        <para> <emphasis role="strong"> Please note down the fileNID for one of the files from the GetFile response. e.g. "default.mediastreamfileresourcelist.msfrl_eb2bbd33-285b-4c1a-babd-20e7bb19df07"</emphasis></para>
      </section>
      
       <section>
        <title>Playback</title>
        <para>
          Start a playback session
        </para>
        <para>
        Following are the details to be filled out in the REST Tester page for executing the Playback request
        Enter the request body in the Request field which appears on selection of the HTTP POST method from drop down. Hit SUBMIT to send the request.
          <simplelist>
            <member>- URL: http://10.51.51.72/controller/Session</member>
            <member>- METHOD: HTTP POST</member>
            <member>- Accept Header: application/xml </member>
            <member>- REQUEST BODY: </member>
            <member><![CDATA[ 
            		<Playback>
      <DstPort portTitle="rx1" />
      <SrcFile fileNID="default.mediastreamfileresourcelist.msfrl_eb2bbd33-285b-4c1a-babd-20e7bb19df07" />
   </Playback>]]> 
			</member>
          </simplelist>
        </para>
        <para><emphasis role="strong"> Please use the sessionId from the Playback response and run the StopSession(see above) to stop the recording </emphasis></para>
      </section>
    	  <section>
        <title>View live source using mediaURL</title>
        <para>
          View Live source From SDK Player
        </para>
        <para>
		Following actions requires REST Tester and sdkPlayer <emphasis role="strong"> (BarcoSDK/player/src/barco/BarcoPlayer.html)</emphasis>. The URL for the sdkplayer will be <emphasis role="strong"> <![CDATA[http://<webserver_ip>/<basePath>/BarcoSDK/player/src/barco/BarcoPlayer.html]]> </emphasis>

          <simplelist>
           <member><![CDATA[ 1. Enter http://<MSIP>/controller/Resource/Port?type=SrcPort&selectFormat=BASICURL&dstPortTitle=web-client_barco in the URL field.]]></member>
            <member>2. destPortTitle should be the resource_username using in above field 2 &amp; 4 e.g. web-client_barco</member>
            <member>3. Select the HTTP Method as GET</member>
            <member>4. Hit SUBMIT.</member>
			<member>5. Should see a list of ports that user is allowed to see in the Response field.</member>
			<member><emphasis role="strong"> 6. Copy this mediaURL from response and paste in sample sdk player test box</emphasis></member>
			<member><emphasis role="strong"> 7. Keep the BarcoRESTdiagnostics loggedin for LIVE to work.</emphasis></member><br/>
			<member>8. Sample Response:</member><br/>
            <member><![CDATA[
	<Resource total="1" from="1">
		<Port NID="default.mediastreamsrcportresourcelist.mssprl_c3dfb990-6b80-4408-8047-e54f05360496" streamType="RTP" portType="StreamSrc" streamingURL="http://10.51.51.18/mediaroom/index.m3u8?dirID=/data1&amp;mediaID=46bfae8c-53aa-409c-8a7a-80cf7cc0099e&amp;apiKey=6319348664898058382&amp;timestamp=INFINITE&amp;signature=64eebc2385c5d8849fbf3b526577a730" hls="true" portId="1" presence="unavailable" mediaURL="http://10.51.51.65/clients/player?requestName=View&amp;SrcPort.portNID=default.mediastreamsrcportresourcelist.mssprl_aeba7237-d972-4372-a8f9-237ff55923a6&amp;userJID=mediaserver-localhost/mediaserver_mediaserver&amp;timestamp=1397687388320&amp;apiKey=-7192030090146228263&amp;signature=63e3e122c34604f412b737c521c8edb7&amp;DstPort.portNID=default.mediastreamdstportresourcelist.msdprl_14eb15a7-facf-42b9-aec5-46d9fc1898b6" state="Unmanaged" title="axis">
			<Groups>
				<Tag Name="Location" Value="Sunnyvale" />
				<Tag Name="Department" Value="Engineering" />
			</Groups>
			<Permissions add="false" modify="false" delete="false" streamto="false" viewfrom="true" read="true" />
		</Port>
	</Resource>
]]> 
			</member>
          </simplelist>
        </para>
        
      </section>
	  
	    <section>
        <title>Playback recorded file using mediaURL</title>
        <para>
          Playback recorded file From SDK Player
        </para>
        <para>
		Following actions requires REST Tester and sdkPlayer <emphasis role="strong"> (BarcoSDK/player/src/barco/BarcoPlayer.html)</emphasis>. The URL for the sdkplayer will be <emphasis role="strong"> <![CDATA[http://<webserver_ip>/<basePath>/BarcoSDK/player/src/barco/BarcoPlayer.html]]> </emphasis>

          <simplelist>
           <member><![CDATA[ 1. Enter http://<MSIP>/controller/Resource/File?selectFormat=BASICURL&dstPortTitle=web-client_barco in the URL field.]]></member>
		   
            <member>2. destPortTitle should be the resource_username using in above field 2 &amp; 4 e.g. web-client_barco</member>
			
            <member>3. Select the HTTP Method as GET</member>
			
            <member>4. Hit SUBMIT.</member>
			
			<member>5. Should see a list of files that user is allowed to see in the Response field.</member>
			
			<member><emphasis role="strong"> 6. Copy this mediaURL from response and paste in sample sdk player test box</emphasis></member>
			
			<member><emphasis role="strong"> 7. Keep the BarcoRESTdiagnostics loggedin for LIVE to work.</emphasis></member><br/>
			
			<member>8. Sample Response:</member><br/>
			
            <member><![CDATA[ 
			<Resource total="1" from="1">
		<File NID="default.mediastreamfileresourcelist.msfrl_b42ffc9b-5660-4b08-a4fe-ecebba1108b3" streamingURL="http://10.51.51.18/mediaroom/index.m3u8?dirID=/data1&amp;apiKey=6319348664898058382&amp;mediaID=be8de800-2074-4036-81c9-b9d877f95f92&amp;timestamp=INFINITE&amp;signature=64eebc2385c5d8849fbf3b526577a730" clipID="fea9d85b-6ce2-474a-a321-8abe789e650e" mediaID="be8de800-2074-4036-81c9-b9d877f95f92" size="181621315" readOnly="false" bypassAutoStorageRules="false" streamType="RTP" thumbnailURL="http://10.51.51.18/mediaportal/thumbnail?dirID=/data1&amp;timestamp=1392986268212&amp;apiKey=6319348664898058382&amp;signature=36d263de5f892444f7f4b7e1f0af0996&amp;mediaID=be8de800-2074-4036-81c9-b9d877f95f92" hls="true" dateCreated="1392894023752" fileType="MediaClip" dateModified="1392894023752" playlength="357327" mediaURL="http://10.51.51.18/clients/player?requestName=Playback&amp;SrcFile.fileNID=default.mediastreamfileresourcelist.msfrl_b42ffc9b-5660-4b08-a4fe-ecebba1108b3&amp;userJID=testuser-localhost/wc1_testuser&amp;timestamp=1392986268212&amp;apiKey=-6388481005313874188&amp;signature=b5839419473cf68df7f857ca651a30d8" title="axis" state="Ready" sessionConfigNID="" mediaGroupID="">
			<Permissions playback="true" export="false" modify="false" delete="false" read="true" />
			<Groups>
				<Tag Name="Location" Value="Sunnyvale" />
			</Groups>
			<MetaData>__EMPTY_STRING_</MetaData>
			<Download>
				<Media format="" state="NotReady" stale="false" />
			</Download>
		</File>
	</Resource>

]]> 
			</member>
          </simplelist>
        </para>
        
      </section>
     <section>
        <title>Download Media</title>
        <para>
          Prepare File for download 
        </para>
        <para>
		We first subscribe the user for notifications and then prepare file for download. 
          <simplelist>
           <member><![CDATA[ 1. Enter http://<MSIP>/controller/Resource/File?selectFormat=EXTENDEDURL&subscriptionID=1234 in the URL field.]]></member>
		   
            <member>2. Select the HTTP Method as GET</member>
			
            <member>3. Hit SUBMIT.</member>
			
			<member>4. Should see a list of files that user is allowed to see in the Response field.</member>
			
			<member><![CDATA[ 5. Enter http://<MSIP>/controller/Resource/File/PrepareForDownload in the URL field.]]></member>
			
            <member>6. Select the HTTP Method as POST</member>
			
			<member>7.	In the Request text area, add your request body. E.g.<![CDATA[ 
<PrepareFileForDownload byNID="default.mediastreamfileresourcelist.msfrl_959ecf85-022b-4146-8641-6ef1ad64f0f2"
format="Standard"
/>
]]>          
</member>       

			
            <member>byNID is the NID for the RTP file you want to download <emphasis role="strong"> (get this from the GetFile Response). check the permissions element in the getFile response for verifying the permissions on the file. Should have export permissions for the file to allow download.</emphasis>
			e.g.
<![CDATA[
 <Permissions delete="true" export="true" modify="false"
delete="false" read="true" />
]]>	

format is Proprietary (Barco Native format) or Standard (Zip with mp4)		
 </member>
		<member>8. Hit SUBMIT.</member>
		<member>9. Will get a downloadURL in file response in the Notifications field, once the file is ready for download.</member>
		<member><emphasis role="strong">10. Use any browser to download media using downloadURL </emphasis> </member>
          </simplelist>
        </para>
        
      </section>
      <section>
        <title>Create Media using Cutpoints</title>
        <para>
          Create Media using Cutpoints 
        </para>
        <para>
		 
          <simplelist>
           <member><![CDATA[ 1. Enter http://<MSIP>/controller/Resource/File/CreateMediaFromCutList in the URL field.]]></member>
		   
            <member>2. Select the HTTP Method as POST</member>
			<member>3.	In the Request text area, add your request body. E.g.<![CDATA[ 
<CreateMediaFromCutList byNID="default.mediastreamfileresourcelist.msfrl_959ecf85-022b-4146-8641-6ef1ad64f0f2"
cutList="0:30000,40000:60000,70000:120000" title="newFileTitle">
<MetaData>
<Tag Name="">
<content>Value</content>
</Tag>
</MetaData>
<Description />
</CreateMediaFromCutList>
]]>     
</member>

           <member>byNID is the NID for the RTP file you want to download <emphasis role="strong">(get this from the GetFile Response)</emphasis>.
		   cutList is a comma separated list of start:end offsets in the media in milliseconds. E.g. 0:30000 is 30 seconds of media from start offset.
Title is the name for the new media being created.
 </member>
			
            <member>4. Hit SUBMIT.</member>
			
			<member><emphasis role="strong"> 5. Will get a 201 response for request accepted.</emphasis></member>

			<member>8. Will get a file notification in the Notifications field, when the created media is ready</member>
		
          </simplelist>
        </para>
        
      </section> 
    
    <section>
     <title>API</title>
     <para>
       Following is a list of pointers to the API call documentation over REST. Note that the request bodies mentioned as sample are not minimal.
       Some of the elements/attributes could be optional. 
     </para>
     <table border="1">
			<tr>
				<td>ServiceLogin</td>
				<td>Refer Example 1.1 Service Login Request</td>
			</tr>
			<tr>
				<td>GetPort - Sources</td>
				<td>Refer Example 2.13 Get Port Request</td>
			</tr>
			<tr>
				<td>GetPort - Destination</td>
				<td>Refer Example 2.13 Get Port Request</td>
			</tr>
			<tr>
				<td>View</td>
				<td>Refer Example 4.27 Basic View Request by Title</td>
			</tr>
			<tr>
				<td>StopSession</td>
				<td>Refer Example 4.25 Stop Session Request</td>
			</tr>
			<tr>
				<td>Record</td>
				<td>Refer Example 4.50 Basic Record Request</td>
			</tr>
			<tr>
				<td>GetFile - MediaClips</td>
				<td>Refer Example 2.49 Get File Request</td>
			</tr>
			<tr>
				<td>Playback</td>
				<td>Refer Example 4.40 Basic Playback Request</td>
			</tr>
			
		</table>
		
		<para>
      <emphasis role="strong"> NOTE: </emphasis> BarcoRESTdiagnotics tool is qualified for Google Chrome and IE-9. When loading the page in IE-9 please ensure you are NOT running the page in compatibility view mode.
			The BarcoRESTdiagnostics.html is a pure JavaScript implementation using XMLHttpRequests and does not use a JQuery or any other 3rd party library.
			To debug or view the communication logs use the browsers development tools.

     </para>
    </section>	
	 <section>
	<title>Release Notes</title>
	 <section>
		<title>Summary of changes from 4.0 to 4.1</title>
		<para>Added Requests
		<programlisting>
		<remark>Prepare File: prepare a file to download for Proprietary/Standard/Both formats</remark>
		<remark>Create Media From Cutlist: Creates Media from existing media using start and end offsets within it</remark>
		<remark>Trim File with Cutlist: Trim out sections of an existing media file using start and end offsets within it</remark>		
		<remark>Clear Download Cache: Remove cache memory , which is occupied while downloading media.</remark>
		<remark>Download Media: Download the provided media file to the media store, you can use the Get File request with format as EXTENDEDURL</remark>
		<remark>Inject Media: Uploads the provided media file to the media store</remark>
		</programlisting>
		</para>
		<para>Updated Requests
		<programlisting>
		<remark>GetFile:Added new selectFormat BASICCONNECTIONINFO which will return connection information and url information</remark>	
		</programlisting>
		<programlisting>
		<remark>GetDir: Added new selectFormat UPLOADURL which will return upload URL. Which is used to post media (mp4,mkd,images) to dms . SNAPSHOTURL is now deprecated</remark>	
		</programlisting>
		</para>		
		<para>Added Notifications
		<programlisting>
		<remark>FileUpdate: Added file Add/Update/Delete notifications</remark>		
		<remark>FileConnectionUpdate: Added connection Add/Delete notification</remark>
		<remark>FileConnectionStateUpdate: Added file connection state update notification</remark>
		</programlisting>
		</para>
	</section>
	<section>
		<title>Summary of changes from 4.1 to 4.2</title>
		<para>Added Requests
		<programlisting>
		<remark>Get DisplayProfile: The list of DisplayProfile objects that the Client has access to.</remark>		
		</programlisting>
		</para>
		<para>Updated Requests
		<programlisting>
		<remark>GetFile:Added new query parameter whereDownloadState</remark>	
		<remark>GetDir: Added new query parameter dstPortTitle</remark>
		<remark>DeleteFile: Added new query parameter moveToRecycleBin</remark>
		<remark>GetDevice: Updated to allow filter for whereType="Proxy-Device/WebClient-Device"</remark>
				</programlisting>
		<programlisting>
		<remark>Updated Accept header to "application/xml" for Session and Bookmark API's (StartSession, StopSession, View, Playback, Play, ResumeRecord, SwitchSrc, PauseRecord, Pause, SkipBack, SkipFwd, Catchup, Invite, Join, Kick, AddBookmark, DeleteBookmark, NewBookmark, UpdateBookmark)</remark>
				</programlisting>
		<programlisting>
		<remark>Create Media From Cutlist: Cutlist values are validated against certain rules in the backend and will be rejected as invalid if not in proper order</remark>
				</programlisting>
		<programlisting>
		<remark>Inject Media: Added support to enable HLS streaming</remark>
		<remark>Play: Slowmotion is not supported</remark>
		</programlisting>
		</para>				
	</section>
	</section>
 </appendix>
</book>
	