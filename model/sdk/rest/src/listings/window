{
  "apiVersion": null,
  "swaggerVersion": "1.2",
  "basePath": "http://{MSIP}/controller/Resource",
  "resourcePath": "/Port",
  "apis": [
    {
      "path": "/Port",
      "operations": [
	  {
          "method": "GET",
          "summary": "Gets the display configuration for given port",
          "notes": "Gets the display configuration for given port",
          "responseClass": "PortDisplayConfig",
          "nickname": "getPortDisplayConfig",
          "produces": [
            "application/vnd.barco.nimbus.Port-DisplayConfig+json",
                   "application/vnd.barco.nimbus.Port-DisplayConfig+xml"
          ],
          "parameters": [
          
			{
              "name": "MSIP",
              "description": "MS IP",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
           {
              "name": "whereNID",
              "description": "Filter based on port nid",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "whereTextSubStr",
              "description": "Filter based on substring.this search the substring in title,discription,metadata.",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
			{
              "name": "subscriptionID",
              "description": "Filter based on subcription id",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            }
           
          ],
          "responseMessages": [
             {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "message": "Internal Server Error"
            }
          ],
          "deprecated": "false"
        },
		{
          "method": "GET",
          "summary": "Gets the display Status for given port",
          "notes": "Gets the display Status for given port",
          "responseClass": "PortDisplayStatus",
          "nickname": "getPortDisplayStatus",
          "produces": [
            "application/vnd.barco.nimbus.Port-DisplayStatus+json",
"application/vnd.barco.nimbus.Port-DisplayStatus+xml"
          ],
          "parameters": [
          
			{
              "name": "MSIP",
              "description": "MS IP",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
           {
              "name": "whereNID",
              "description": "Filter based on port nid",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "whereTextSubStr",
              "description": "Filter based on substring",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
			{
              "name": "subscriptionID",
              "description": "Filter based on subcription id",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            }
           
          ],
          "responseMessages": [
             {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "message": "Internal Server Error"
            }
          ],
          "deprecated": "false"
        },
		{
          "method": "POST",
          "summary": "updates the given display configuration",
          "notes": "Suggest get config from the database update the required parameters and send the set port display configuration request",
          "responseClass": "SetPortDisplayConfig",
          "nickname": "SetPortDisplayConfig",
          "produces": [
            "application/vnd.barco.nimbus.Port-DisplayConfig+json",
				  "application/vnd.barco.nimbus.Port-DisplayConfig+xml"
          ],
		  "consumes": [
            "application/json",
            "application/xml"
          ],
          "parameters": [
		   
			{
              "name": "MSIP",
              "description": "MS IP",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
		  {
              "name": "NID",
              "description": "port nid",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
           {
              "name": "title",
              "description": "port title",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },           	
            {
              "name": "body",
              "description": "Update PortDisplayConfig in database",
              "required": true,
              "allowMultiple": false,
              "dataType": "SetPortDisplayConfig",
              "paramType": "body"
            }           
          ],
          "responseMessages": [
             {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "message": "Internal Server Error"
            }
          ],
          "deprecated": "false"
        },
		{
          "method": "POST",
          "summary": "Set Port Window Properties",
          "notes": "Sets the unmanned client window Properties. Note: Send all properties or one or combination",
          "responseClass": "PortWindowProperties",
          "nickname": "SetPortWindowProperties",
          "produces": [
            "application/vnd.barco.nimbus.Port-WindowProperties+json",
				  "application/vnd.barco.nimbus.Port-WindowProperties+xml"
          ],
		  "consumes": [
            "application/json",
            "application/xml"
          ],
          "parameters": [
		  
			{
              "name": "MSIP",
              "description": "MS IP",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
		  {
              "name": "NID",
              "description": "port nid",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
                     	
            {
              "name": "body",
              "description": "Update Port Window Properties",
              "required": true,
              "allowMultiple": false,
              "dataType": "PortWindowProperties",
              "paramType": "body"
            }           
          ],
          "responseMessages": [
             {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "message": "Internal Server Error"
            }
          ],
          "deprecated": "false"
        }
        
      ]
    },{
	"path": "/DisplayProfile",
      "operations": [ 
	  {
          "method": "GET",
          "summary": "This is the list of DisplayProfile objects that the Client has access to.",
          "notes": "This is the list of DisplayProfile objects that the Client has access to.",
          "responseClass": "DisplayProfile",
          "nickname": "getDisplayProfile",
          "produces": [
            "application/vnd.barco.nimbus.DisplayProfile+json",
                   "application/vnd.barco.nimbus.DisplayProfile+xml"
          ],
          "parameters": [
          
			{
              "name": "MSIP",
              "description": "MS IP",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
           {
              "name": "whereNID",
              "description": "Filter based on DisplayProfile nid",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
			{
              "name": "selectFormat",
              "description": "Filter by response formats.(Optional. Default=BASIC)",
              "required": false,
              "allowMultiple": true,
              "dataType": "string",
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "BASIC",
                  "EXTENDED"	  
                ]
              },
              "paramType": "query"
            },
            {
              "name": "whereTextSubStr",
              "description": "Filter based on substring.this search the substring in title",
              "required": false,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "query"
            },
			{
              "name": "sortBy",
              "description": "sort by title",
              "required": false,
              "allowMultiple": true,
              "dataType": "string",
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "title"
                ]
              },
              "paramType": "query"
            },
			{
              "name": "startFrom",
              "description": "get the list starting form startFrom index",
              "required": false,
              "allowMultiple": false,
              "dataType": "integer",
              "paramType": "query"
            },
{
              "name": "countToFetch",
              "description": "number of displayProfiles to be fetched",
              "required": false,
              "allowMultiple": false,
              "dataType": "integer",
              "paramType": "query"
            }	
           
          ],
          "responseMessages": [
             {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "message": "Internal Server Error"
            }
          ],
          "deprecated": "false"
        }
	  ] 
	}
  ],
  "models": {
    "Tag": {
      "id": "Tag",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "String"
        }
      }
    },
    "Port": {
      "id": "Port",
      "description": "A basic port object response",
      "required": [
        "@NID",
        "Groups",
        "@streamType",
        "@portType",
        "@portId",
        "@presence",
        "@state",
        "@title",
        "Permissions"
      ],
      "properties": {
        "Groups": {
          "type": "array",
            "items": {
              "$ref": "Tag"
            }
         },
        "@NID": {"type": "string"},
        "@streamType": {"type": "string",
          "description": "type of stream",
          "enum": [
            "V2D",
            "MPEGTS",
            "RTP"
          ]},
        "@portType": {"type": "string", "description": "type of port"},
        "@portId": {"type": "integer"},
        "@presence": {"type": "string", "enum": [
            "available",
            "unavailable"
          ]},
        "@state": {"type": "string", "enum": [
            "Ready",
            "Offline",
            "Busy"
          ]},
        "@title": {"type": "string"},
        "Permissions": {
            "$ref": "Permissions"
        }
      }
    },
    "Permissions": {
      "id": "Permissions",
      "required": [
        "@add",
        "@modify",
        "@delete",
        "@streamto",
        "@viewfrom",
        "@read"
      ],
      "properties": {
        "@add": {
          "type": "boolean"
        },
        "@modify": {
          "type": "boolean"
        },
        "@delete": {
          "type": "boolean"
        },
        "@streamto": {
          "type": "boolean"
        },
        "@viewfrom": {
          "type": "boolean"
        },
        "@read": {
          "type": "boolean"
        }
      }
    },
		"PortInfo": {
      "id": "PortInfo",
      "description": "set PortInfo request",
      "required": [
        "PortInfo"
      ],
      "properties": {
        "PortInfo" : {
          "$ref": "setPortInfoReq"
        }
      }
    },
	"setPortInfoReq": {
      "id": "setPortInfoReq",
      "description": "A basic set port info request",
      "required": [
        "Groups",
        "@title",
        
        "@description"
		
		
      ],
      "properties": {"Groups": {
          "type": "array",
            "items": {
              "$ref": "Tag"
            }
         },
        "@title":{"type": "string"},

        "@description": {"type": "string"}
		
		
		
      }
    },
	"PortObserverInfo": {
      "id": "PortObserverInfo",
      "description": "set PortObserverInfo request",
      "required": [
        "PortObserverInfo"
      ],
      "properties": {
        "PortObserverInfo" : {
          "$ref": "setPortObserverInfoReq"
        }
      }
    },
	"setPortObserverInfoReq": {
      "id": "setPortObserverInfoReq",
      "description": "A basic setPortObserverInfo request",
      "required": [
        "Observer"
      ],
      "properties": {
        "Observer":{"type": "Observer"}
		
      }
    },
	"Observer": {
      "id": "Observer",
      "required": [
        "ResourceNID",
        "UserNID",
        "@xAuth",
        "@monitor"
      ],
      "properties": {
        "ResourceNID": {
          "type": "string"
        },
        "UserNID": {
          "type": "string"
        },
        "@xAuth": {
          "type": "boolean"
        },
        "@monitor": {
          "type": "boolean"
        }
      }
    },
	"PortPVRInfo": {
      "id": "PortPVRInfo",
      "description": "set PortPVRInfo request",
      "required": [
        "@mediaStreamDirResourceNID",
		"@trimLength",
		"@enable"	
      ],
      "properties": {
       "@mediaStreamDirResourceNID": {
          "type": "string"
        },
        "@trimLength": {
          "type": "string"
        },
		"@enable": {
          "type": "boolean"
        }
      }
    },
	"PortStreamURL": {
      "id": "PortStreamURL",
      "description": "set PortStreamURL request",
      "required": [
        "@streamURL"
      ],
      "properties": {
       "@streamURL": {
          "type": "string"
        }
      }
    },
	"SetPortDisplayConfig": {
      "id": "SetPortDisplayConfig",
      "description": "set PortDisplayConfigReq request",
      "required": [
        "PortDisplayConfig"
      ],
      "properties": {
        "PortDisplayConfig" : {
          "$ref": "PortDisplayConfig"
        }
      }
    },
	"PortDisplayConfig": {
      "id": "PortDisplayConfig",
      "description": "A basic setPortDisplayConfig request",
      "required": [
        "Canvas"
      ],
      "properties": {
        "Canvas":{"type": "Canvas"}
		
      }
    },
	"Canvas": {
      "id": "Canvas",
      "description": "Canvas",
      "required": [
        "Background",
		"Window"
			
      ],
      "properties": {
       "Background": {
          "$ref": "Background"
        },
        "Window": {
          "$ref": "Window"
        }
      }
    },
	"Background": {
      "id": "Background",
      "description": "Background",
      "required": [
        "@zIndex",
		"@content",
		"@enable"	
      ],
      "properties": {
       "@zIndex": {
          "type": "string"
        },
        "@content": {
          "type": "string"
        },
		"@enable": {
          "type": "boolean"
        }
      }
    },
	"Window": {
      "id": "Window",
      "description": "Window",
      "required": [
        "@zIndex",
		"@content",
		"@enable",
        "Geometry"		
      ],
      "properties": {
       "@zIndex": {
          "type": "string"
        },
        "@content": {
          "type": "string"
        },
		"@enable": {
          "type": "boolean"
        },
		"Geometry": {
          "$ref": "Geometry"
        }
      }
    },
	"Geometry": {
      "id": "Geometry",
      "description": "Geometry",
      "required": [
        "@hpos",
		"@vpos",
		"@hres",
        "@vres",
        "@aspect",
		"@transparency"
		 ],
      "properties": {
       "@vpos": {
          "type": "string"
        },
        "@hpos": {
          "type": "string"
        },
		"@hres": {
          "type": "string"
        },
		"@vres": {
          "type": "string"
        },
		"@aspect": {
          "type": "string"
        },
		"@transparency": {
          "type": "string"
        }
      }
    },
	"PortWindowProperties": {
      "id": "PortWindowProperties",
      "description": "set PortWindowProperties request",
      "required": [
        "PortWindowProperties"
      ],
      "properties": {
        "PortWindowProperties" : {
          "$ref": "setPortWindowPropertiesReq"
        }
      }
    },
	"setPortWindowPropertiesReq": {
      "id": "setPortWindowPropertiesReq",
      "description": "A basic setPortWindowPropertiesReq request",
      "required": [
	    "@byWindowId",
        "WindowProperties"
      ],
      "properties": {
	   "@byWindowId": {"type": "string"},
        "WindowProperties":{"type": "WindowProperties"}
		
      }
    },
	"WindowProperties": {
      "id": "WindowProperties",
      "required": [
        "@scrollHPos",
        "@scale",
        "@maximize",
"@border",
"@hres",
"@aspect",
"@transparency",
"@scrollVPos",
"@remoteKbmCtrl",
"@vpos",
"@layoutPos",
"@vres",
"@visibility",
"@hpos",
"@fps",
"@mute",
"@volume"

      ],
      "properties": {
        "@scrollHPos": {
          "type": "string"
        },
        "@scale": {
          "type": "string"
        },
        "@maximize": {
          "type": "boolean"
        },
        "@border": {
          "type": "string"
        },
		"@hres": {
          "type": "string"
        },
		"@aspect": {
          "type": "string"
        },
		"@transparency": {
          "type": "string"
        },
		"@remoteKbmCtrl": {
          "type": "boolean"
        },
		"@vpos": {
          "type": "string"
        },
		"@layoutPos": {
          "type": "string"
        },
		"@vres": {
          "type": "string"
        },
		"@visibility": {
          "type": "string"
        },
		"@hpos": {
          "type": "string"
        },
		"@fps": {
          "type": "string"
        },
		"@mute": {
          "type": "boolean"
        },
		"@volume": {
          "type": "string"
        }
      }
    }
  }
}

