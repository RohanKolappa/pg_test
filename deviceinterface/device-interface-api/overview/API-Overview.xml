<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" 
    "C:/docbook/docbook-xml-4.5/docbookx.dtd" [
  <!ENTITY SessionObjectXML SYSTEM "Session.xml">
  <!ENTITY SessionObjectXSD SYSTEM "Session.xsd">
]>
<?xml-stylesheet type='text/xsl' 
    href='http://docbook.sourceforge.net/release/xsl/current/html/docbook.xsl'?>
<book status="draft">
	<bookinfo>
		<title>Barco Device Interface</title>
		<revhistory>
			<revision>
				<revnumber>0.1</revnumber>
				<date>Dec 19 2012</date>
				<revremark>Device Interface API</revremark>
			</revision>
		</revhistory>
	</bookinfo>
	<glossary>
		<glossentry>
			<glossterm>Device Interface</glossterm>
			<glossdef>
				<para>
					This represents the external interface to a device.
				</para>
			</glossdef>
		</glossentry>
		<glossentry>
			<glossterm>Device Interface API</glossterm>
			<glossdef>
				<para>
					The API accepted by the device on its external interface
				</para>
			</glossdef>
		</glossentry>
		<glossentry>
			<glossterm>Service</glossterm>
			<glossdef>
				<para>
					The device provides the following services : DeviceAdminAgent, Media, Layout, MediaStoreAgent
				</para>
			</glossdef>
		</glossentry>
		<glossentry>
			<glossterm>Handler</glossterm>
			<glossdef>
				<para>
					The code that handles a specific API message for a given service
				</para>
			</glossdef>
		</glossentry>
		<glossentry>
			<glossterm>Agent</glossterm>
			<glossdef>
				<para>
					The Handler invokes methods on the Agent for the accepted by the device on its external interface
				</para>
			</glossdef>
		</glossentry>
		<glossentry>
			<glossterm>Engine</glossterm>
			<glossdef>
				<para>
					The Agent invokes methods on the Engine that implement the services on the device
				</para>
			</glossdef>
		</glossentry>
	</glossary>

	<preface>
		<title>Introduction</title>
		<para>
			This document contains the description of the generic device interface API.
		</para>
	</preface>

	<chapter>
		<title>Service Overview</title>
		<para>
			A service is a software/firmware/hardware capability of a device that is made available to a user
			The scope of this document is limited to 4 types of services within namely device administration, media, layout and media storage services
			DeviceAdmin - Device management including configuration,
			monitoring, diagnostics
			Media - Sending and receiving media streams
			Layout - Rendering media in specific layouts
			MediaStore - Managing the storage of recordings and file systems
		</para>
		<section>
			<title>Version</title>
			<para>
				<simplelist>
					<member>Document Version = 0.0.1</member>
					<member>Service Version = x.x.x</member>
					<member>Software Version = 4.0.x.x</member>
				</simplelist>
			</para>
		</section>
		<section>
			<title>Device Overview</title>
			<para>
				<simplelist>
				<member>The Device is capable of providing services</member>
				<member>These services are available thru an API</member>
				<member>The API is handled by code modules called "handlers" which are organized on the same lines as the service</member>
				<member>The handlers invoke methods on "agents" which are organized on the same lines as the service</member>
				<member>The agents have direct access to the software/firmware services which are called Engines</member>
				<member>The message used to access	a service is called an AgentMessage</member>
				In general the handler for a service will invoke methods on agents for the same service
				However there may be cases where the handlers can invoke methods on agents that are in a different service
				This chapter provides an overview of the AgentMessage used to invoke the API
				</simplelist>
			</para>
		</section>
	</chapter>
	<chapter>
		<title>Agent Message Overview</title>
		<para>
			The messages have been described here are as extensions of standard "XMPP Message" packets.
			However the AgentMessage itself can be sent over HTTP or any other messaging bus
		</para>
		<simplelist>
			<member>All agent message payloads will use the namespace "com.barco.agentmessage"</member>
		</simplelist>
		<section>
			<title>Generic Agent Message API</title>
			<para>
				The messaging between the agentts is realized as a set of XML messages over an XMPP message bus.
				These messages constitute the Barco Device API.
				Handlers will need to implement the relevant sub-set of this API based on their intended MediaRoom Role.
			</para>
			<example>
				<title>Message</title>
				<programlisting>
          <![CDATA[
  <message id="12rLk-221" to="tx1@localhost/tx1" 
  			from="managementserver@localhost/managementserver">
    <x xmlns='com.barco.agentmessage'>
      <AgentMessage from='xpi@localhost/xpi' to='xpi@localhost/xpi' 
      						type='Request/Response/Event' logLevel='5' version=''>
	     		<!-- Message Data goes here --> 
     </AgentMessage>
    <x>
  </message>
        
]]>
        </programlisting>
			</example>
		</section>
		<section>
			<title>Generic Agent Message Data For Request Type Agent Messages</title>
			<example>
				<title>Request</title>
				<programlisting>
          <![CDATA[       
  <Request>
    <Header serviceName='Media' type='PUT' requestName='Content' 
    					userJID='user@localhost/pc' requestNID='1234'>
       <ClientData>cd123</ClientData>
       <ClientCallback></ClientCallback>
    </Header>
    <Data>
       <!-- Request data goes here --> 
       <PUTContentRequestData>
               <!-- PUTContentRequestData payload goes here -->
       </PUTContentRequestData>
    </Data>
  </Request>
]]>
        </programlisting>
			</example>
			<example>
				<title>Request(RPC)</title>
				<programlisting>
          <![CDATA[       
  <Request>
    <Header serviceName='DeviceAdmin' type='RPC' requestName='Upgrade' 
    						userJID='user@localhost/pc' requestNID='1234'>
       <ClientData>cd123</ClientData>
       <ClientCallback></ClientCallback>
    </Header>
    <Data>
       <!-- Request data goes here --> 
       <RPCUpgradeRequestData>
               <!-- RPCUpgradeRequestData payload goes here -->
       </RPCUpgradeRequestData>
    </Data>
  </Request>
]]>
        </programlisting>
			</example>
			<example>
				<title>Request(without Type)</title>
				<programlisting>
          <![CDATA[       
  <Request>
    <Header serviceName='Layout' type='' requestName='SetupRequest' 
    						userJID='user@localhost/pc' requestNID='1234'>
       <ClientData>cd123</ClientData>
       <ClientCallback></ClientCallback>
    </Header>
    <Data>
       <!-- Request data goes here --> 
       <SetupRequestData>
               <!-- SetupRequestData payload goes here -->
       </SetupRequestData>
    </Data>
  </Request>
]]>
        </programlisting>
			</example>
			<para>				
			<simplelist>
				<member>serviceName - The service being requested i.e. DeviceAdmin, Media, Layout, MediaStore</member>
				<member>type - The type of request to be handled, GET/PUT/DELETE/RPC.</member>
				<member>requestName - The request within the service points to the resource or remote procedure</member>
				<member>XYZRequestData - The type is prefixed with the requestName to generate the name of the requestdata element</member>
				<member>userJID - The original user making the request(could be different than the fromJID</member>
				<member>requestNID - unique ID for the request</member>
				<member>state - Status of the request, 0 is Error and 200 is OK</member>
				<member>ClientData - data provided by the requestor which needs to be returned in the response as is</member>
				<member>CallbackData - data provided by the requestor which needs to be returned in the response as is</member>
			</simplelist>
			</para>
		</section>
		<section>
			<title>Generic Agent Message Data For Response Type Agent Messages</title>
			<example>
				<title>Response</title>
				<programlisting>
          <![CDATA[
  <Response>
    <Header serviceName='Layout' type='' requestName='SetupRequest' 
    					userJID='user@localhost/pc' requestNID='1234' state='200'>
		<ClientData>cd123</ClientData>
		<ClientCallback></ClientCallback>
    </Header>
    <Data>
       <!-- Request data goes here --> 
       <SetupResponseData>
               <!-- SetupResponseData payload goes here -->
       </SetupResponseData>
    </Data>
  </Response>
]]>
        </programlisting>
			</example>
			<para>
				The serviceName, requestName, userJID, requestNID, ClientData are same as those passed in the request
				The ResponseData may be replaced by an error element in case there is an error
			</para>
			<example>
				<title>Response</title>
				<programlisting>
          <![CDATA[
  <Response>
    <Header serviceName='Layout' type='' requestName='SetupRequest' 
    					userJID='user@localhost/pc' requestNID='1234' state='0'>
		<ClientData>cd123</ClientData>
		<ClientCallback></ClientCallback>
    </Header>
    <Data>
    	<Error code="201">
    		<Description>Destination Busy</Description>
    	</Error>
    </Data>
  </Request>
]]>
        </programlisting>
			</example>
		</section>
		<section>
			<title>Generic Agent Message Data For Event Type Agent Messages</title>
			<para>
				An notification can be an info event or an error event. This is indicated by the state element in the payload
			</para>
			<example>
				<title>Event</title>
				<programlisting>
          <![CDATA[
  <Event>
    <Header serviceName='Media' eventName='StreamStatusUpdate' 
    			eventAgentJID='srcrelay1@localhost/srcrelay1' 
    			eventWallclock='1288358866404' eventLevel='INFO'/>
    <Data>
			  <StreamStatusUpdateData>
			    	  <!-- StreamStatusUpdate data payload goes here --> 
			  </StreamStatusUpdateData>
    </Data>
  </Event>
]]>
        </programlisting>
			</example>
			<para>
				<simplelist>
				<member>serviceName - The service within which this event is being generated i.e. DeviceAdmin, Media, Layout, MediaStore</member>
				<member>eventName - The request within the service</member>
				<member>eventAgentJID - The original user making the request(could be different than the fromJID)</member>
				<member>eventWallclock - wallclock at which this event was generated</member>
				<member>eventLevel - 0 is Error and 200 is OK</member>
				</simplelist>
			</para>
		</section>
	</chapter>
	<chapter>
		<title>Generic Agent API Overview</title>
		<para>
			The following set of operations will be typically performed by the devices hosting the agents outside of the agent API
		</para>
		<section>
			<title>Startup Operations</title>
			<section>
				<title>XMPP Login</title>
				<para>
					First the Client does a standard XMPP Login.
					The credentials needed for this need to be provided to the Client
					by the Administrator by some out-of-band means.
				</para>
				<para>
					<simplelist>
						<member>- Username@DomainName.com (Who)</member>
						<member>- Password</member>
						<member>- XMPPResourceID (From Where)</member>
					</simplelist>
				</para>
			</section>
			<section>
				<title>DeviceLogin</title>
				<para>
					After the base XMPP login the device has to discover the contactJID for the Central Server
					The Device then does a "DeviceLogin" which registers the Device with the Server.
					<simplelist>
						<member>
							- The registration process includes publishing its userJID as the contactJID for the XMPPResource
						</member>
						<member>
							- Device version number and licensing is also checked at this time
						</member>
						<member>
							- The Device version number can be obtained from the Version section of the API document corresponding to the client implementation
						</member>
					</simplelist>
				</para>
				<para> This will change the status to not ready indicating that it has logged in but cannot participate in a session as a source or destination. </para>


				<example>
					<title>DevciceLoginRequest extended from AgentRequest</title>
					<programlisting>
            <![CDATA[
         <DeviceLoginRequestData serviceVersion="" softwareVersion="" assetTemplateTitle='' type='' ready=''>
			<DevicePrivateData></DevicePrivateData>
			<DevicePrivateKeyData></DevicePrivateKeyData>
			<DeviceAdminServiceInfo>
				<Port type='SrcPort/DstPort/NetworkPort/RelayPort/StorePort' id='1/2' ready='' maxInstanceCount='' streamType=''>
					<NetworkStatus />
					<DisplayConfig />
					<DisplayStatus />
				</Port>
			</DeviceAdminServiceInfo>
			<MediaServiceInfo>
			 	<StreamInfo/>
			</MediaServiceInfo>
			<LayoutServiceInfo>
				<StreamInfo/>
			</LayoutServiceInfo>
			<MediaStoreServiceInfo>
				<Dir uuid='' storeRevision=''/>		
			</MediaStoreServiceInfo>
		 </DeviceLoginRequestData>
]]>
          </programlisting>
				</example>
				<para>
					<itemizedlist>
						<listitem>
							<para>
								<parameter>serviceVersion - The service version of the software on the device (note this is different from software version)
								</parameter>
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>assetTemplateTitle - used if the device is to be dynamically created using a template
								</parameter>
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>type - device type
								</parameter>
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>ready - Flag indicating if all the resources are to be marked ready
								</parameter>
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>AssetPrivateData - data that is private to the device used to cache information to be retrieved on reboot
								</parameter>
							</para>
						</listitem>
						<listitem>
							<para>
								<parameter>AssetPrivateKeyData - the private key for the device which is used for authentication
								</parameter>
							</para>
						</listitem>

						<listitem>
							<para>
								<parameter>PortList - Sends the list of ports device owns</parameter>
								<itemizedlist>
									<listitem>
										<para>
											<parameter>Port: type - type of the port. SrcPort/DstPort/StorePort/RelayPort/NetworkPort
											</parameter>
										</para>
									</listitem>
									<listitem>
										<para>
											<parameter>Port: id - Id of the port
											</parameter>
										</para>
									</listitem>
									<listitem>
										<para>
											<parameter>Port: state - flag indicates mark the port state as Ready/NotReady
											</parameter>
										</para>
									</listitem>
									<listitem>
										<para>
											<parameter>Port: NetworkStatus - Flag includes the status of network (ipaddress/nat etc etc). Applicalbe for NetworkPort
											</parameter>
										</para>
									</listitem>
									<listitem>
										<para>
											<parameter>Port: DisplayConfig - Flag icludes the display configuration information. Applicalbe for DstPort
											</parameter>
										</para>
									</listitem>
									<listitem>
										<para>
											<parameter>
												Port: DisplayStatus - Flag icludes the display status information. Applicalbe for DstPort
												<optional></optional>
											</parameter>
										</para>
									</listitem>
									<listitem>
										<para>
											<parameter>Port: DirList - List of the direcotries owned by StorePort
											</parameter>
											<itemizedlist>
												<listitem>
													<para>
														<parameter>Dir: UUID - Unique id to associate DB and Store entry</parameter>
													</para>
												</listitem>
												<listitem>
													<para>
														<parameter>Dir: storeRevision - indicates store at this revision. used in directory sync</parameter>
													</para>
												</listitem>
											</itemizedlist>
										</para>
									</listitem>
									<listitem>
										<para>
											<parameter>
												StreamInfo: - Flag icludes the list of the streams currenlty running												
											</parameter>
										</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
					</itemizedlist>
				</para>

				<para>
					If all is well, the response will contain the Device's
					private data(preferences) that has been configured/stored on
					the server.
					<simplelist>
						<member>
							- The current date/time is also returned
						</member>
					</simplelist>
				</para>
				<example>
					<title>Service Login Response extended from AgentResponse</title>
					<programlisting>
              <![CDATA[
  			<DeviceLoginResponseData>
				<Device NID="default.assetresourcelist.arl_43a559b7-3437-41c2-9f4a-4080743118f5">
					<PortList>
						<Port id="1" type="NetworkPort">
							<NetworkStatus />
						</Port>
						<Port id="1" maxInstanceCount="1" streamType="V2D" type="SrcPort"
							NID="default.mediastreamioportresourcelist.msioprl_5108d614-8a83-4490-899c-870863aeeb38" />
					</PortList>
					<DeviceXML
						NID="default.devicelist.dl_91a18a88-76b7-46af-8826-3210e084bbd8" />
					<DiscardStreamList>
						<MediaServiceInfo />
						<LayoutServiceInfo />
					</DiscardStreamList>
				</Device>
			</DeviceLoginResponseData>
]]>
            </programlisting>
				</example>
				<example>
					<title>Service Login Response error extended from AgentResponse</title>
					<programlisting>
              <![CDATA[
    	<Error code="1200">
    		<Description>Service Version Mismatch serverVersion="2.30.4"</Description>
    	</Error>
]]>
            </programlisting>
				</example>
			</section>
		</section>
	</chapter>
	<appendix>
    <title>Sample DeviceLogin Sequence</title>
    <para>
      The following are sample XMLs related to DeviceLogin.
    </para>
    <section>
      <title>DeviceLogin for a Tx</title>
      <para/>
	<example>
		<title>DeviceLogin Request for Tx</title>
		<programlisting>
              <![CDATA[
<message to='managementserver.localhost'>
	<x xmlns='com.ipvs.agentmessage'>
		<AgentMessage type="Request" to="managementserver.localhost"
			from="tx1@localhost/tx1">
			<Request serviceVer="">
				<Header serviceName="systemservice" requestName="DeviceLoginRequest"
					logLevel="0">
					<ClientData>clientdata</ClientData>
					<ClientCallback>com.barco.device.handler.DeviceAdmin.SCServiceReadyEventHandler
					</ClientCallback>
				</Header>
				<Data>
					<DeviceLoginRequestData serviceVersion="2.31.6"
						softwareVersion="3.20.r2.b6" assetTemplateTitle="" type="V2D-Tx-Device"
						ready="">
						<DevicePrivateData />
						<DevicePrivateKeyData>tx1</DevicePrivateKeyData>
						<DeviceAdminServiceInfo>
							<Port type="NetworkPort" id="1">
								<NetworkStatus>
									<Parameters>
										<Parameter name="LAN" type="UnsignedInteger">1</Parameter>
										<Parameter name="MTU Size" type="Integer">1500</Parameter>
										<Parameter name="Status" source="configuration"
											type="Boolean">True</Parameter>
										<Parameter name="IPAddress" type="String">10.51.50.1
										</Parameter>
										<Parameter name="Netmask" type="String">255.255.252.0
										</Parameter>
										<Parameter name="Broadcast" type="String">10.51.51.255
										</Parameter>
										<Parameter name="HardwareAddress" type="String">00:50:56:88:7D:50
										</Parameter>
										<Parameter name="Name" type="String">v2dtx</Parameter>
										<Parameter name="Primary" source="configuration"
											type="Boolean">True</Parameter>
										<Parameter name="RxBytes" source="counter" type="UnsignedInteger"
											units="bytes">21924565</Parameter>
										<Parameter name="TxBytes" source="counter" type="UnsignedInteger"
											units="bytes">14792158</Parameter>
										<Parameter name="RxPackets" source="counter" type="UnsignedInteger"
											units="number">72791</Parameter>
										<Parameter name="TxPackets" source="counter" type="UnsignedInteger"
											units="number">20455</Parameter>
										<Parameter name="RxErrors" source="counter" type="UnsignedInteger"
											units="number">2</Parameter>
										<Parameter name="TxErrors" source="errorcounter"
											type="UnsignedInteger" units="number">0</Parameter>
										<Parameter name="LinkDetected" type="String" />
										<Parameter name="AutoNegotiate" type="String" />
										<Parameter name="Speed" type="String" />
										<Parameter name="Duplex" type="String" />
										<Parameter name="LinkPartner" type="String" />
									</Parameters>
								</NetworkStatus>
							</Port>
							<Port type="RelayPort" id="1" streamType="V2D,MPEG,RTP,UDP" />
							<Port type="StorePort" id="1" maxInstanceCount="25"
								streamType="V2D,MPEG,RTP,UDP" />
						</DeviceAdminServiceInfo>
						<MediaServiceInfo>
							<StreamInfoList />
						</MediaServiceInfo>
						<LayoutServiceInfo>
							<StreamInfoList />
						</LayoutServiceInfo>
						<MediaStoreServiceInfo>
							<Dir uuid="" storeRevision="" />
						</MediaStoreServiceInfo>
					</DeviceLoginRequestData>
				</Data>
			</Request>
		</AgentMessage>
	</x>
</message>
]]>
    	</programlisting>
	</example>
	<example>
		<title>DeviceLogin Response for Tx</title>
		<programlisting>
              <![CDATA[

<message id="c8o9d-5988" to="tx1@localhost/tx1" from="managementserver.localhost">
	<x>
		<AgentMessage from="managementserver.localhost" to="tx1@localhost/tx1"
			type="Response" logLevel="">
			<Response serviceVer="2.31.6">
				<Header serviceName="systemservice" requestName="DeviceLoginRequest"
					userJID="tx1@localhost/tx1" deprecated="false" requestNID="tx1@localhost/tx1/28850512"
					state="8">
					<ClientData>clientdata</ClientData>
					<ClientCallback>com.barco.device.handler.DeviceAdmin.SCServiceReadyEventHandler
					</ClientCallback>
				</Header>
				<Data>
					<DeviceLoginResponseData>
						<Device
							NID="default.assetresourcelist.arl_2bc7c6b9-afff-476c-ba79-db0b3dc08049">
							<PortList>
								<Port id="1" type="NetworkPort">
									<NetworkStatus>
										<Parameters>
											<Parameter name="LAN" type="UnsignedInteger">1</Parameter>
											<Parameter name="MTU Size" type="Integer">1500</Parameter>
											<Parameter name="Status" source="configuration"
												type="Boolean">True</Parameter>
											<Parameter name="IPAddress" type="String">10.51.50.1
											</Parameter>
											<Parameter name="Netmask" type="String">255.255.252.0
											</Parameter>
											<Parameter name="Broadcast" type="String">10.51.51.255
											</Parameter>
											<Parameter name="HardwareAddress" type="String">00:50:56:88:7D:50
											</Parameter>
											<Parameter name="Name" type="String">v2dtx</Parameter>
											<Parameter name="Primary" source="configuration"
												type="Boolean">True</Parameter>
											<Parameter name="RxBytes" source="counter" type="UnsignedInteger"
												units="bytes">21924565</Parameter>
											<Parameter name="TxBytes" source="counter" type="UnsignedInteger"
												units="bytes">14792158</Parameter>
											<Parameter name="RxPackets" source="counter"
												type="UnsignedInteger" units="number">72791</Parameter>
											<Parameter name="TxPackets" source="counter"
												type="UnsignedInteger" units="number">20455</Parameter>
											<Parameter name="RxErrors" source="counter" type="UnsignedInteger"
												units="number">2</Parameter>
											<Parameter name="TxErrors" source="errorcounter"
												type="UnsignedInteger" units="number">0</Parameter>
											<Parameter name="LinkDetected" type="String" />
											<Parameter name="AutoNegotiate" type="String" />
											<Parameter name="Speed" type="String" />
											<Parameter name="Duplex" type="String" />
											<Parameter name="LinkPartner" type="String" />
										</Parameters>
									</NetworkStatus>
								</Port>
								<Port id="1" maxInstanceCount="1" streamType="V2D" type="SrcPort"
									NID="default.mediastreamsrcportresourcelist.mssprl_bab42fb3-9de7-4755-935c-d027a7ffe0f7" />
							</PortList>
							<DeviceXML
								NID="default.devicelist.dl_db0a7338-4c44-49ca-a6ca-315a355dd30d" />
							<DiscardStreamList>
								<MediaServiceInfo />
								<LayoutServiceInfo />
							</DiscardStreamList>
						</Device>
					</DeviceLoginResponseData>
				</Data>
				<Log />
			</Response>
		</AgentMessage>
	</x>
</message>
		
]]>
    	</programlisting>
	</example>
    </section>
    </appendix>
</book>