<query>
   <![CDATA["
let $startFrom := _STARTFROM_ 
let $countToFetch := _COUNTTOFETCH_ 
let $list2  := for $b in #OBJ_AssetAdminPolicyRule_OBJ# 
where $b [not( (AssetAdminRoleSet/AssetAdminObjectRole/RoleObject='SessionConfig') 
                or (AssetAdminRoleSet/AssetAdminObjectRole/RoleObject='Session' and (AssetAdminRoleSet/AssetAdminObjectRole/RoleAction='Delete' or AssetAdminRoleSet/AssetAdminObjectRole/RoleAction='Read') )
                or (AssetAdminRoleSet/AssetAdminObjectRole/RoleObject='MediaStreamSrcPortResource' and AssetAdminRoleSet/AssetAdminObjectRole/RoleAction='ViewFrom' ) 
                or (AssetAdminRoleSet/AssetAdminObjectRole/RoleObject='MediaStreamDstPortResource' and AssetAdminRoleSet/AssetAdminObjectRole/RoleAction='StreamTo' )
                )] 
and $b_WHEREXPATH_
order by _SORTXPATH_  _SORTORDER_
return $b
let $list3 := subsequence($list2, $startFrom, $countToFetch)
let $list := for $b in  $list3
return 
<record  
jsxid='{ data($b/@NID) }'  
index='{ data($b//order) }'  
NID='{ data($b/@NID)  }'
jsxtext='{ data($b//rulename) }' 
jsximg='{ if (data($b//valid) = 'true') 
              then 'images/icons/ok16.png' 
              else 'images/icons/off16.png' }'
jsxAssetPolicyType='{ if (data($b//allow) = 'true') 
                                  then 'Allow' 
                                  else 'Deny' }'
jsxAssetPolicyRoles='{data('')}'
jsxAssetPolicyUserFilter='{data('')}'
jsxAssetPolicyTargetFilter='{data('')}'
jsxAssetPolicyRuleKeyFilter='{data('')}'
jsxImageAssetPolicyexpandCollapse= '{data('images/icons/arrowDown.gif')}'
> 
</record>
let $records := <data jsxid='jsxroot'>{$list}</data>
let $result :=  insert-before($records,1, 
<GetListObjectResponseData> 
<ObjectCount> { count($list2)} </ObjectCount> 
<ObjectLastWhereEndCount>{$startFrom}</ObjectLastWhereEndCount> 
<CountToFetch>{$countToFetch}</CountToFetch> 
</GetListObjectResponseData>  )
 return <result>{$result}</result>"]]>
</query>