<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:err="urn:ietf:params:xml:ns:xmpp-stanzas">
	<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
	<xs:include schemaLocation="mediaroom.sessionservice.xsd"/>
	<xs:import namespace="urn:ietf:params:xml:ns:xmpp-stanzas" schemaLocation="ipvsstanzaerror.xsd"/>
	
	<!-- Begin IPVS Changes for xmpp.core.xsd-->
	
	<xs:element name="message">
		<xs:complexType>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="subject"/>
					<xs:element ref="body"/>
					<xs:element ref="thread"/>
				</xs:choice>
				<!--  Begin IPVS Changes -->
				<!-- 
          <xs:any     namespace='##other'
                      minOccurs='0'
                      maxOccurs='unbounded'
                      processContents='lax'/>
 -->
				<xs:element ref="x"/>
				<!--  End IPVS Changes -->
				<xs:element ref="error" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="from" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:NMTOKEN" use="optional"/>
			<xs:attribute name="to" type="xs:string" use="optional"/>
			<xs:attribute name="type" use="optional" default="normal">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="chat"/>
						<xs:enumeration value="error"/>
						<xs:enumeration value="groupchat"/>
						<xs:enumeration value="headline"/>
						<xs:enumeration value="normal"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute ref="xml:lang" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="body">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute ref="xml:lang" use="optional"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="subject">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute ref="xml:lang" use="optional"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="thread">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:NMTOKEN">
					<xs:attribute name="parent" type="xs:NMTOKEN" use="optional"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="presence">
		<xs:complexType>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="show"/>
					<xs:element ref="status"/>
					<xs:element ref="priority"/>
				</xs:choice>
				<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="error" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="from" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:NMTOKEN" use="optional"/>
			<xs:attribute name="to" type="xs:string" use="optional"/>
			<xs:attribute name="type" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="error"/>
						<xs:enumeration value="probe"/>
						<xs:enumeration value="subscribe"/>
						<xs:enumeration value="subscribed"/>
						<xs:enumeration value="unavailable"/>
						<xs:enumeration value="unsubscribe"/>
						<xs:enumeration value="unsubscribed"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute ref="xml:lang" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="show">
		<xs:simpleType>
			<xs:restriction base="xs:NMTOKEN">
				<xs:enumeration value="away"/>
				<xs:enumeration value="chat"/>
				<xs:enumeration value="dnd"/>
				<xs:enumeration value="xa"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="status">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="string1024">
					<xs:attribute ref="xml:lang" use="optional"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="string1024">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="1024"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="priority" type="xs:byte"/>
	
	<!-- End IPVS Changes for xmpp.core.xsd-->
	
	<!-- Begin IPVS Changes for jabber.client.xsd-->

	<xs:element name="iq">
		<xs:complexType>
			<xs:sequence>
				<!--  Begin IPVS Changes -->
				<!-- 
        <xs:any     namespace='##other'
                    minOccurs='0'
                    maxOccurs='1'
                    processContents='lax'/>
 -->
				<xs:element ref="query"/>
				<!--  End IPVS Changes -->
				<xs:element ref="error" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="from" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:NMTOKEN" use="required"/>
			<xs:attribute name="to" type="xs:string" use="optional"/>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="error"/>
						<xs:enumeration value="get"/>
						<xs:enumeration value="result"/>
						<xs:enumeration value="set"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute ref="xml:lang" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="error">
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="err:stanzaErrorGroup"/>
				<xs:element ref="err:text" minOccurs="0"/>
				<!--  Begin IPVS Changes -->
				<xs:element ref="x"/>
				<!--  End IPVS Changes -->
			</xs:sequence>
			<xs:attribute name="by" type="xs:string" use="optional"/>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="auth"/>
						<xs:enumeration value="cancel"/>
						<xs:enumeration value="continue"/>
						<xs:enumeration value="modify"/>
						<xs:enumeration value="wait"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	
	<!-- End IPVS Changes for jabber.client.xsd-->

	<!--  Begin Proxy  -->
  
	<xs:complexType name="clientType">
		<xs:sequence>
			<xs:element name="ipvserror" type="IpvsErrorType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="status">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="ok"/>
					<xs:enumeration value="error"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="loginType">
		<xs:attribute name="ip" type="xs:string"/>
		<xs:attribute name="user" type="xs:string"/>
		<xs:attribute name="password" type="xs:string"/>
		<xs:attribute name="resource" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="logType">
		<xs:attribute name="level">
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:enumeration value="1"/>
					<xs:enumeration value="2"/>
					<xs:enumeration value="3"/>
					<xs:enumeration value="4"/>
					<xs:enumeration value="5"/>
					<!--  1-FATAL, 2-ERROR, 3-WARNING, 4-INFO,  5-DEBUG -->
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="client" type="clientType"/>
	<xs:element name="login" type="loginType"/>
	<xs:element name="log" type="logType"/>
	<xs:element name="logout" type="xs:string"/>
	<xs:element name="heartbeat" type="xs:string"/>
	<xs:element name="help" type="xs:string"/>
	
	<!--  End Proxy  -->

</xs:schema>
