Basic Debugging using updated mediaroom.jar
------------------------------------------
1. Build mediaroom.jar from eclipse with you debug lines
2. copy mediaroom.jar to server:/home/onair/modules/mediaroom/public
3. Edit /home/onair/mscomponent/bin/_disable_mscomponent.rc to disable mscomp and enable app server agent
   b.mserverctl manual
   c.mserverctl restart
4. server:deviceappctl restart
4. Now tail /var/log/deviceapp/nohup.out

This will show you any println that you have added to the code in mediaroom.jar


Basic Debugging in device mode
-----------------------------

1. The test scripts can be run in a "device" mode where you do not need the appserver
2. You still need the xmppserver running on the managementserver
3. The appserver will be running inside your eclipse

4. run the admin_setup
5. Do the Basic Debugging steps(above)
6. run test_single_dir_teardown.exp

7. server:deviceappctl stop
8. eclipse:run TestApp with args "appserver=srcrelay1@localhost/srcrelay1"
9. 192.168.1.12:run test_single_dir_setup_device.exp

10. eclipse:run TestApp with args "appserver=tx1@localhost/tx1"
11. 192.168.1.12:run test_single_relay_session_device.exp

Remote debug using Eclipse
---------------------------
Semi-Automated setup
====================
I have updated this script to include remote debug setup:
 http://192.168.1.216/svn/svnroot/misc/trunk/create_debug_utils.sh

which creates debug_utils.tgz.

Copy this tar to MS/DMS (under /data root dir)
Untar it
run path.sh from this untar

Now that remote debug is setup, run devappctl_dbg script ($PATH is setup for this script) to start the JVM in debug mode.

path.sh needs to be executed once per reboot due to soft links. Rest of the steps above is just one time setup on a DMS.


Manual setup on MS/DMS 
======================
1. copy libjdwp.so, libnpt.so, libdt_socket.so (missing libs) from openjdk pkg to local java installation
2. IPVS application specific settings:
   a.Edit /home/onair/mscomponent/bin/_disable_mscomponent.rc to disable mscomp and enable app server agent
   b.mserverctl manual
   c.mserverctl restart
3. Launch Java using '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8001' (in devappctl)

Follow the standard remote debug procedure from Eclipse


Remote Debug on applet
======================
1) Open the Java Plug-in control panel (Start->Control Panel->Java Plugin [in XP])
2) Switch to the Advanced tab
3) In the "Java Runtime Parameters" text box copy and paste this:
-Djava.compiler=NONE -Xnoagent -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n
4) eclispe debug with socket attach 
	using paramters localhost/8000