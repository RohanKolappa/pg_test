###############################################################################
###                                                                         ###
### Copyright (c) 2003-2010 Barco N.V.                                      ###
###                                                                         ###
###############################################################################
###                                                                         ###
### This file is part of "JBS".                                             ###
###                                                                         ###
### "JBS" is free software; you can redistribute it and/or modify it        ###
### under the terms of the GNU Lesser General Public License as published   ###
### by the Free Software Foundation; either version 2.1 of the License, or  ###
### (at your option) any later version.                                     ###
###                                                                         ###
### "JBS" is distributed in the hope that it will be useful, but            ###
### WITHOUT ANY WARRANTY; without even the implied warranty of              ###
### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU       ###
### Lesser General Public License for more details.                         ###
###                                                                         ###
### You should have received a copy of the GNU Lesser General Public        ###
### License along with "JBS"; if not, write to the Free Software            ###
### Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  2111-1307 USA ###
###                                                                         ###
###############################################################################

target-name		:=	$(strip $(target-name))

###############################################################################
### WIN32

ifeq "$(JBS_PLATFORM)" "WIN32"

# [KOMA 2006-10-09: smarter in/export handling on Win32]

compile-defs		+=	_USRDLL					\
				PLUGIN_VERSION_MAJ=$(target-ver-maj)	\
				PLUGIN_VERSION_MED=$(target-ver-med)	\
				PLUGIN_VERSION_MIN=$(target-ver-min)	\
				$(target-name)_EXPORTS
#				$(tmp-dll-export-name)=JBS_DLL_EXPORT

link-flags		+=	/dll /incremental:no /machine:I386

tmp-full-name-nover	:=	$(link-prefix-dll)$(target-name)$(link-suffix-dll)
tmp-full-name-maj	:=	$(link-prefix-dll)$(target-name)-$(target-ver-maj)$(link-suffix-dll)
tmp-full-name-med	:=	$(link-prefix-dll)$(target-name)-$(target-ver-maj).$(target-ver-med)$(link-suffix-dll)
tmp-full-name-min	:=	$(link-prefix-dll)$(target-name)-$(target-ver-maj).$(target-ver-med).$(target-ver-min)$(link-suffix-dll)
tmp-full-name-lib	:=	$(link-prefix-lib)$(target-name)$(link-suffix-lib)
tmp-full-name-exp	:=	$(target-name).exp

$(tmp-full-name-maj) :		$(mod-cmp-temp-files)			\
				$(compile-final-objects)
	@$(call mod-echo-linking-lib,$(tmp-full-name-min))
	@"$(link-linker)"							\
		$(link-string)						\
		/out:"$(tmp-full-name-maj)" \
		/implib:"$(tmp-full-name-lib)" \
		$(compile-final-objects)

CLEAN-FILES		+=	$(tmp-full-name-lib)			\
				$(tmp-full-name-exp)

endif

###############################################################################
### LINUX

ifeq "$(JBS_UNIX_SYSTEM)" "1"

# [KOMA 2006-10-09: smarter in/export handling on Win32]

compile-defs		+=	PLUGIN_VERSION_MAJ=$(target-ver-maj)	\
				PLUGIN_VERSION_MED=$(target-ver-med)	\
				PLUGIN_VERSION_MIN=$(target-ver-min)	\
				$(target-name)_EXPORTS
#				$(tmp-dll-export-name)=

tmp-full-name-nover	:=	$(link-prefix-dll)$(target-name)$(link-suffix-dll)
tmp-full-name-maj	:=	$(tmp-full-name-nover).$(target-ver-maj)
tmp-full-name-med	:=	$(tmp-full-name-maj).$(target-ver-med)
tmp-full-name-min	:=	$(tmp-full-name-med).$(target-ver-min)

# $(warning === Doing "$(MAKECMDGOALS)"...)

ifneq ($(findstring local-target,$(MAKECMDGOALS))$(findstring $(tmp-full-name-maj),$(MAKECMDGOALS))$(findstring $(tmp-full-name-nover),$(MAKECMDGOALS)),)
-include $(mod-cmp-temp-depends)
endif

ifeq "$(JBS_PLATFORM)" "LINUX"
tmp-full-name-soname			:=	-Wl,-soname,$(tmp-full-name-maj)
endif

$(tmp-full-name-maj) :		$(mod-cmp-temp-files)			\
				$(compile-final-objects)
	@$(call mod-echo-linking-lib,$(tmp-full-name-min))
	@"$(link-linker)"						\
		-shared							\
		$(compile-final-objects)				\
		$(tmp-full-name-soname)		\
		$(link-string)						\
		-o $(tmp-full-name-maj)

endif

###############################################################################

$(tmp-full-name-med) :		$(tmp-full-name-maj)
	@$(call mod-utils-del-file,$(tmp-full-name-med))
	@$(call mod-utils-copy-file,$(tmp-full-name-maj),$(tmp-full-name-med))

$(tmp-full-name-min) :		$(tmp-full-name-med)
	@$(call mod-utils-del-file,$(tmp-full-name-min))
	@$(call mod-utils-copy-file,$(tmp-full-name-med),$(tmp-full-name-min))

$(tmp-full-name-nover) :	$(tmp-full-name-maj)
	@$(call mod-utils-del-file,$(tmp-full-name-nover))
	@$(call mod-utils-copy-file,$(tmp-full-name-maj),$(tmp-full-name-nover))

CLEAN-FILES		+=	$(tmp-full-name-maj)			\
				$(tmp-full-name-med)			\
				$(tmp-full-name-min)			\
				$(tmp-full-name-nover)

###############################################################################

local-target :		$(build-needed-libs)				\
			TMP-FULL-NAME

.PHONY: TMP-FULL-NAME

TMP-FULL-NAME:
	@$(call mod-utils-do-make, $(JBS_MAKEOPTS) $(tmp-full-name-nover) $(tmp-full-name-min))
#	@$(call mod-utils-do-make, $(JBS_MAKEOPTS) $(tmp-full-name-nover))
#	@$(call mod-utils-do-make, $(JBS_MAKEOTPS) $(tmp-full-name-min))

###############################################################################

local-defs :
	@cat < /dev/null > ./$(JBS_DEFS_FILE)
	@echo "###############################################################################" >> ./$(JBS_DEFS_FILE)
	@echo "##### $(JBS_CUR_DIR)" >> ./$(JBS_DEFS_FILE)
	@echo "###############################################################################" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-filename   := $(tmp-full-name-nover)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-test       := $(target-test)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-depfail    := $(target-depfail)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-deptype    := dll" >> ./$(JBS_DEFS_FILE)
	@#echo "$(target-name)-cxxdefs    := $(tmp-dll-export-name)=JBS_DLL_IMPORT $(target-cxxdefs)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-cxxdefs    := $(target-cxxdefs)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-addcxxstring    := $(target-cxxstring)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-addcstring    := $(target-cstring)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-incldirs   := $(foreach d,$(compile-final-incldirs),$(JBS_CUR_DIR)/$(d)) $(target-incldirs)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-linkdir    := $(JBS_CUR_DIR)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-addlibs    := $(target-libs)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-addlibdirs := $(target-libdirs)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-addlinkstring := $(target-linkstring)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-frameworks    := $(target-frameworks)" >> ./$(JBS_DEFS_FILE)
	@if [ -n "$(target-docdir)" ] ; then echo "$(target-name)-doxydir    := ./$(target-docdir)/$(target-doxydir)" >> ./$(JBS_DEFS_FILE) ; fi
	@echo "$(target-name)-deps       := $(target-deps)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-ver-maj    = $(mod-vers-def-maj)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-ver-med    = $(mod-vers-def-med)" >> ./$(JBS_DEFS_FILE)
	@echo "$(target-name)-ver-min    = $(mod-vers-def-min)" >> ./$(JBS_DEFS_FILE)
	@echo "" >> ./$(JBS_DEFS_FILE)

###############################################################################

mod-packs-target-libs		:=	$(target-libs)
mod-packs-target-libdirs	:=	$(target-libdirs)
mod-packs-target-sources	:=	$(target-sources)
mod-packs-target-headers	:=	$(compile-final-headers)
# mod-packs-target-cxxdefs	:=	$(tmp-dll-export-name)=JBS_DLL_IMPORT $(target-cxxdefs)
mod-packs-target-cxxdefs	:=	$(target-cxxdefs)
mod-packs-target-incldirs	:=	$(target-incldirs)
mod-packs-target-docdir		:=	$(target-docdir)

mod-packs-rte-filenames		:=	$(tmp-full-name-maj)
mod-packs-sdk-filenames		:=	$(tmp-full-name-maj)

ifeq "$(JBS_PLATFORM)" "WIN32"
mod-packs-sdk-filenames		+=	$(tmp-full-name-lib) \
					$(tmp-full-name-exp)
else
mod-packs-sdk-filenames		+=	$(tmp-full-name-nover)
endif

mod-packs-build-list		:=	src doc sdk rte

###############################################################################


