; Script generated by the HM NIS Edit Script Wizard.
;!define SCRIPT_DEBUG 1
; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "IPVS Collaboration Client"
!ifndef PRODUCT_VERSION
!define PRODUCT_VERSION "1.0.r0.b0"
!endif
!define PRODUCT_PUBLISHER "IP Video Systems"
!define PRODUCT_WEB_SITE "http://www.ipvideosys.com"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\IPVS_Collaboration_Client"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

!include "MUI2.nsh"
!include "FileFunc.nsh"
!include "WordFunc.nsh"
!include "IPVSFilePaths.nsh"
!include "IPVSCommonFunc.nsh"
!include "IPVSGuiFunc.nsh"
!include "IPVSCommonSections.nsh"
!include "IPVSMajorUpgrade.nsh"

RequestExecutionLevel highest

!insertmacro SETOUTFILE "OdysseyCinemaClientSetup"
Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
InstallDir "$PROGRAMFILES\${PRODUCT_PUBLISHER}\${PRODUCT_NAME}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
!ifdef SCRIPT_DEBUG
ShowInstDetails show
ShowUnInstDetails show
!else 
ShowInstDetails hide
ShowUnInstDetails hide
!endif
CRCCheck force
BrandingText " "

Var CollabClientInstalled

!macro IF_STXINSTALLED_SET_UPDATEFLAG
  Push $0

  !insertmacro RESETUPDATEFLAG "stx"
  !insertmacro IFDIREXISTS ${STXCLIENT_DSTDIR} $0
  ${If} $0 == "1"
    !insertmacro SETUPDATEFLAG "stx"
  ${EndIf}

  Pop $0
!macroend

!define MUI_CUSTOMFUNCTION_GUIINIT myGUIInit

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON ${IPVSICON}
!define MUI_UNICON ${IPVSICON}

; Welcome page
!define MUI_PAGE_CUSTOMFUNCTION_PRE STXPagePreFunc
!insertmacro MUI_PAGE_WELCOME

; License page
;!define MUI_PAGE_CUSTOMFUNCTION_PRE STXPagePreFunc
;!insertmacro MUI_PAGE_LICENSE "EULA.rtf"

; Directory page
!define MUI_PAGE_CUSTOMFUNCTION_PRE STXPagePreFunc
!define MUI_PAGE_CUSTOMFUNCTION_SHOW STXDirPageShowFunc
!insertmacro MUI_PAGE_DIRECTORY

; Component selection page
;!define MUI_PAGE_CUSTOMFUNCTION_PRE STXPagePreFunc
;!insertmacro MUI_PAGE_COMPONENTS

; Install Options page (e.g. shortcuts etc.)
Page custom STXOptionsDialogsPage OptionsDialogsPageLeave

; Update Page (whether this is a update)
Page custom STXUpdateDialogPage STXUpdateDialogPageLeave 

; Instfiles page
!insertmacro MUI_PAGE_INSTFILES

; Finish page
!define MUI_FINISHPAGE_RUN "mshta.exe"
!define MUI_FINISHPAGE_RUN_PARAMETERS "$\"${SETTINGS_SHORTCUT_TARGET}$\""
!define MUI_FINISHPAGE_RUN_TEXT "Launch the Settings page"
!define MUI_PAGE_CUSTOMFUNCTION_SHOW STXFinishPageShowFunc
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

InstType /COMPONENTSONLYONCUSTOM 
InstType "Complete"

Section "-JRE" SEC_JRE
  SetDetailsPrint listonly
  !insertmacro JRESECTION
SectionEnd

Section "-Common" SEC_COMMON
  SetDetailsPrint listonly

  Push $1

  !insertmacro CHECKUPDATEFLAG "stx" $1
  !insertmacro COMMONSECTION $1 $CBDesktop_State $CBStartMenu_State

  Pop $1
SectionEnd

Section "STX Client" SEC_STXCLIENT
  SetDetailsPrint listonly
  SectionIn 1

  Push $1

  SetOutPath "$INSTDIR"
  SetOverwrite on

  Delete "$INSTDIR\${STXICON}"
  File ${STXICON}
  
  SetOutPath "${JSXAPPS_DSTDIR}"
  RMDir /r "${STXCLIENT_DSTDIR}"
  File /r /x .svn "${STXCLIENT_SRCDIR}"
  
  Var /GLOBAL STXCLIENT_SHORTCUT_TARGET 
  StrCpy $STXCLIENT_SHORTCUT_TARGET "${STXCLIENT_DSTDIR}\live-index.html"

  !insertmacro CHECKUPDATEFLAG "stx" $1
  ${If} $1 == "0"

    SetShellVarContext all

    ${If} $CBStartMenu_State == ${BST_CHECKED}
      !insertmacro CREATESTARTMENUSHORTCUT "${PRODUCT_NAME}" \
          "${STXCLIENT_LNK}" \
          "'$PROGRAMFILES\Internet Explorer\iexplore.exe'" \
          "$STXCLIENT_SHORTCUT_TARGET" "$INSTDIR\${STXICON}"
    ${EndIf}

    ${If} $CBDesktop_State == ${BST_CHECKED}
      !insertmacro CREATEDESKTOPSHORTCUT "${STXCLIENT_LNK}" \
          "'$PROGRAMFILES\Internet Explorer\iexplore.exe'" \
          "$STXCLIENT_SHORTCUT_TARGET" "$INSTDIR\${STXICON}"
    ${EndIf}

  ${EndIf}

  Pop $1
SectionEnd

Section "-Player Section" SEC_PLAYER
  SetDetailsPrint listonly

  !insertmacro INSTALLPLAYER ${PLAYER_SRCDIR} ${PLAYER_DSTDIR} ${PLAYER_FILE} \
    ${MULTIMONS_FILE} $CollabClientInstalled

SectionEnd

Section -Post
  SetDetailsPrint listonly

  WriteUninstaller "$INSTDIR\uninst.exe"
  
  ${If} $CollabClientInstalled == "0"
    WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
        "DisplayName" "${PRODUCT_NAME}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
        "UninstallString" "$INSTDIR\uninst.exe"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
        "DisplayIcon" "$INSTDIR\${IPVSICON}"
    ; Not writing product version as workaround for bug 14567
    ;WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
    ;    "DisplayVersion" "${PRODUCT_VERSION}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
        "URLInfoAbout" "${PRODUCT_WEB_SITE}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
        "Publisher" "${PRODUCT_PUBLISHER}"
    WriteRegDWORD ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
        "NoModify" "1"
    WriteRegDWORD ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" \
        "NoRepair" "1"
  ${EndIf}
  
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "${PRODUCT_NAME} was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove ${PRODUCT_NAME} and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  SetDetailsPrint listonly

  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\*.ico"
  
  ; GI section
  RMDir /r /REBOOTOK "${GI_DSTDIR}"
  
  ; Player section
  
  !insertmacro UNINSTALLPLAYER ${PLAYER_DSTDIR} ${PLAYER_FILE} ${MULTIMONS_FILE}

  SetShellVarContext all
  ; Shortcuts, etc.
  !insertmacro DELETESTARTMENUSHORTCUT "${PRODUCT_NAME}" "${CLIENT_LNK}"
  !insertmacro DELETESTARTMENUSHORTCUT "${PRODUCT_NAME}" "${STXCLIENT_LNK}"
  !insertmacro DELETESTARTMENUSHORTCUT "${PRODUCT_NAME}" "${ADMIN_LNK}"
  !insertmacro DELETESTARTMENUSHORTCUT "${PRODUCT_NAME}" "${PROXY_LNK}"
  !insertmacro DELETESTARTMENUSHORTCUT "${PRODUCT_NAME}" "${SETTINGS_LNK}"
  RMDir /r /REBOOTOK "$SMPROGRAMS\${PRODUCT_NAME}"
  
  !insertmacro DELETEDESKTOPSHORTCUT "${CLIENT_LNK}"
  !insertmacro DELETEDESKTOPSHORTCUT "${STXCLIENT_LNK}"
  !insertmacro DELETEDESKTOPSHORTCUT "${ADMIN_LNK}"
  !insertmacro DELETEDESKTOPSHORTCUT "${PROXY_LNK}"
  !insertmacro DELETEDESKTOPSHORTCUT "${SETTINGS_LNK}"

  !insertmacro DELETEINSTDIR "${PRODUCT_PUBLISHER}"
  !insertmacro DELETECLIENT_REGKEYS
  Call un.RefreshDesktopWindow

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd

Function myGUIInit
  Push $R0
  Push $R3
  Push $R4
  
  Call IsCollabClientInstalled
  Pop $R0
  StrCpy $CollabClientInstalled $R0

  Call IsUserAdmin
  Pop $R0
  
  StrCpy $R3 "You must have administrator privileges to install ${PRODUCT_NAME}, Aborting installation"
  ${If} $CollabClientInstalled == "0"
    ${If} $R0 != "true"
      MessageBox MB_OK "$R3"
      Abort $R3
    ${EndIf}
  ${Else}
    !insertmacro BACKUPFILE "${PREFS_DSTFILE}" "${IPVSDATADIR}"
    !insertmacro GETPRODUCTVERSION ${VERSION_DSTFILE} $R3
    !insertmacro COMPAREVERSION ${IPVSUPGRADE_VERSION} $R3 $R4    
    ${If} $R4 == 1
        StrCpy $R4 "This update of ${PRODUCT_NAME} requires that you first uninstall the previous version."
        MessageBox MB_OK "$R4"
        Abort $R4
    ${EndIf}
  ${EndIf}

  ${If} $CollabClientInstalled == "0"
    ; Change default installation dir to root drive
    ${GetRoot} $PROGRAMFILES $R0
    StrCpy $INSTDIR "$R0\${PRODUCT_PUBLISHER}\${PRODUCT_NAME}"
  ${EndIf}

  !insertmacro IF_STXINSTALLED_SET_UPDATEFLAG

  ; Make the STARTMENU and DESKTOP shortcut options on by default in the 
  ; Options dialog page
  StrCpy $CBStartMenu_State ${BST_CHECKED}
  StrCpy $CBDesktop_State   ${BST_CHECKED}
  
  Pop $R4
  Pop $R3
  Pop $R0
FunctionEnd

Function STXUpdateDialogPage

  Push $0
  !insertmacro CHECKUPDATEFLAG "stx" $0
  ${If} $0 == "0"
      Pop $0
      Abort 
  ${EndIf}

  !insertmacro HIDEBACKBUTTON

  !insertmacro MUI_HEADER_TEXT "Update Wizard" \
  "Setup has detected that ${PRODUCT_NAME} is already installed. Proceed with update?"

  nsDialogs::Create 1018
  Pop $0

  ${If} $0 == error
    Abort
  ${EndIf}

  nsDialogs::Show

  Pop $0
FunctionEnd

Function STXUpdateDialogPageLeave

FunctionEnd

Function STXPagePreFunc

    Push $0
    !insertmacro CHECKUPDATEFLAG "stx" $0
    ${If} $0 == "1"
        Pop $0
        Abort 
    ${EndIf}
    
    Pop $0

FunctionEnd

Function STXDirPageShowFunc

  Var /GLOBAL hwnd
  Var /GLOBAL item

  ${If} $CollabClientInstalled == "1"
    FindWindow $hwnd "#32770" "" $HWNDPARENT
    GetDlgItem $item $hwnd 1019
    EnableWindow $item 0

    GetDlgItem $item $hwnd 1020
    EnableWindow $item 0

    GetDlgItem $item $hwnd 1001
    EnableWindow $item 0
  
    GetDlgItem $item $hwnd 1006
    SendMessage $item ${WM_SETTEXT} 0 "STR:Files will be installed in the below folder because another collaboration client is already installed there."
  ${EndIf}
FunctionEnd

Function STXOptionsDialogsPage

  Push $0
  !insertmacro CHECKUPDATEFLAG "stx" $0
  ${If} $0 == "1"
      Pop $0
      Abort 
  ${EndIf}

  Pop $0

  Call OptionsDialogsPage

FunctionEnd

Function STXFinishPageShowFunc
    Push $0
    
    !insertmacro CHECKUPDATEFLAG "stx" $0
    ${If} $0 == "1"
        SendMessage $mui.Finishpage.Text ${WM_SETTEXT} 0 \
            "STR:Updates have been successfully applied."
        ;SendMessage $mui.FinishPage.Run ${BM_SETCHECK} ${BST_UNCHECKED} 0
        ;ShowWindow $mui.Finishpage.Run ${SW_HIDE}
        EnableWindow $mui.Finishpage.Run 0
    ${EndIf}
    
    Pop $0
FunctionEnd

